{
	"id": "25ed68166ed7e7a5fe24bc6b7d8d48ee",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/base/ReentrancyLock.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.8.24;\r\n\r\nimport {Locker} from \"../libraries/Locker.sol\";\r\n\r\n/// @notice A transient reentrancy lock, that stores the caller's address as the lock\r\ncontract ReentrancyLock {\r\n    error ContractLocked();\r\n\r\n    modifier isNotLocked() {\r\n        if (Locker.get() != address(0)) revert ContractLocked();\r\n        Locker.set(msg.sender);\r\n        _;\r\n        Locker.set(address(0));\r\n    }\r\n\r\n    function _getLocker() internal view returns (address) {\r\n        return Locker.get();\r\n    }\r\n}\r\n"
			},
			"src/libraries/Locker.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.8.24;\r\n\r\n/// @notice This is a temporary library that allows us to use transient storage (tstore/tload)\r\n/// TODO: This library can be deleted when we have the transient keyword support in solidity.\r\nlibrary Locker {\r\n    // The slot holding the locker state, transiently. bytes32(uint256(keccak256(\"LockedBy\")) - 1)\r\n    bytes32 constant LOCKED_BY_SLOT = 0x0aedd6bde10e3aa2adec092b02a3e3e805795516cda41f27aa145b8f300af87a;\r\n\r\n    function set(address locker) internal {\r\n        assembly {\r\n            tstore(LOCKED_BY_SLOT, locker)\r\n        }\r\n    }\r\n\r\n    function get() internal view returns (address locker) {\r\n        assembly {\r\n            locker := tload(LOCKED_BY_SLOT)\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/base/ReentrancyLock.sol": {
				"ReentrancyLock": {
					"abi": [
						{
							"inputs": [],
							"name": "ContractLocked",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/base/ReentrancyLock.sol\":212:552  contract ReentrancyLock {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/base/ReentrancyLock.sol\":212:552  contract ReentrancyLock {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209444ee4118e16cafdbaf1bffc2d3917e5878af6e9a3149b5a59dac10f2cea92964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea26469706673582212209444ee4118e16cafdbaf1bffc2d3917e5878af6e9a3149b5a59dac10f2cea92964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 PREVRANDAO 0xEE COINBASE XOR 0xE1 PUSH13 0xAFDBAF1BFFC2D3917E5878AF6E SWAP11 BALANCE BLOBHASH 0xB5 0xA5 SWAP14 0xAC LT CALLCODE 0xCE 0xA9 0x29 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "212:340:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea26469706673582212209444ee4118e16cafdbaf1bffc2d3917e5878af6e9a3149b5a59dac10f2cea92964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 PREVRANDAO 0xEE COINBASE XOR 0xE1 PUSH13 0xAFDBAF1BFFC2D3917E5878AF6E SWAP11 BALANCE BLOBHASH 0xB5 0xA5 SWAP14 0xAC LT CALLCODE 0xCE 0xA9 0x29 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "212:340:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"_getLocker()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 212,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 212,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 212,
									"end": 552,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 212,
									"end": 552,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 212,
									"end": 552,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 212,
									"end": 552,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 212,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 212,
									"end": 552,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 212,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 552,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 212,
									"end": 552,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 212,
									"end": 552,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 212,
									"end": 552,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 212,
									"end": 552,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 212,
									"end": 552,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 552,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 212,
									"end": 552,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 552,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 212,
									"end": 552,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 552,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209444ee4118e16cafdbaf1bffc2d3917e5878af6e9a3149b5a59dac10f2cea92964736f6c634300081a0033",
									".code": [
										{
											"begin": 212,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 212,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 212,
											"end": 552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 552,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"src/base/ReentrancyLock.sol",
								"src/libraries/Locker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ContractLocked\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A transient reentrancy lock, that stores the caller's address as the lock\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/base/ReentrancyLock.sol\":\"ReentrancyLock\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/base/ReentrancyLock.sol\":{\"keccak256\":\"0x11ec447ef959cb5afe1fb2761483a8c786350adc3aceb677d713da594bc90bff\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://cda8d1bc5483c612c67699ae1235cfc506f7503428f25f0d95ad30191cd2e95f\",\"dweb:/ipfs/QmXdZ54bBDpKJUuy9RV2oenmshennsoyfCmmMo3ksi7R5v\"]},\"src/libraries/Locker.sol\":{\"keccak256\":\"0x33bd4c64f75c81b27d9912ded9a6d935df92aec2684eb16555f03892c86ab180\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9225bf5bb390569169e45e12f17e467a37fdeadcc34d96929babd100e5f3502a\",\"dweb:/ipfs/QmdZeTjG43hxwjaJyydt57PrKydqt3v17sENj9w5nUYjyo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A transient reentrancy lock, that stores the caller's address as the lock",
						"version": 1
					}
				}
			},
			"src/libraries/Locker.sol": {
				"Locker": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/Locker.sol\":265:766  library Locker {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/Locker.sol\":265:766  library Locker {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122007f9fbf0fe234b5877df90402b9c7f9e9a74af16ae425f13d219d63c04f5c6d964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122007f9fbf0fe234b5877df90402b9c7f9e9a74af16ae425f13d219d63c04f5c6d964736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xF9 0xFB CREATE INVALID 0x23 0x4B PC PUSH24 0xDF90402B9C7F9E9A74AF16AE425F13D219D63C04F5C6D964 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "265:501:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122007f9fbf0fe234b5877df90402b9c7f9e9a74af16ae425f13d219d63c04f5c6d964736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xF9 0xFB CREATE INVALID 0x23 0x4B PC PUSH24 0xDF90402B9C7F9E9A74AF16AE425F13D219D63C04F5C6D964 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "265:501:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"get()": "infinite",
								"set(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 265,
									"end": 766,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 265,
									"end": 766,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122007f9fbf0fe234b5877df90402b9c7f9e9a74af16ae425f13d219d63c04f5c6d964736f6c634300081a0033",
									".code": [
										{
											"begin": 265,
											"end": 766,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 265,
											"end": 766,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 265,
											"end": 766,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 265,
											"end": 766,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 265,
											"end": 766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 265,
											"end": 766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 265,
											"end": 766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 265,
											"end": 766,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"src/base/ReentrancyLock.sol",
								"src/libraries/Locker.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is a temporary library that allows us to use transient storage (tstore/tload) TODO: This library can be deleted when we have the transient keyword support in solidity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/Locker.sol\":\"Locker\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/Locker.sol\":{\"keccak256\":\"0x33bd4c64f75c81b27d9912ded9a6d935df92aec2684eb16555f03892c86ab180\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9225bf5bb390569169e45e12f17e467a37fdeadcc34d96929babd100e5f3502a\",\"dweb:/ipfs/QmdZeTjG43hxwjaJyydt57PrKydqt3v17sENj9w5nUYjyo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This is a temporary library that allows us to use transient storage (tstore/tload) TODO: This library can be deleted when we have the transient keyword support in solidity.",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2394",
				"formattedMessage": "Warning: Transient storage as defined by EIP-1153 can break the composability of smart contracts: Since transient storage is cleared only at the end of the transaction and not at the end of the outermost call frame to the contract within a transaction, your contract may unintentionally misbehave when invoked multiple times in a complex transaction. To avoid this, be sure to clear all transient storage at the end of any call to your contract. The use of transient storage for reentrancy guards that are cleared at the end of the call is safe.\n  --> src/libraries/Locker.sol:12:13:\n   |\n12 |             tstore(LOCKED_BY_SLOT, locker)\n   |             ^^^^^^\n\n",
				"message": "Transient storage as defined by EIP-1153 can break the composability of smart contracts: Since transient storage is cleared only at the end of the transaction and not at the end of the outermost call frame to the contract within a transaction, your contract may unintentionally misbehave when invoked multiple times in a complex transaction. To avoid this, be sure to clear all transient storage at the end of any call to your contract. The use of transient storage for reentrancy guards that are cleared at the end of the call is safe.",
				"severity": "warning",
				"sourceLocation": {
					"end": 575,
					"file": "src/libraries/Locker.sol",
					"start": 569
				},
				"type": "Warning"
			}
		],
		"sources": {
			"src/base/ReentrancyLock.sol": {
				"ast": {
					"absolutePath": "src/base/ReentrancyLock.sol",
					"exportedSymbols": {
						"Locker": [
							70
						],
						"ReentrancyLock": [
							49
						]
					},
					"id": 50,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:0"
						},
						{
							"absolutePath": "src/libraries/Locker.sol",
							"file": "../libraries/Locker.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 50,
							"sourceUnit": 71,
							"src": "74:47:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Locker",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 70,
										"src": "82:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ReentrancyLock",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "125:87:0",
								"text": "@notice A transient reentrancy lock, that stores the caller's address as the lock"
							},
							"fullyImplemented": true,
							"id": 49,
							"linearizedBaseContracts": [
								49
							],
							"name": "ReentrancyLock",
							"nameLocation": "221:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "6f5ffb7e",
									"id": 6,
									"name": "ContractLocked",
									"nameLocation": "249:14:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:0"
									},
									"src": "243:23:0"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "297:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 8,
																"name": "Locker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "312:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Locker_$70_$",
																	"typeString": "type(library Locker)"
																}
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "319:3:0",
															"memberName": "get",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 69,
															"src": "312:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "312:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "336:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 11,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "328:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "328:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "312:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 19,
												"nodeType": "IfStatement",
												"src": "308:55:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 16,
															"name": "ContractLocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "347:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "347:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 18,
													"nodeType": "RevertStatement",
													"src": "340:23:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 23,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "385:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "389:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "385:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 20,
															"name": "Locker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "374:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Locker_$70_$",
																"typeString": "type(library Locker)"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "381:3:0",
														"memberName": "set",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 62,
														"src": "374:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "374:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "374:22:0"
											},
											{
												"id": 27,
												"nodeType": "PlaceholderStatement",
												"src": "407:1:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "438:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "430:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 31,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "430:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "430:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 28,
															"name": "Locker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "419:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Locker_$70_$",
																"typeString": "type(library Locker)"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "426:3:0",
														"memberName": "set",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 62,
														"src": "419:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "419:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "419:22:0"
											}
										]
									},
									"id": 38,
									"name": "isNotLocked",
									"nameLocation": "283:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:0"
									},
									"src": "274:175:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "511:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 43,
															"name": "Locker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "529:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Locker_$70_$",
																"typeString": "type(library Locker)"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "536:3:0",
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 69,
														"src": "529:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "529:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 42,
												"id": 46,
												"nodeType": "Return",
												"src": "522:19:0"
											}
										]
									},
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getLocker",
									"nameLocation": "466:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "476:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "502:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:9:0"
									},
									"scope": 49,
									"src": "457:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 50,
							"src": "212:340:0",
							"usedErrors": [
								6
							],
							"usedEvents": []
						}
					],
					"src": "46:508:0"
				},
				"id": 0
			},
			"src/libraries/Locker.sol": {
				"ast": {
					"absolutePath": "src/libraries/Locker.sol",
					"exportedSymbols": {
						"Locker": [
							70
						]
					},
					"id": 71,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 51,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Locker",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 52,
								"nodeType": "StructuredDocumentation",
								"src": "74:191:1",
								"text": "@notice This is a temporary library that allows us to use transient storage (tstore/tload)\n TODO: This library can be deleted when we have the transient keyword support in solidity."
							},
							"fullyImplemented": true,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "Locker",
							"nameLocation": "273:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 55,
									"mutability": "constant",
									"name": "LOCKED_BY_SLOT",
									"nameLocation": "404:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "387:100:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 53,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "387:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830616564643662646531306533616132616465633039326230326133653365383035373935353136636461343166323761613134356238663330306166383761",
										"id": 54,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "421:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4943353333034393356903510118159653507767073813308548485745257023707575679098_by_1",
											"typeString": "int_const 4943...(68 digits omitted)...9098"
										},
										"value": "0x0aedd6bde10e3aa2adec092b02a3e3e805795516cda41f27aa145b8f300af87a"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "534:83:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "554:56:1",
													"nodeType": "YulBlock",
													"src": "554:56:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "LOCKED_BY_SLOT",
																		"nativeSrc": "576:14:1",
																		"nodeType": "YulIdentifier",
																		"src": "576:14:1"
																	},
																	{
																		"name": "locker",
																		"nativeSrc": "592:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "592:6:1"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "569:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "569:6:1"
																},
																"nativeSrc": "569:30:1",
																"nodeType": "YulFunctionCall",
																"src": "569:30:1"
															},
															"nativeSrc": "569:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "569:30:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 55,
														"isOffset": false,
														"isSlot": false,
														"src": "576:14:1",
														"valueSize": 1
													},
													{
														"declaration": 57,
														"isOffset": false,
														"isSlot": false,
														"src": "592:6:1",
														"valueSize": 1
													}
												],
												"id": 60,
												"nodeType": "InlineAssembly",
												"src": "545:65:1"
											}
										]
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "505:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "locker",
												"nameLocation": "517:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "509:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:16:1"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "534:0:1"
									},
									"scope": 70,
									"src": "496:121:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "679:84:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "699:57:1",
													"nodeType": "YulBlock",
													"src": "699:57:1",
													"statements": [
														{
															"nativeSrc": "714:31:1",
															"nodeType": "YulAssignment",
															"src": "714:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "LOCKED_BY_SLOT",
																		"nativeSrc": "730:14:1",
																		"nodeType": "YulIdentifier",
																		"src": "730:14:1"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "724:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "724:5:1"
																},
																"nativeSrc": "724:21:1",
																"nodeType": "YulFunctionCall",
																"src": "724:21:1"
															},
															"variableNames": [
																{
																	"name": "locker",
																	"nativeSrc": "714:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "714:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 55,
														"isOffset": false,
														"isSlot": false,
														"src": "730:14:1",
														"valueSize": 1
													},
													{
														"declaration": 65,
														"isOffset": false,
														"isSlot": false,
														"src": "714:6:1",
														"valueSize": 1
													}
												],
												"id": 67,
												"nodeType": "InlineAssembly",
												"src": "690:66:1"
											}
										]
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "634:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "637:2:1"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "locker",
												"nameLocation": "671:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "663:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:16:1"
									},
									"scope": 70,
									"src": "625:138:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 71,
							"src": "265:501:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:722:1"
				},
				"id": 1
			}
		}
	}
}