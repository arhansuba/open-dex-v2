{
	"id": "ec06f59e8a3c7e1d35d4c4ff644c9299",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/base/Multicall_v4.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity ^0.8.19;\r\n\r\nimport {IMulticall_v4} from \"../interfaces/IMulticall_v4.sol\";\r\n\r\n/// @title Multicall_v4\r\n/// @notice Enables calling multiple methods in a single call to the contract\r\nabstract contract Multicall_v4 is IMulticall_v4 {\r\n    /// @inheritdoc IMulticall_v4\r\n    function multicall(bytes[] calldata data) external payable override returns (bytes[] memory results) {\r\n        results = new bytes[](data.length);\r\n        for (uint256 i = 0; i < data.length; i++) {\r\n            (bool success, bytes memory result) = address(this).delegatecall(data[i]);\r\n\r\n            if (!success) {\r\n                // bubble up the revert reason\r\n                assembly {\r\n                    revert(add(result, 0x20), mload(result))\r\n                }\r\n            }\r\n\r\n            results[i] = result;\r\n        }\r\n    }\r\n}\r\n"
			},
			"src/interfaces/IMulticall_v4.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.19;\r\n\r\n/// @title Multicall_v4 interface\r\n/// @notice Enables calling multiple methods in a single call to the contract\r\ninterface IMulticall_v4 {\r\n    /// @notice Call multiple functions in the current contract and return the data from all of them if they all succeed\r\n    /// @dev The `msg.value` should not be trusted for any method callable from multicall.\r\n    /// @param data The encoded function data for each of the calls to make to this contract\r\n    /// @return results The results from each of the calls passed in via data\r\n    function multicall(bytes[] calldata data) external payable returns (bytes[] memory results);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/base/Multicall_v4.sol": {
				"Multicall_v4": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"multicall(bytes[])": {
								"details": "The `msg.value` should not be trusted for any method callable from multicall.",
								"params": {
									"data": "The encoded function data for each of the calls to make to this contract"
								},
								"returns": {
									"results": "The results from each of the calls passed in via data"
								}
							}
						},
						"title": "Multicall_v4",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"multicall(bytes[])": "ac9650d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}}},\"title\":\"Multicall_v4\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/base/Multicall_v4.sol\":\"Multicall_v4\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/base/Multicall_v4.sol\":{\"keccak256\":\"0x8befd2400c9d27e513441407acea11792631235a2a19fdbac45cca8cb5a8ab3d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://210b582a5a7ba3d8d70eb2f38363359895736397d2a86a2a2ceed34e70724c94\",\"dweb:/ipfs/QmVUcdj4g1uDcCBbohhkMjiyr2JQ6ECft4PYh4Cu5CxW6q\"]},\"src/interfaces/IMulticall_v4.sol\":{\"keccak256\":\"0xc82d5b42c1638b64b2763a2cf21e3b2443000778e6364af191e7a04aa66d6cf3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://42d04aa92ea63e9eadb044586e41f35c83c4245b8f56184a6a5d3848b072133b\",\"dweb:/ipfs/QmU456xk29h5FpjoC8JwrLaiyYTmPba4XMEbBAWW1CBPjs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"multicall(bytes[])": {
								"notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
							}
						},
						"notice": "Enables calling multiple methods in a single call to the contract",
						"version": 1
					}
				}
			},
			"src/interfaces/IMulticall_v4.sol": {
				"IMulticall_v4": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"multicall(bytes[])": {
								"details": "The `msg.value` should not be trusted for any method callable from multicall.",
								"params": {
									"data": "The encoded function data for each of the calls to make to this contract"
								},
								"returns": {
									"results": "The results from each of the calls passed in via data"
								}
							}
						},
						"title": "Multicall_v4 interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"multicall(bytes[])": "ac9650d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}}},\"title\":\"Multicall_v4 interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IMulticall_v4.sol\":\"IMulticall_v4\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IMulticall_v4.sol\":{\"keccak256\":\"0xc82d5b42c1638b64b2763a2cf21e3b2443000778e6364af191e7a04aa66d6cf3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://42d04aa92ea63e9eadb044586e41f35c83c4245b8f56184a6a5d3848b072133b\",\"dweb:/ipfs/QmU456xk29h5FpjoC8JwrLaiyYTmPba4XMEbBAWW1CBPjs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"multicall(bytes[])": {
								"notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
							}
						},
						"notice": "Enables calling multiple methods in a single call to the contract",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/base/Multicall_v4.sol": {
				"ast": {
					"absolutePath": "src/base/Multicall_v4.sol",
					"exportedSymbols": {
						"IMulticall_v4": [
							80
						],
						"Multicall_v4": [
							66
						]
					},
					"id": 67,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:0"
						},
						{
							"absolutePath": "src/interfaces/IMulticall_v4.sol",
							"file": "../interfaces/IMulticall_v4.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 67,
							"sourceUnit": 81,
							"src": "74:62:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IMulticall_v4",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 80,
										"src": "82:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IMulticall_v4",
										"nameLocations": [
											"278:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 80,
										"src": "278:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "278:13:0"
								}
							],
							"canonicalName": "Multicall_v4",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "140:104:0",
								"text": "@title Multicall_v4\n @notice Enables calling multiple methods in a single call to the contract"
							},
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66,
								80
							],
							"name": "Multicall_v4",
							"nameLocation": "262:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										79
									],
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "435:444:0",
										"statements": [
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 17,
														"name": "results",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "446:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
															"typeString": "bytes memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 21,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "468:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																		"typeString": "bytes calldata[] calldata"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "473:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "468:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "456:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 18,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "460:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																},
																"id": 19,
																"nodeType": "ArrayTypeName",
																"src": "460:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
																	"typeString": "bytes[]"
																}
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "456:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
															"typeString": "bytes memory[] memory"
														}
													},
													"src": "446:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
														"typeString": "bytes memory[] memory"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "446:34:0"
											},
											{
												"body": {
													"id": 62,
													"nodeType": "Block",
													"src": "533:339:0",
													"statements": [
														{
															"assignments": [
																38,
																40
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 38,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "554:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 62,
																	"src": "549:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 37,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "549:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 40,
																	"mutability": "mutable",
																	"name": "result",
																	"nameLocation": "576:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 62,
																	"src": "563:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 39,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "563:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 50,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 46,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "613:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "bytes calldata[] calldata"
																			}
																		},
																		"id": 48,
																		"indexExpression": {
																			"id": 47,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "618:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "613:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 43,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "594:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Multicall_v4_$66",
																					"typeString": "contract Multicall_v4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Multicall_v4_$66",
																					"typeString": "contract Multicall_v4"
																				}
																			],
																			"id": 42,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "586:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 41,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "586:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "586:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 45,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "600:12:0",
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"src": "586:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "586:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "548:73:0"
														},
														{
															"condition": {
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "642:8:0",
																"subExpression": {
																	"id": 51,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "643:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 55,
															"nodeType": "IfStatement",
															"src": "638:187:0",
															"trueBody": {
																"id": 54,
																"nodeType": "Block",
																"src": "652:173:0",
																"statements": [
																	{
																		"AST": {
																			"nativeSrc": "728:82:0",
																			"nodeType": "YulBlock",
																			"src": "728:82:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nativeSrc": "762:6:0",
																										"nodeType": "YulIdentifier",
																										"src": "762:6:0"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "770:4:0",
																										"nodeType": "YulLiteral",
																										"src": "770:4:0",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "758:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "758:3:0"
																								},
																								"nativeSrc": "758:17:0",
																								"nodeType": "YulFunctionCall",
																								"src": "758:17:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nativeSrc": "783:6:0",
																										"nodeType": "YulIdentifier",
																										"src": "783:6:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "777:5:0",
																									"nodeType": "YulIdentifier",
																									"src": "777:5:0"
																								},
																								"nativeSrc": "777:13:0",
																								"nodeType": "YulFunctionCall",
																								"src": "777:13:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "751:6:0",
																							"nodeType": "YulIdentifier",
																							"src": "751:6:0"
																						},
																						"nativeSrc": "751:40:0",
																						"nodeType": "YulFunctionCall",
																						"src": "751:40:0"
																					},
																					"nativeSrc": "751:40:0",
																					"nodeType": "YulExpressionStatement",
																					"src": "751:40:0"
																				}
																			]
																		},
																		"evmVersion": "cancun",
																		"externalReferences": [
																			{
																				"declaration": 40,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "762:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 40,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "783:6:0",
																				"valueSize": 1
																			}
																		],
																		"id": 53,
																		"nodeType": "InlineAssembly",
																		"src": "719:91:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 56,
																		"name": "results",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "841:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"typeString": "bytes memory[] memory"
																		}
																	},
																	"id": 58,
																	"indexExpression": {
																		"id": 57,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "849:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "841:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 59,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "854:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"src": "841:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 61,
															"nodeType": "ExpressionStatement",
															"src": "841:19:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "511:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 31,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "515:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "bytes calldata[] calldata"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "520:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "515:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "511:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 63,
												"initializationExpression": {
													"assignments": [
														27
													],
													"declarations": [
														{
															"constant": false,
															"id": 27,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "504:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 63,
															"src": "496:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 26,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "496:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 29,
													"initialValue": {
														"hexValue": "30",
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "508:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "496:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "528:3:0",
														"subExpression": {
															"id": 34,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "528:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 36,
													"nodeType": "ExpressionStatement",
													"src": "528:3:0"
												},
												"nodeType": "ForStatement",
												"src": "491:381:0"
											}
										]
									},
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "299:29:0",
										"text": "@inheritdoc IMulticall_v4"
									},
									"functionSelector": "ac9650d8",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "multicall",
									"nameLocation": "343:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 12,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "393:8:0"
									},
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "370:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "353:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 8,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "353:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 9,
													"nodeType": "ArrayTypeName",
													"src": "353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:23:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "426:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "411:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 13,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "411:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 14,
													"nodeType": "ArrayTypeName",
													"src": "411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:24:0"
									},
									"scope": 66,
									"src": "334:545:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 67,
							"src": "244:638:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:838:0"
				},
				"id": 0
			},
			"src/interfaces/IMulticall_v4.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IMulticall_v4.sol",
					"exportedSymbols": {
						"IMulticall_v4": [
							80
						]
					},
					"id": 81,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 68,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMulticall_v4",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 69,
								"nodeType": "StructuredDocumentation",
								"src": "68:114:1",
								"text": "@title Multicall_v4 interface\n @notice Enables calling multiple methods in a single call to the contract"
							},
							"fullyImplemented": false,
							"id": 80,
							"linearizedBaseContracts": [
								80
							],
							"name": "IMulticall_v4",
							"nameLocation": "192:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "213:381:1",
										"text": "@notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n @dev The `msg.value` should not be trusted for any method callable from multicall.\n @param data The encoded function data for each of the calls to make to this contract\n @return results The results from each of the calls passed in via data"
									},
									"functionSelector": "ac9650d8",
									"id": 79,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multicall",
									"nameLocation": "609:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "636:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "619:21:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 71,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "619:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 72,
													"nodeType": "ArrayTypeName",
													"src": "619:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:23:1"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "results",
												"nameLocation": "683:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "668:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 75,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "668:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 76,
													"nodeType": "ArrayTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:24:1"
									},
									"scope": 80,
									"src": "600:92:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 81,
							"src": "182:513:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:657:1"
				},
				"id": 1
			}
		}
	}
}