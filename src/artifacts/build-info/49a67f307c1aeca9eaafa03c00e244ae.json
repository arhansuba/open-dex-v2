{
	"id": "49a67f307c1aeca9eaafa03c00e244ae",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/OpenDexV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract MultiTokenPool {\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct LiquidityProvider {\r\n        mapping(address => uint256) tokenBalances; // Tracks each user's liquidity contribution per token\r\n    }\r\n\r\n    mapping(address => LiquidityProvider) private liquidityProviders; // Changed to private to avoid internal type error\r\n    mapping(address => uint256) public totalPoolLiquidity; // Tracks the total pool liquidity for each token\r\n    mapping(address => uint256) public tokenWeights; // Defines the weight for each supported token\r\n\r\n    address public governance;\r\n    address[] public supportedTokens;\r\n    uint256 public liquidityFee = 10; // 0.1% fee on liquidity operations (in basis points)\r\n\r\n    event LiquidityAdded(address indexed provider, address token, uint256 amount);\r\n    event LiquidityRemoved(address indexed provider, address token, uint256 amount);\r\n    event TokenWeightUpdated(address token, uint256 newWeight);\r\n\r\n    modifier onlyGovernance() {\r\n        require(msg.sender == governance, \"Not authorized\");\r\n        _;\r\n    }\r\n\r\n    constructor(address[] memory _tokens, uint256[] memory _weights, address _governance) {\r\n        require(_tokens.length == _weights.length, \"Token and weight mismatch\");\r\n        governance = _governance;\r\n        supportedTokens = _tokens;\r\n\r\n        for (uint256 i = 0; i < _tokens.length; i++) {\r\n            tokenWeights[_tokens[i]] = _weights[i];\r\n        }\r\n    }\r\n\r\n    // Add liquidity for supported tokens\r\n    function addLiquidity(address token, uint256 amount) external {\r\n        require(isSupportedToken(token), \"Token not supported\");\r\n\r\n        uint256 fee = (amount * liquidityFee) / 10000; // Calculate the fee (e.g., 0.1%)\r\n        uint256 amountAfterFee = amount - fee;\r\n\r\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amountAfterFee);\r\n        IERC20(token).safeTransferFrom(msg.sender, governance, fee); // Fee sent to governance\r\n\r\n        liquidityProviders[msg.sender].tokenBalances[token] += amountAfterFee;\r\n        totalPoolLiquidity[token] += amountAfterFee;\r\n\r\n        emit LiquidityAdded(msg.sender, token, amountAfterFee);\r\n    }\r\n\r\n    // Remove liquidity and refund the user\r\n    function removeLiquidity(address token, uint256 amount) external {\r\n        require(isSupportedToken(token), \"Token not supported\");\r\n        require(liquidityProviders[msg.sender].tokenBalances[token] >= amount, \"Insufficient balance\");\r\n\r\n        liquidityProviders[msg.sender].tokenBalances[token] -= amount;\r\n        totalPoolLiquidity[token] -= amount;\r\n\r\n        IERC20(token).safeTransfer(msg.sender, amount);\r\n        emit LiquidityRemoved(msg.sender, token, amount);\r\n    }\r\n\r\n    // Check if a token is supported\r\n    function isSupportedToken(address token) internal view returns (bool) {\r\n        for (uint256 i = 0; i < supportedTokens.length; i++) {\r\n            if (supportedTokens[i] == token) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Getter function for liquidity provider token balances\r\n    function getUserBalance(address user, address token) external view returns (uint256) {\r\n        return liquidityProviders[user].tokenBalances[token];\r\n    }\r\n\r\n    // Governance function to update token weights in the pool\r\n    function updateTokenWeight(address token, uint256 newWeight) external onlyGovernance {\r\n        require(isSupportedToken(token), \"Token not supported\");\r\n        tokenWeights[token] = newWeight;\r\n        emit TokenWeightUpdated(token, newWeight);\r\n    }\r\n\r\n    // Governance function to add a new supported token\r\n    function addSupportedToken(address token, uint256 weight) external onlyGovernance {\r\n        require(!isSupportedToken(token), \"Token already supported\");\r\n        supportedTokens.push(token);\r\n        tokenWeights[token] = weight;\r\n    }\r\n\r\n    // Governance function to remove a supported token\r\n    function removeSupportedToken(address token) external onlyGovernance {\r\n        require(isSupportedToken(token), \"Token not supported\");\r\n        for (uint256 i = 0; i < supportedTokens.length; i++) {\r\n            if (supportedTokens[i] == token) {\r\n                supportedTokens[i] = supportedTokens[supportedTokens.length - 1]; // Move last token to the current position\r\n                supportedTokens.pop(); // Remove the last element\r\n                break;\r\n            }\r\n        }\r\n        delete tokenWeights[token]; // Remove the weight for the token\r\n    }\r\n\r\n    // Governance function to adjust the liquidity fee\r\n    function setLiquidityFee(uint256 _liquidityFee) external onlyGovernance {\r\n        require(_liquidityFee <= 100, \"Fee too high\"); // Max 1% fee\r\n        liquidityFee = _liquidityFee;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"src/OpenDexV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"src/OpenDexV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/OpenDexV2.sol": {
				"MultiTokenPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_weights",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "_governance",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newWeight",
									"type": "uint256"
								}
							],
							"name": "TokenWeightUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "addSupportedToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getUserBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "removeSupportedToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_liquidityFee",
									"type": "uint256"
								}
							],
							"name": "setLiquidityFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "supportedTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenWeights",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "totalPoolLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "newWeight",
									"type": "uint256"
								}
							],
							"name": "updateTokenWeight",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/OpenDexV2.sol\":187:4930  contract MultiTokenPool {... */\n  mstore(0x40, 0x80)\n    /* \"src/OpenDexV2.sol\":837:839  10 */\n  0x0a\n    /* \"src/OpenDexV2.sol\":807:839  uint256 public liquidityFee = 10 */\n  0x05\n  sstore\n    /* \"src/OpenDexV2.sol\":1255:1624  constructor(address[] memory _tokens, uint256[] memory _weights, address _governance) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/OpenDexV2.sol\":1378:1386  _weights */\n  dup2\n    /* \"src/OpenDexV2.sol\":1378:1393  _weights.length */\n  mload\n    /* \"src/OpenDexV2.sol\":1360:1367  _tokens */\n  dup4\n    /* \"src/OpenDexV2.sol\":1360:1374  _tokens.length */\n  mload\n    /* \"src/OpenDexV2.sol\":1360:1393  _tokens.length == _weights.length */\n  eq\n    /* \"src/OpenDexV2.sol\":1352:1423  require(_tokens.length == _weights.length, \"Token and weight mismatch\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"src/OpenDexV2.sol\":1447:1458  _governance */\n  dup1\n    /* \"src/OpenDexV2.sol\":1434:1444  governance */\n  0x03\n  0x00\n    /* \"src/OpenDexV2.sol\":1434:1458  governance = _governance */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/OpenDexV2.sol\":1487:1494  _tokens */\n  dup3\n    /* \"src/OpenDexV2.sol\":1469:1484  supportedTokens */\n  0x04\n    /* \"src/OpenDexV2.sol\":1469:1494  supportedTokens = _tokens */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"src/OpenDexV2.sol\":1512:1521  uint256 i */\n  0x00\n    /* \"src/OpenDexV2.sol\":1507:1617  for (uint256 i = 0; i < _tokens.length; i++) {... */\ntag_11:\n    /* \"src/OpenDexV2.sol\":1531:1538  _tokens */\n  dup4\n    /* \"src/OpenDexV2.sol\":1531:1545  _tokens.length */\n  mload\n    /* \"src/OpenDexV2.sol\":1527:1528  i */\n  dup2\n    /* \"src/OpenDexV2.sol\":1527:1545  i < _tokens.length */\n  lt\n    /* \"src/OpenDexV2.sol\":1507:1617  for (uint256 i = 0; i < _tokens.length; i++) {... */\n  iszero\n  tag_12\n  jumpi\n    /* \"src/OpenDexV2.sol\":1594:1602  _weights */\n  dup3\n    /* \"src/OpenDexV2.sol\":1603:1604  i */\n  dup2\n    /* \"src/OpenDexV2.sol\":1594:1605  _weights[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_14\n  jumpi\n  tag_15\n  tag_16\n  jump\t// in\ntag_15:\ntag_14:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"src/OpenDexV2.sol\":1567:1579  tokenWeights */\n  0x02\n    /* \"src/OpenDexV2.sol\":1567:1591  tokenWeights[_tokens[i]] */\n  0x00\n    /* \"src/OpenDexV2.sol\":1580:1587  _tokens */\n  dup7\n    /* \"src/OpenDexV2.sol\":1588:1589  i */\n  dup5\n    /* \"src/OpenDexV2.sol\":1580:1590  _tokens[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_17\n  jumpi\n  tag_18\n  tag_16\n  jump\t// in\ntag_18:\ntag_17:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"src/OpenDexV2.sol\":1567:1591  tokenWeights[_tokens[i]] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"src/OpenDexV2.sol\":1567:1605  tokenWeights[_tokens[i]] = _weights[i] */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/OpenDexV2.sol\":1547:1550  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"src/OpenDexV2.sol\":1507:1617  for (uint256 i = 0; i < _tokens.length; i++) {... */\n  jump(tag_11)\ntag_12:\n  pop\n    /* \"src/OpenDexV2.sol\":1255:1624  constructor(address[] memory _tokens, uint256[] memory _weights, address _governance) {... */\n  pop\n  pop\n  pop\n    /* \"src/OpenDexV2.sol\":187:4930  contract MultiTokenPool {... */\n  jump(tag_19)\ntag_10:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_20\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_21:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_22\n  jumpi\n  dup3\n  mload\n  dup3\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_21)\ntag_22:\ntag_20:\n  pop\n  swap1\n  pop\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  pop\n  swap1\n  jump\t// out\ntag_24:\ntag_25:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_26\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_25)\ntag_26:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_27:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_28:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_29:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_30:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:559   */\ntag_31:\n    /* \"#utility.yul\":498:504   */\n  0x00\n    /* \"#utility.yul\":549:551   */\n  0x1f\n    /* \"#utility.yul\":545:552   */\n  not\n    /* \"#utility.yul\":540:542   */\n  0x1f\n    /* \"#utility.yul\":533:538   */\n  dup4\n    /* \"#utility.yul\":529:543   */\n  add\n    /* \"#utility.yul\":525:553   */\n  and\n    /* \"#utility.yul\":515:553   */\n  swap1\n  pop\n    /* \"#utility.yul\":457:559   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":565:745   */\ntag_32:\n    /* \"#utility.yul\":613:690   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":610:611   */\n  0x00\n    /* \"#utility.yul\":603:691   */\n  mstore\n    /* \"#utility.yul\":710:714   */\n  0x41\n    /* \"#utility.yul\":707:708   */\n  0x04\n    /* \"#utility.yul\":700:715   */\n  mstore\n    /* \"#utility.yul\":734:738   */\n  0x24\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":724:739   */\n  revert\n    /* \"#utility.yul\":751:1032   */\ntag_33:\n    /* \"#utility.yul\":834:861   */\n  tag_60\n    /* \"#utility.yul\":856:860   */\n  dup3\n    /* \"#utility.yul\":834:861   */\n  tag_31\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":826:832   */\n  dup2\n    /* \"#utility.yul\":822:862   */\n  add\n    /* \"#utility.yul\":964:970   */\n  dup2\n    /* \"#utility.yul\":952:962   */\n  dup2\n    /* \"#utility.yul\":949:971   */\n  lt\n    /* \"#utility.yul\":928:946   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":916:926   */\n  dup3\n    /* \"#utility.yul\":913:947   */\n  gt\n    /* \"#utility.yul\":910:972   */\n  or\n    /* \"#utility.yul\":907:995   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":975:993   */\n  tag_62\n  tag_32\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":907:995   */\ntag_61:\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n    /* \"#utility.yul\":1011:1013   */\n  0x40\n    /* \"#utility.yul\":1004:1026   */\n  mstore\n    /* \"#utility.yul\":794:1032   */\n  pop\n    /* \"#utility.yul\":751:1032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1038:1167   */\ntag_34:\n    /* \"#utility.yul\":1072:1078   */\n  0x00\n    /* \"#utility.yul\":1099:1119   */\n  tag_64\n  tag_27\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1089:1119   */\n  swap1\n  pop\n    /* \"#utility.yul\":1128:1161   */\n  tag_65\n    /* \"#utility.yul\":1156:1160   */\n  dup3\n    /* \"#utility.yul\":1148:1154   */\n  dup3\n    /* \"#utility.yul\":1128:1161   */\n  tag_33\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1038:1167   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1173:1484   */\ntag_35:\n    /* \"#utility.yul\":1250:1254   */\n  0x00\n    /* \"#utility.yul\":1340:1358   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1332:1338   */\n  dup3\n    /* \"#utility.yul\":1329:1359   */\n  gt\n    /* \"#utility.yul\":1326:1382   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1362:1380   */\n  tag_68\n  tag_32\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1326:1382   */\ntag_67:\n    /* \"#utility.yul\":1412:1416   */\n  0x20\n    /* \"#utility.yul\":1404:1410   */\n  dup3\n    /* \"#utility.yul\":1400:1417   */\n  mul\n    /* \"#utility.yul\":1392:1417   */\n  swap1\n  pop\n    /* \"#utility.yul\":1472:1476   */\n  0x20\n    /* \"#utility.yul\":1466:1470   */\n  dup2\n    /* \"#utility.yul\":1462:1477   */\n  add\n    /* \"#utility.yul\":1454:1477   */\n  swap1\n  pop\n    /* \"#utility.yul\":1173:1484   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1490:1607   */\ntag_36:\n    /* \"#utility.yul\":1599:1600   */\n  0x00\n    /* \"#utility.yul\":1596:1597   */\n  dup1\n    /* \"#utility.yul\":1589:1601   */\n  revert\n    /* \"#utility.yul\":1613:1739   */\ntag_37:\n    /* \"#utility.yul\":1650:1657   */\n  0x00\n    /* \"#utility.yul\":1690:1732   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1683:1688   */\n  dup3\n    /* \"#utility.yul\":1679:1733   */\n  and\n    /* \"#utility.yul\":1668:1733   */\n  swap1\n  pop\n    /* \"#utility.yul\":1613:1739   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1745:1841   */\ntag_38:\n    /* \"#utility.yul\":1782:1789   */\n  0x00\n    /* \"#utility.yul\":1811:1835   */\n  tag_72\n    /* \"#utility.yul\":1829:1834   */\n  dup3\n    /* \"#utility.yul\":1811:1835   */\n  tag_37\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1800:1835   */\n  swap1\n  pop\n    /* \"#utility.yul\":1745:1841   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1847:1969   */\ntag_39:\n    /* \"#utility.yul\":1920:1944   */\n  tag_74\n    /* \"#utility.yul\":1938:1943   */\n  dup2\n    /* \"#utility.yul\":1920:1944   */\n  tag_38\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1913:1918   */\n  dup2\n    /* \"#utility.yul\":1910:1945   */\n  eq\n    /* \"#utility.yul\":1900:1963   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1956:1957   */\n  dup1\n    /* \"#utility.yul\":1949:1961   */\n  revert\n    /* \"#utility.yul\":1900:1963   */\ntag_75:\n    /* \"#utility.yul\":1847:1969   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1975:2118   */\ntag_40:\n    /* \"#utility.yul\":2032:2037   */\n  0x00\n    /* \"#utility.yul\":2063:2069   */\n  dup2\n    /* \"#utility.yul\":2057:2070   */\n  mload\n    /* \"#utility.yul\":2048:2070   */\n  swap1\n  pop\n    /* \"#utility.yul\":2079:2112   */\n  tag_77\n    /* \"#utility.yul\":2106:2111   */\n  dup2\n    /* \"#utility.yul\":2079:2112   */\n  tag_39\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1975:2118   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2141:2873   */\ntag_41:\n    /* \"#utility.yul\":2248:2253   */\n  0x00\n    /* \"#utility.yul\":2273:2354   */\n  tag_79\n    /* \"#utility.yul\":2289:2353   */\n  tag_80\n    /* \"#utility.yul\":2346:2352   */\n  dup5\n    /* \"#utility.yul\":2289:2353   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2273:2354   */\n  tag_34\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2264:2354   */\n  swap1\n  pop\n    /* \"#utility.yul\":2374:2379   */\n  dup1\n    /* \"#utility.yul\":2403:2409   */\n  dup4\n    /* \"#utility.yul\":2396:2401   */\n  dup3\n    /* \"#utility.yul\":2389:2410   */\n  mstore\n    /* \"#utility.yul\":2437:2441   */\n  0x20\n    /* \"#utility.yul\":2430:2435   */\n  dup3\n    /* \"#utility.yul\":2426:2442   */\n  add\n    /* \"#utility.yul\":2419:2442   */\n  swap1\n  pop\n    /* \"#utility.yul\":2490:2494   */\n  0x20\n    /* \"#utility.yul\":2482:2488   */\n  dup5\n    /* \"#utility.yul\":2478:2495   */\n  mul\n    /* \"#utility.yul\":2470:2476   */\n  dup4\n    /* \"#utility.yul\":2466:2496   */\n  add\n    /* \"#utility.yul\":2519:2522   */\n  dup6\n    /* \"#utility.yul\":2511:2517   */\n  dup2\n    /* \"#utility.yul\":2508:2523   */\n  gt\n    /* \"#utility.yul\":2505:2627   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2538:2617   */\n  tag_82\n  tag_36\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2505:2627   */\ntag_81:\n    /* \"#utility.yul\":2653:2659   */\n  dup4\n    /* \"#utility.yul\":2636:2867   */\ntag_83:\n    /* \"#utility.yul\":2670:2676   */\n  dup2\n    /* \"#utility.yul\":2665:2668   */\n  dup2\n    /* \"#utility.yul\":2662:2677   */\n  lt\n    /* \"#utility.yul\":2636:2867   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2745:2748   */\n  dup1\n    /* \"#utility.yul\":2774:2822   */\n  tag_86\n    /* \"#utility.yul\":2818:2821   */\n  dup9\n    /* \"#utility.yul\":2806:2816   */\n  dup3\n    /* \"#utility.yul\":2774:2822   */\n  tag_40\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2769:2772   */\n  dup5\n    /* \"#utility.yul\":2762:2823   */\n  mstore\n    /* \"#utility.yul\":2852:2856   */\n  0x20\n    /* \"#utility.yul\":2847:2850   */\n  dup5\n    /* \"#utility.yul\":2843:2857   */\n  add\n    /* \"#utility.yul\":2836:2857   */\n  swap4\n  pop\n    /* \"#utility.yul\":2712:2867   */\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  0x20\n    /* \"#utility.yul\":2691:2694   */\n  dup2\n    /* \"#utility.yul\":2687:2701   */\n  add\n    /* \"#utility.yul\":2680:2701   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2867   */\n  jump(tag_83)\ntag_85:\n    /* \"#utility.yul\":2640:2661   */\n  pop\n    /* \"#utility.yul\":2254:2873   */\n  pop\n  pop\n    /* \"#utility.yul\":2141:2873   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2896:3281   */\ntag_42:\n    /* \"#utility.yul\":2978:2983   */\n  0x00\n    /* \"#utility.yul\":3027:3030   */\n  dup3\n    /* \"#utility.yul\":3020:3024   */\n  0x1f\n    /* \"#utility.yul\":3012:3018   */\n  dup4\n    /* \"#utility.yul\":3008:3025   */\n  add\n    /* \"#utility.yul\":3004:3031   */\n  slt\n    /* \"#utility.yul\":2994:3116   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3035:3114   */\n  tag_89\n  tag_30\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2994:3116   */\ntag_88:\n    /* \"#utility.yul\":3145:3151   */\n  dup2\n    /* \"#utility.yul\":3139:3152   */\n  mload\n    /* \"#utility.yul\":3170:3275   */\n  tag_90\n    /* \"#utility.yul\":3271:3274   */\n  dup5\n    /* \"#utility.yul\":3263:3269   */\n  dup3\n    /* \"#utility.yul\":3256:3260   */\n  0x20\n    /* \"#utility.yul\":3248:3254   */\n  dup7\n    /* \"#utility.yul\":3244:3261   */\n  add\n    /* \"#utility.yul\":3170:3275   */\n  tag_41\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3161:3275   */\n  swap2\n  pop\n    /* \"#utility.yul\":2984:3281   */\n  pop\n    /* \"#utility.yul\":2896:3281   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3287:3598   */\ntag_43:\n    /* \"#utility.yul\":3364:3368   */\n  0x00\n    /* \"#utility.yul\":3454:3472   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3446:3452   */\n  dup3\n    /* \"#utility.yul\":3443:3473   */\n  gt\n    /* \"#utility.yul\":3440:3496   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3476:3494   */\n  tag_93\n  tag_32\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3440:3496   */\ntag_92:\n    /* \"#utility.yul\":3526:3530   */\n  0x20\n    /* \"#utility.yul\":3518:3524   */\n  dup3\n    /* \"#utility.yul\":3514:3531   */\n  mul\n    /* \"#utility.yul\":3506:3531   */\n  swap1\n  pop\n    /* \"#utility.yul\":3586:3590   */\n  0x20\n    /* \"#utility.yul\":3580:3584   */\n  dup2\n    /* \"#utility.yul\":3576:3591   */\n  add\n    /* \"#utility.yul\":3568:3591   */\n  swap1\n  pop\n    /* \"#utility.yul\":3287:3598   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3604:3681   */\ntag_44:\n    /* \"#utility.yul\":3641:3648   */\n  0x00\n    /* \"#utility.yul\":3670:3675   */\n  dup2\n    /* \"#utility.yul\":3659:3675   */\n  swap1\n  pop\n    /* \"#utility.yul\":3604:3681   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3687:3809   */\ntag_45:\n    /* \"#utility.yul\":3760:3784   */\n  tag_96\n    /* \"#utility.yul\":3778:3783   */\n  dup2\n    /* \"#utility.yul\":3760:3784   */\n  tag_44\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3753:3758   */\n  dup2\n    /* \"#utility.yul\":3750:3785   */\n  eq\n    /* \"#utility.yul\":3740:3803   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3799:3800   */\n  0x00\n    /* \"#utility.yul\":3796:3797   */\n  dup1\n    /* \"#utility.yul\":3789:3801   */\n  revert\n    /* \"#utility.yul\":3740:3803   */\ntag_97:\n    /* \"#utility.yul\":3687:3809   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3815:3958   */\ntag_46:\n    /* \"#utility.yul\":3872:3877   */\n  0x00\n    /* \"#utility.yul\":3903:3909   */\n  dup2\n    /* \"#utility.yul\":3897:3910   */\n  mload\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3919:3952   */\n  tag_99\n    /* \"#utility.yul\":3946:3951   */\n  dup2\n    /* \"#utility.yul\":3919:3952   */\n  tag_45\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3815:3958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3981:4713   */\ntag_47:\n    /* \"#utility.yul\":4088:4093   */\n  0x00\n    /* \"#utility.yul\":4113:4194   */\n  tag_101\n    /* \"#utility.yul\":4129:4193   */\n  tag_102\n    /* \"#utility.yul\":4186:4192   */\n  dup5\n    /* \"#utility.yul\":4129:4193   */\n  tag_43\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4113:4194   */\n  tag_34\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4104:4194   */\n  swap1\n  pop\n    /* \"#utility.yul\":4214:4219   */\n  dup1\n    /* \"#utility.yul\":4243:4249   */\n  dup4\n    /* \"#utility.yul\":4236:4241   */\n  dup3\n    /* \"#utility.yul\":4229:4250   */\n  mstore\n    /* \"#utility.yul\":4277:4281   */\n  0x20\n    /* \"#utility.yul\":4270:4275   */\n  dup3\n    /* \"#utility.yul\":4266:4282   */\n  add\n    /* \"#utility.yul\":4259:4282   */\n  swap1\n  pop\n    /* \"#utility.yul\":4330:4334   */\n  0x20\n    /* \"#utility.yul\":4322:4328   */\n  dup5\n    /* \"#utility.yul\":4318:4335   */\n  mul\n    /* \"#utility.yul\":4310:4316   */\n  dup4\n    /* \"#utility.yul\":4306:4336   */\n  add\n    /* \"#utility.yul\":4359:4362   */\n  dup6\n    /* \"#utility.yul\":4351:4357   */\n  dup2\n    /* \"#utility.yul\":4348:4363   */\n  gt\n    /* \"#utility.yul\":4345:4467   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4378:4457   */\n  tag_104\n  tag_36\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4345:4467   */\ntag_103:\n    /* \"#utility.yul\":4493:4499   */\n  dup4\n    /* \"#utility.yul\":4476:4707   */\ntag_105:\n    /* \"#utility.yul\":4510:4516   */\n  dup2\n    /* \"#utility.yul\":4505:4508   */\n  dup2\n    /* \"#utility.yul\":4502:4517   */\n  lt\n    /* \"#utility.yul\":4476:4707   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4585:4588   */\n  dup1\n    /* \"#utility.yul\":4614:4662   */\n  tag_108\n    /* \"#utility.yul\":4658:4661   */\n  dup9\n    /* \"#utility.yul\":4646:4656   */\n  dup3\n    /* \"#utility.yul\":4614:4662   */\n  tag_46\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4609:4612   */\n  dup5\n    /* \"#utility.yul\":4602:4663   */\n  mstore\n    /* \"#utility.yul\":4692:4696   */\n  0x20\n    /* \"#utility.yul\":4687:4690   */\n  dup5\n    /* \"#utility.yul\":4683:4697   */\n  add\n    /* \"#utility.yul\":4676:4697   */\n  swap4\n  pop\n    /* \"#utility.yul\":4552:4707   */\n  pop\n    /* \"#utility.yul\":4536:4540   */\n  0x20\n    /* \"#utility.yul\":4531:4534   */\n  dup2\n    /* \"#utility.yul\":4527:4541   */\n  add\n    /* \"#utility.yul\":4520:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4476:4707   */\n  jump(tag_105)\ntag_107:\n    /* \"#utility.yul\":4480:4501   */\n  pop\n    /* \"#utility.yul\":4094:4713   */\n  pop\n  pop\n    /* \"#utility.yul\":3981:4713   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4736:5121   */\ntag_48:\n    /* \"#utility.yul\":4818:4823   */\n  0x00\n    /* \"#utility.yul\":4867:4870   */\n  dup3\n    /* \"#utility.yul\":4860:4864   */\n  0x1f\n    /* \"#utility.yul\":4852:4858   */\n  dup4\n    /* \"#utility.yul\":4848:4865   */\n  add\n    /* \"#utility.yul\":4844:4871   */\n  slt\n    /* \"#utility.yul\":4834:4956   */\n  tag_110\n  jumpi\n    /* \"#utility.yul\":4875:4954   */\n  tag_111\n  tag_30\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4834:4956   */\ntag_110:\n    /* \"#utility.yul\":4985:4991   */\n  dup2\n    /* \"#utility.yul\":4979:4992   */\n  mload\n    /* \"#utility.yul\":5010:5115   */\n  tag_112\n    /* \"#utility.yul\":5111:5114   */\n  dup5\n    /* \"#utility.yul\":5103:5109   */\n  dup3\n    /* \"#utility.yul\":5096:5100   */\n  0x20\n    /* \"#utility.yul\":5088:5094   */\n  dup7\n    /* \"#utility.yul\":5084:5101   */\n  add\n    /* \"#utility.yul\":5010:5115   */\n  tag_47\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5001:5115   */\n  swap2\n  pop\n    /* \"#utility.yul\":4824:5121   */\n  pop\n    /* \"#utility.yul\":4736:5121   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5127:6196   */\ntag_3:\n    /* \"#utility.yul\":5265:5271   */\n  0x00\n    /* \"#utility.yul\":5273:5279   */\n  dup1\n    /* \"#utility.yul\":5281:5287   */\n  0x00\n    /* \"#utility.yul\":5330:5332   */\n  0x60\n    /* \"#utility.yul\":5318:5327   */\n  dup5\n    /* \"#utility.yul\":5309:5316   */\n  dup7\n    /* \"#utility.yul\":5305:5328   */\n  sub\n    /* \"#utility.yul\":5301:5333   */\n  slt\n    /* \"#utility.yul\":5298:5417   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5336:5415   */\n  tag_115\n  tag_28\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5298:5417   */\ntag_114:\n    /* \"#utility.yul\":5477:5478   */\n  0x00\n    /* \"#utility.yul\":5466:5475   */\n  dup5\n    /* \"#utility.yul\":5462:5479   */\n  add\n    /* \"#utility.yul\":5456:5480   */\n  mload\n    /* \"#utility.yul\":5507:5525   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5499:5505   */\n  dup2\n    /* \"#utility.yul\":5496:5526   */\n  gt\n    /* \"#utility.yul\":5493:5610   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5529:5608   */\n  tag_117\n  tag_29\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5493:5610   */\ntag_116:\n    /* \"#utility.yul\":5634:5723   */\n  tag_118\n    /* \"#utility.yul\":5715:5722   */\n  dup7\n    /* \"#utility.yul\":5706:5712   */\n  dup3\n    /* \"#utility.yul\":5695:5704   */\n  dup8\n    /* \"#utility.yul\":5691:5713   */\n  add\n    /* \"#utility.yul\":5634:5723   */\n  tag_42\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5624:5723   */\n  swap4\n  pop\n    /* \"#utility.yul\":5427:5733   */\n  pop\n    /* \"#utility.yul\":5793:5795   */\n  0x20\n    /* \"#utility.yul\":5782:5791   */\n  dup5\n    /* \"#utility.yul\":5778:5796   */\n  add\n    /* \"#utility.yul\":5772:5797   */\n  mload\n    /* \"#utility.yul\":5824:5842   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5816:5822   */\n  dup2\n    /* \"#utility.yul\":5813:5843   */\n  gt\n    /* \"#utility.yul\":5810:5927   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":5846:5925   */\n  tag_120\n  tag_29\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5810:5927   */\ntag_119:\n    /* \"#utility.yul\":5951:6040   */\n  tag_121\n    /* \"#utility.yul\":6032:6039   */\n  dup7\n    /* \"#utility.yul\":6023:6029   */\n  dup3\n    /* \"#utility.yul\":6012:6021   */\n  dup8\n    /* \"#utility.yul\":6008:6030   */\n  add\n    /* \"#utility.yul\":5951:6040   */\n  tag_48\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5941:6040   */\n  swap3\n  pop\n    /* \"#utility.yul\":5743:6050   */\n  pop\n    /* \"#utility.yul\":6089:6091   */\n  0x40\n    /* \"#utility.yul\":6115:6179   */\n  tag_122\n    /* \"#utility.yul\":6171:6178   */\n  dup7\n    /* \"#utility.yul\":6162:6168   */\n  dup3\n    /* \"#utility.yul\":6151:6160   */\n  dup8\n    /* \"#utility.yul\":6147:6169   */\n  add\n    /* \"#utility.yul\":6115:6179   */\n  tag_40\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6105:6179   */\n  swap2\n  pop\n    /* \"#utility.yul\":6060:6189   */\n  pop\n    /* \"#utility.yul\":5127:6196   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":6202:6371   */\ntag_49:\n    /* \"#utility.yul\":6286:6297   */\n  0x00\n    /* \"#utility.yul\":6320:6326   */\n  dup3\n    /* \"#utility.yul\":6315:6318   */\n  dup3\n    /* \"#utility.yul\":6308:6327   */\n  mstore\n    /* \"#utility.yul\":6360:6364   */\n  0x20\n    /* \"#utility.yul\":6355:6358   */\n  dup3\n    /* \"#utility.yul\":6351:6365   */\n  add\n    /* \"#utility.yul\":6336:6365   */\n  swap1\n  pop\n    /* \"#utility.yul\":6202:6371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6377:6552   */\ntag_50:\n    /* \"#utility.yul\":6517:6544   */\n  0x546f6b656e20616e6420776569676874206d69736d6174636800000000000000\n    /* \"#utility.yul\":6513:6514   */\n  0x00\n    /* \"#utility.yul\":6505:6511   */\n  dup3\n    /* \"#utility.yul\":6501:6515   */\n  add\n    /* \"#utility.yul\":6494:6545   */\n  mstore\n    /* \"#utility.yul\":6377:6552   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6558:6924   */\ntag_51:\n    /* \"#utility.yul\":6700:6703   */\n  0x00\n    /* \"#utility.yul\":6721:6788   */\n  tag_126\n    /* \"#utility.yul\":6785:6787   */\n  0x19\n    /* \"#utility.yul\":6780:6783   */\n  dup4\n    /* \"#utility.yul\":6721:6788   */\n  tag_49\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6714:6788   */\n  swap2\n  pop\n    /* \"#utility.yul\":6797:6890   */\n  tag_127\n    /* \"#utility.yul\":6886:6889   */\n  dup3\n    /* \"#utility.yul\":6797:6890   */\n  tag_50\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6915:6917   */\n  0x20\n    /* \"#utility.yul\":6910:6913   */\n  dup3\n    /* \"#utility.yul\":6906:6918   */\n  add\n    /* \"#utility.yul\":6899:6918   */\n  swap1\n  pop\n    /* \"#utility.yul\":6558:6924   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6930:7349   */\ntag_8:\n    /* \"#utility.yul\":7096:7100   */\n  0x00\n    /* \"#utility.yul\":7134:7136   */\n  0x20\n    /* \"#utility.yul\":7123:7132   */\n  dup3\n    /* \"#utility.yul\":7119:7137   */\n  add\n    /* \"#utility.yul\":7111:7137   */\n  swap1\n  pop\n    /* \"#utility.yul\":7183:7192   */\n  dup2\n    /* \"#utility.yul\":7177:7181   */\n  dup2\n    /* \"#utility.yul\":7173:7193   */\n  sub\n    /* \"#utility.yul\":7169:7170   */\n  0x00\n    /* \"#utility.yul\":7158:7167   */\n  dup4\n    /* \"#utility.yul\":7154:7171   */\n  add\n    /* \"#utility.yul\":7147:7194   */\n  mstore\n    /* \"#utility.yul\":7211:7342   */\n  tag_129\n    /* \"#utility.yul\":7337:7341   */\n  dup2\n    /* \"#utility.yul\":7211:7342   */\n  tag_51\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7203:7342   */\n  swap1\n  pop\n    /* \"#utility.yul\":6930:7349   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7355:7535   */\ntag_16:\n    /* \"#utility.yul\":7403:7480   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7400:7401   */\n  0x00\n    /* \"#utility.yul\":7393:7481   */\n  mstore\n    /* \"#utility.yul\":7500:7504   */\n  0x32\n    /* \"#utility.yul\":7497:7498   */\n  0x04\n    /* \"#utility.yul\":7490:7505   */\n  mstore\n    /* \"#utility.yul\":7524:7528   */\n  0x24\n    /* \"#utility.yul\":7521:7522   */\n  0x00\n    /* \"#utility.yul\":7514:7529   */\n  revert\n    /* \"src/OpenDexV2.sol\":187:4930  contract MultiTokenPool {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/OpenDexV2.sol\":187:4930  contract MultiTokenPool {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6805d6ad\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x6805d6ad\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x76319190\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x98118cb4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa201ccf6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xab2f3ad4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc6255626\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x21faf184\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3053f0b2\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x357bf15c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4d8e3d3b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x56688700\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5aa6e675\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/OpenDexV2.sol\":3484:3737  function updateTokenWeight(address token, uint256 newWeight) external onlyGovernance {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"src/OpenDexV2.sol\":523:576  mapping(address => uint256) public totalPoolLiquidity */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/OpenDexV2.sol\":4738:4927  function setLiquidityFee(uint256 _liquidityFee) external onlyGovernance {... */\n    tag_5:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"src/OpenDexV2.sol\":3802:4040  function addSupportedToken(address token, uint256 weight) external onlyGovernance {... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      stop\n        /* \"src/OpenDexV2.sol\":1675:2336  function addLiquidity(address token, uint256 amount) external {... */\n    tag_7:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"src/OpenDexV2.sol\":736:761  address public governance */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/OpenDexV2.sol\":3256:3412  function getUserBalance(address user, address token) external view returns (uint256) {... */\n    tag_9:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/OpenDexV2.sol\":4104:4674  function removeSupportedToken(address token) external onlyGovernance {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"src/OpenDexV2.sol\":807:839  uint256 public liquidityFee = 10 */\n    tag_11:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/OpenDexV2.sol\":2389:2871  function removeLiquidity(address token, uint256 amount) external {... */\n    tag_12:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"src/OpenDexV2.sol\":633:680  mapping(address => uint256) public tokenWeights */\n    tag_13:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/OpenDexV2.sol\":768:800  address[] public supportedTokens */\n    tag_14:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/OpenDexV2.sol\":3484:3737  function updateTokenWeight(address token, uint256 newWeight) external onlyGovernance {... */\n    tag_19:\n        /* \"src/OpenDexV2.sol\":1198:1208  governance */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":1184:1208  msg.sender == governance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":1184:1194  msg.sender */\n      caller\n        /* \"src/OpenDexV2.sol\":1184:1208  msg.sender == governance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/OpenDexV2.sol\":1176:1227  require(msg.sender == governance, \"Not authorized\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"src/OpenDexV2.sol\":3588:3611  isSupportedToken(token) */\n      tag_67\n        /* \"src/OpenDexV2.sol\":3605:3610  token */\n      dup3\n        /* \"src/OpenDexV2.sol\":3588:3604  isSupportedToken */\n      tag_68\n        /* \"src/OpenDexV2.sol\":3588:3611  isSupportedToken(token) */\n      jump\t// in\n    tag_67:\n        /* \"src/OpenDexV2.sol\":3580:3635  require(isSupportedToken(token), \"Token not supported\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"src/OpenDexV2.sol\":3668:3677  newWeight */\n      dup1\n        /* \"src/OpenDexV2.sol\":3646:3658  tokenWeights */\n      0x02\n        /* \"src/OpenDexV2.sol\":3646:3665  tokenWeights[token] */\n      0x00\n        /* \"src/OpenDexV2.sol\":3659:3664  token */\n      dup5\n        /* \"src/OpenDexV2.sol\":3646:3665  tokenWeights[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/OpenDexV2.sol\":3646:3677  tokenWeights[token] = newWeight */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/OpenDexV2.sol\":3693:3729  TokenWeightUpdated(token, newWeight) */\n      0xc9bf4277eb054fe4fa82ff2e3b468a6300f4bc73a13794b02287f6d8282c998c\n        /* \"src/OpenDexV2.sol\":3712:3717  token */\n      dup3\n        /* \"src/OpenDexV2.sol\":3719:3728  newWeight */\n      dup3\n        /* \"src/OpenDexV2.sol\":3693:3729  TokenWeightUpdated(token, newWeight) */\n      mload(0x40)\n      tag_72\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/OpenDexV2.sol\":3484:3737  function updateTokenWeight(address token, uint256 newWeight) external onlyGovernance {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/OpenDexV2.sol\":523:576  mapping(address => uint256) public totalPoolLiquidity */\n    tag_23:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/OpenDexV2.sol\":4738:4927  function setLiquidityFee(uint256 _liquidityFee) external onlyGovernance {... */\n    tag_29:\n        /* \"src/OpenDexV2.sol\":1198:1208  governance */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":1184:1208  msg.sender == governance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":1184:1194  msg.sender */\n      caller\n        /* \"src/OpenDexV2.sol\":1184:1208  msg.sender == governance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/OpenDexV2.sol\":1176:1227  require(msg.sender == governance, \"Not authorized\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_65\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"src/OpenDexV2.sol\":4846:4849  100 */\n      0x64\n        /* \"src/OpenDexV2.sol\":4829:4842  _liquidityFee */\n      dup2\n        /* \"src/OpenDexV2.sol\":4829:4849  _liquidityFee <= 100 */\n      gt\n      iszero\n        /* \"src/OpenDexV2.sol\":4821:4866  require(_liquidityFee <= 100, \"Fee too high\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"src/OpenDexV2.sol\":4906:4919  _liquidityFee */\n      dup1\n        /* \"src/OpenDexV2.sol\":4891:4903  liquidityFee */\n      0x05\n        /* \"src/OpenDexV2.sol\":4891:4919  liquidityFee = _liquidityFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/OpenDexV2.sol\":4738:4927  function setLiquidityFee(uint256 _liquidityFee) external onlyGovernance {... */\n      pop\n      jump\t// out\n        /* \"src/OpenDexV2.sol\":3802:4040  function addSupportedToken(address token, uint256 weight) external onlyGovernance {... */\n    tag_32:\n        /* \"src/OpenDexV2.sol\":1198:1208  governance */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":1184:1208  msg.sender == governance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":1184:1194  msg.sender */\n      caller\n        /* \"src/OpenDexV2.sol\":1184:1208  msg.sender == governance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/OpenDexV2.sol\":1176:1227  require(msg.sender == governance, \"Not authorized\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_65\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"src/OpenDexV2.sol\":3904:3927  isSupportedToken(token) */\n      tag_85\n        /* \"src/OpenDexV2.sol\":3921:3926  token */\n      dup3\n        /* \"src/OpenDexV2.sol\":3904:3920  isSupportedToken */\n      tag_68\n        /* \"src/OpenDexV2.sol\":3904:3927  isSupportedToken(token) */\n      jump\t// in\n    tag_85:\n        /* \"src/OpenDexV2.sol\":3903:3927  !isSupportedToken(token) */\n      iszero\n        /* \"src/OpenDexV2.sol\":3895:3955  require(!isSupportedToken(token), \"Token already supported\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"src/OpenDexV2.sol\":3966:3981  supportedTokens */\n      0x04\n        /* \"src/OpenDexV2.sol\":3987:3992  token */\n      dup3\n        /* \"src/OpenDexV2.sol\":3966:3993  supportedTokens.push(token) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/OpenDexV2.sol\":4026:4032  weight */\n      dup1\n        /* \"src/OpenDexV2.sol\":4004:4016  tokenWeights */\n      0x02\n        /* \"src/OpenDexV2.sol\":4004:4023  tokenWeights[token] */\n      0x00\n        /* \"src/OpenDexV2.sol\":4017:4022  token */\n      dup5\n        /* \"src/OpenDexV2.sol\":4004:4023  tokenWeights[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/OpenDexV2.sol\":4004:4032  tokenWeights[token] = weight */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/OpenDexV2.sol\":3802:4040  function addSupportedToken(address token, uint256 weight) external onlyGovernance {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/OpenDexV2.sol\":1675:2336  function addLiquidity(address token, uint256 amount) external {... */\n    tag_35:\n        /* \"src/OpenDexV2.sol\":1756:1779  isSupportedToken(token) */\n      tag_91\n        /* \"src/OpenDexV2.sol\":1773:1778  token */\n      dup3\n        /* \"src/OpenDexV2.sol\":1756:1772  isSupportedToken */\n      tag_68\n        /* \"src/OpenDexV2.sol\":1756:1779  isSupportedToken(token) */\n      jump\t// in\n    tag_91:\n        /* \"src/OpenDexV2.sol\":1748:1803  require(isSupportedToken(token), \"Token not supported\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_71\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"src/OpenDexV2.sol\":1816:1827  uint256 fee */\n      0x00\n        /* \"src/OpenDexV2.sol\":1856:1861  10000 */\n      0x2710\n        /* \"src/OpenDexV2.sol\":1840:1852  liquidityFee */\n      sload(0x05)\n        /* \"src/OpenDexV2.sol\":1831:1837  amount */\n      dup4\n        /* \"src/OpenDexV2.sol\":1831:1852  amount * liquidityFee */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"src/OpenDexV2.sol\":1830:1861  (amount * liquidityFee) / 10000 */\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"src/OpenDexV2.sol\":1816:1861  uint256 fee = (amount * liquidityFee) / 10000 */\n      swap1\n      pop\n        /* \"src/OpenDexV2.sol\":1906:1928  uint256 amountAfterFee */\n      0x00\n        /* \"src/OpenDexV2.sol\":1940:1943  fee */\n      dup2\n        /* \"src/OpenDexV2.sol\":1931:1937  amount */\n      dup4\n        /* \"src/OpenDexV2.sol\":1931:1943  amount - fee */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"src/OpenDexV2.sol\":1906:1943  uint256 amountAfterFee = amount - fee */\n      swap1\n      pop\n        /* \"src/OpenDexV2.sol\":1956:2029  IERC20(token).safeTransferFrom(msg.sender, address(this), amountAfterFee) */\n      tag_100\n        /* \"src/OpenDexV2.sol\":1987:1997  msg.sender */\n      caller\n        /* \"src/OpenDexV2.sol\":2007:2011  this */\n      address\n        /* \"src/OpenDexV2.sol\":2014:2028  amountAfterFee */\n      dup4\n        /* \"src/OpenDexV2.sol\":1963:1968  token */\n      dup8\n        /* \"src/OpenDexV2.sol\":1956:1986  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_101\n      swap1\n        /* \"src/OpenDexV2.sol\":1956:2029  IERC20(token).safeTransferFrom(msg.sender, address(this), amountAfterFee) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"src/OpenDexV2.sol\":2040:2099  IERC20(token).safeTransferFrom(msg.sender, governance, fee) */\n      tag_102\n        /* \"src/OpenDexV2.sol\":2071:2081  msg.sender */\n      caller\n        /* \"src/OpenDexV2.sol\":2083:2093  governance */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":2095:2098  fee */\n      dup5\n        /* \"src/OpenDexV2.sol\":2047:2052  token */\n      dup8\n        /* \"src/OpenDexV2.sol\":2040:2070  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_101\n      swap1\n        /* \"src/OpenDexV2.sol\":2040:2099  IERC20(token).safeTransferFrom(msg.sender, governance, fee) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"src/OpenDexV2.sol\":2193:2207  amountAfterFee */\n      dup1\n        /* \"src/OpenDexV2.sol\":2138:2156  liquidityProviders */\n      0x00\n        /* \"src/OpenDexV2.sol\":2138:2168  liquidityProviders[msg.sender] */\n      dup1\n        /* \"src/OpenDexV2.sol\":2157:2167  msg.sender */\n      caller\n        /* \"src/OpenDexV2.sol\":2138:2168  liquidityProviders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/OpenDexV2.sol\":2138:2182  liquidityProviders[msg.sender].tokenBalances */\n      0x00\n      add\n        /* \"src/OpenDexV2.sol\":2138:2189  liquidityProviders[msg.sender].tokenBalances[token] */\n      0x00\n        /* \"src/OpenDexV2.sol\":2183:2188  token */\n      dup7\n        /* \"src/OpenDexV2.sol\":2138:2189  liquidityProviders[msg.sender].tokenBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/OpenDexV2.sol\":2138:2207  liquidityProviders[msg.sender].tokenBalances[token] += amountAfterFee */\n      dup3\n      dup3\n      sload\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/OpenDexV2.sol\":2247:2261  amountAfterFee */\n      dup1\n        /* \"src/OpenDexV2.sol\":2218:2236  totalPoolLiquidity */\n      0x01\n        /* \"src/OpenDexV2.sol\":2218:2243  totalPoolLiquidity[token] */\n      0x00\n        /* \"src/OpenDexV2.sol\":2237:2242  token */\n      dup7\n        /* \"src/OpenDexV2.sol\":2218:2243  totalPoolLiquidity[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/OpenDexV2.sol\":2218:2261  totalPoolLiquidity[token] += amountAfterFee */\n      dup3\n      dup3\n      sload\n      tag_105\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/OpenDexV2.sol\":2294:2304  msg.sender */\n      caller\n        /* \"src/OpenDexV2.sol\":2279:2328  LiquidityAdded(msg.sender, token, amountAfterFee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9d278c56ba6dc86a12eefe6b43112bd6e06648eb4ec0b950ee2d783d40e2acb4\n        /* \"src/OpenDexV2.sol\":2306:2311  token */\n      dup6\n        /* \"src/OpenDexV2.sol\":2313:2327  amountAfterFee */\n      dup4\n        /* \"src/OpenDexV2.sol\":2279:2328  LiquidityAdded(msg.sender, token, amountAfterFee) */\n      mload(0x40)\n      tag_106\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/OpenDexV2.sol\":1737:2336  {... */\n      pop\n      pop\n        /* \"src/OpenDexV2.sol\":1675:2336  function addLiquidity(address token, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/OpenDexV2.sol\":736:761  address public governance */\n    tag_37:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/OpenDexV2.sol\":3256:3412  function getUserBalance(address user, address token) external view returns (uint256) {... */\n    tag_43:\n        /* \"src/OpenDexV2.sol\":3332:3339  uint256 */\n      0x00\n        /* \"src/OpenDexV2.sol\":3359:3377  liquidityProviders */\n      dup1\n        /* \"src/OpenDexV2.sol\":3359:3383  liquidityProviders[user] */\n      0x00\n        /* \"src/OpenDexV2.sol\":3378:3382  user */\n      dup5\n        /* \"src/OpenDexV2.sol\":3359:3383  liquidityProviders[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/OpenDexV2.sol\":3359:3397  liquidityProviders[user].tokenBalances */\n      0x00\n      add\n        /* \"src/OpenDexV2.sol\":3359:3404  liquidityProviders[user].tokenBalances[token] */\n      0x00\n        /* \"src/OpenDexV2.sol\":3398:3403  token */\n      dup4\n        /* \"src/OpenDexV2.sol\":3359:3404  liquidityProviders[user].tokenBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/OpenDexV2.sol\":3352:3404  return liquidityProviders[user].tokenBalances[token] */\n      swap1\n      pop\n        /* \"src/OpenDexV2.sol\":3256:3412  function getUserBalance(address user, address token) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/OpenDexV2.sol\":4104:4674  function removeSupportedToken(address token) external onlyGovernance {... */\n    tag_47:\n        /* \"src/OpenDexV2.sol\":1198:1208  governance */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":1184:1208  msg.sender == governance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":1184:1194  msg.sender */\n      caller\n        /* \"src/OpenDexV2.sol\":1184:1208  msg.sender == governance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/OpenDexV2.sol\":1176:1227  require(msg.sender == governance, \"Not authorized\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_65\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"src/OpenDexV2.sol\":4192:4215  isSupportedToken(token) */\n      tag_112\n        /* \"src/OpenDexV2.sol\":4209:4214  token */\n      dup2\n        /* \"src/OpenDexV2.sol\":4192:4208  isSupportedToken */\n      tag_68\n        /* \"src/OpenDexV2.sol\":4192:4215  isSupportedToken(token) */\n      jump\t// in\n    tag_112:\n        /* \"src/OpenDexV2.sol\":4184:4239  require(isSupportedToken(token), \"Token not supported\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_71\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"src/OpenDexV2.sol\":4255:4264  uint256 i */\n      0x00\n        /* \"src/OpenDexV2.sol\":4250:4595  for (uint256 i = 0; i < supportedTokens.length; i++) {... */\n    tag_115:\n        /* \"src/OpenDexV2.sol\":4274:4289  supportedTokens */\n      0x04\n        /* \"src/OpenDexV2.sol\":4274:4296  supportedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/OpenDexV2.sol\":4270:4271  i */\n      dup2\n        /* \"src/OpenDexV2.sol\":4270:4296  i < supportedTokens.length */\n      lt\n        /* \"src/OpenDexV2.sol\":4250:4595  for (uint256 i = 0; i < supportedTokens.length; i++) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"src/OpenDexV2.sol\":4344:4349  token */\n      dup2\n        /* \"src/OpenDexV2.sol\":4322:4349  supportedTokens[i] == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":4322:4337  supportedTokens */\n      0x04\n        /* \"src/OpenDexV2.sol\":4338:4339  i */\n      dup3\n        /* \"src/OpenDexV2.sol\":4322:4340  supportedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_118\n      jumpi\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n    tag_118:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":4322:4349  supportedTokens[i] == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/OpenDexV2.sol\":4318:4584  if (supportedTokens[i] == token) {... */\n      tag_122\n      jumpi\n        /* \"src/OpenDexV2.sol\":4391:4406  supportedTokens */\n      0x04\n        /* \"src/OpenDexV2.sol\":4432:4433  1 */\n      0x01\n        /* \"src/OpenDexV2.sol\":4407:4422  supportedTokens */\n      0x04\n        /* \"src/OpenDexV2.sol\":4407:4429  supportedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/OpenDexV2.sol\":4407:4433  supportedTokens.length - 1 */\n      tag_123\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_123:\n        /* \"src/OpenDexV2.sol\":4391:4434  supportedTokens[supportedTokens.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_124\n      jumpi\n      tag_125\n      tag_120\n      jump\t// in\n    tag_125:\n    tag_124:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":4370:4385  supportedTokens */\n      0x04\n        /* \"src/OpenDexV2.sol\":4386:4387  i */\n      dup3\n        /* \"src/OpenDexV2.sol\":4370:4388  supportedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_127\n      jumpi\n      tag_128\n      tag_120\n      jump\t// in\n    tag_128:\n    tag_127:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"src/OpenDexV2.sol\":4370:4434  supportedTokens[i] = supportedTokens[supportedTokens.length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/OpenDexV2.sol\":4496:4511  supportedTokens */\n      0x04\n        /* \"src/OpenDexV2.sol\":4496:4517  supportedTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_130\n      jumpi\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n    tag_130:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"src/OpenDexV2.sol\":4563:4568  break */\n      jump(tag_116)\n        /* \"src/OpenDexV2.sol\":4318:4584  if (supportedTokens[i] == token) {... */\n    tag_122:\n        /* \"src/OpenDexV2.sol\":4298:4301  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"src/OpenDexV2.sol\":4250:4595  for (uint256 i = 0; i < supportedTokens.length; i++) {... */\n      jump(tag_115)\n    tag_116:\n      pop\n        /* \"src/OpenDexV2.sol\":4612:4624  tokenWeights */\n      0x02\n        /* \"src/OpenDexV2.sol\":4612:4631  tokenWeights[token] */\n      0x00\n        /* \"src/OpenDexV2.sol\":4625:4630  token */\n      dup3\n        /* \"src/OpenDexV2.sol\":4612:4631  tokenWeights[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/OpenDexV2.sol\":4605:4631  delete tokenWeights[token] */\n      0x00\n      swap1\n      sstore\n        /* \"src/OpenDexV2.sol\":4104:4674  function removeSupportedToken(address token) external onlyGovernance {... */\n      pop\n      jump\t// out\n        /* \"src/OpenDexV2.sol\":807:839  uint256 public liquidityFee = 10 */\n    tag_49:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"src/OpenDexV2.sol\":2389:2871  function removeLiquidity(address token, uint256 amount) external {... */\n    tag_53:\n        /* \"src/OpenDexV2.sol\":2473:2496  isSupportedToken(token) */\n      tag_135\n        /* \"src/OpenDexV2.sol\":2490:2495  token */\n      dup3\n        /* \"src/OpenDexV2.sol\":2473:2489  isSupportedToken */\n      tag_68\n        /* \"src/OpenDexV2.sol\":2473:2496  isSupportedToken(token) */\n      jump\t// in\n    tag_135:\n        /* \"src/OpenDexV2.sol\":2465:2520  require(isSupportedToken(token), \"Token not supported\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_71\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"src/OpenDexV2.sol\":2594:2600  amount */\n      dup1\n        /* \"src/OpenDexV2.sol\":2539:2557  liquidityProviders */\n      0x00\n        /* \"src/OpenDexV2.sol\":2539:2569  liquidityProviders[msg.sender] */\n      dup1\n        /* \"src/OpenDexV2.sol\":2558:2568  msg.sender */\n      caller\n        /* \"src/OpenDexV2.sol\":2539:2569  liquidityProviders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/OpenDexV2.sol\":2539:2583  liquidityProviders[msg.sender].tokenBalances */\n      0x00\n      add\n        /* \"src/OpenDexV2.sol\":2539:2590  liquidityProviders[msg.sender].tokenBalances[token] */\n      0x00\n        /* \"src/OpenDexV2.sol\":2584:2589  token */\n      dup5\n        /* \"src/OpenDexV2.sol\":2539:2590  liquidityProviders[msg.sender].tokenBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/OpenDexV2.sol\":2539:2600  liquidityProviders[msg.sender].tokenBalances[token] >= amount */\n      lt\n      iszero\n        /* \"src/OpenDexV2.sol\":2531:2625  require(liquidityProviders[msg.sender].tokenBalances[token] >= amount, \"Insufficient balance\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"src/OpenDexV2.sol\":2693:2699  amount */\n      dup1\n        /* \"src/OpenDexV2.sol\":2638:2656  liquidityProviders */\n      0x00\n        /* \"src/OpenDexV2.sol\":2638:2668  liquidityProviders[msg.sender] */\n      dup1\n        /* \"src/OpenDexV2.sol\":2657:2667  msg.sender */\n      caller\n        /* \"src/OpenDexV2.sol\":2638:2668  liquidityProviders[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/OpenDexV2.sol\":2638:2682  liquidityProviders[msg.sender].tokenBalances */\n      0x00\n      add\n        /* \"src/OpenDexV2.sol\":2638:2689  liquidityProviders[msg.sender].tokenBalances[token] */\n      0x00\n        /* \"src/OpenDexV2.sol\":2683:2688  token */\n      dup5\n        /* \"src/OpenDexV2.sol\":2638:2689  liquidityProviders[msg.sender].tokenBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/OpenDexV2.sol\":2638:2699  liquidityProviders[msg.sender].tokenBalances[token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_141\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_141:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/OpenDexV2.sol\":2739:2745  amount */\n      dup1\n        /* \"src/OpenDexV2.sol\":2710:2728  totalPoolLiquidity */\n      0x01\n        /* \"src/OpenDexV2.sol\":2710:2735  totalPoolLiquidity[token] */\n      0x00\n        /* \"src/OpenDexV2.sol\":2729:2734  token */\n      dup5\n        /* \"src/OpenDexV2.sol\":2710:2735  totalPoolLiquidity[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/OpenDexV2.sol\":2710:2745  totalPoolLiquidity[token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_142\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_142:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/OpenDexV2.sol\":2758:2804  IERC20(token).safeTransfer(msg.sender, amount) */\n      tag_143\n        /* \"src/OpenDexV2.sol\":2785:2795  msg.sender */\n      caller\n        /* \"src/OpenDexV2.sol\":2797:2803  amount */\n      dup3\n        /* \"src/OpenDexV2.sol\":2765:2770  token */\n      dup5\n        /* \"src/OpenDexV2.sol\":2758:2784  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_144\n      swap1\n        /* \"src/OpenDexV2.sol\":2758:2804  IERC20(token).safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"src/OpenDexV2.sol\":2837:2847  msg.sender */\n      caller\n        /* \"src/OpenDexV2.sol\":2820:2863  LiquidityRemoved(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x983e86fda8e7b1e2eae380201830eaf1cac55772e8e39583da349865e8178863\n        /* \"src/OpenDexV2.sol\":2849:2854  token */\n      dup4\n        /* \"src/OpenDexV2.sol\":2856:2862  amount */\n      dup4\n        /* \"src/OpenDexV2.sol\":2820:2863  LiquidityRemoved(msg.sender, token, amount) */\n      mload(0x40)\n      tag_145\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/OpenDexV2.sol\":2389:2871  function removeLiquidity(address token, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/OpenDexV2.sol\":633:680  mapping(address => uint256) public tokenWeights */\n    tag_56:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/OpenDexV2.sol\":768:800  address[] public supportedTokens */\n    tag_60:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/OpenDexV2.sol\":2917:3186  function isSupportedToken(address token) internal view returns (bool) {... */\n    tag_68:\n        /* \"src/OpenDexV2.sol\":2981:2985  bool */\n      0x00\n        /* \"src/OpenDexV2.sol\":3003:3012  uint256 i */\n      dup1\n        /* \"src/OpenDexV2.sol\":3015:3016  0 */\n      0x00\n        /* \"src/OpenDexV2.sol\":3003:3016  uint256 i = 0 */\n      swap1\n      pop\n        /* \"src/OpenDexV2.sol\":2998:3156  for (uint256 i = 0; i < supportedTokens.length; i++) {... */\n    tag_149:\n        /* \"src/OpenDexV2.sol\":3022:3037  supportedTokens */\n      0x04\n        /* \"src/OpenDexV2.sol\":3022:3044  supportedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/OpenDexV2.sol\":3018:3019  i */\n      dup2\n        /* \"src/OpenDexV2.sol\":3018:3044  i < supportedTokens.length */\n      lt\n        /* \"src/OpenDexV2.sol\":2998:3156  for (uint256 i = 0; i < supportedTokens.length; i++) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"src/OpenDexV2.sol\":3092:3097  token */\n      dup3\n        /* \"src/OpenDexV2.sol\":3070:3097  supportedTokens[i] == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":3070:3085  supportedTokens */\n      0x04\n        /* \"src/OpenDexV2.sol\":3086:3087  i */\n      dup3\n        /* \"src/OpenDexV2.sol\":3070:3088  supportedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_152\n      jumpi\n      tag_153\n      tag_120\n      jump\t// in\n    tag_153:\n    tag_152:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/OpenDexV2.sol\":3070:3097  supportedTokens[i] == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/OpenDexV2.sol\":3066:3145  if (supportedTokens[i] == token) {... */\n      tag_155\n      jumpi\n        /* \"src/OpenDexV2.sol\":3125:3129  true */\n      0x01\n        /* \"src/OpenDexV2.sol\":3118:3129  return true */\n      swap2\n      pop\n      pop\n      jump(tag_148)\n        /* \"src/OpenDexV2.sol\":3066:3145  if (supportedTokens[i] == token) {... */\n    tag_155:\n        /* \"src/OpenDexV2.sol\":3046:3049  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"src/OpenDexV2.sol\":2998:3156  for (uint256 i = 0; i < supportedTokens.length; i++) {... */\n      jump(tag_149)\n    tag_150:\n      pop\n        /* \"src/OpenDexV2.sol\":3173:3178  false */\n      0x00\n        /* \"src/OpenDexV2.sol\":3166:3178  return false */\n      swap1\n      pop\n        /* \"src/OpenDexV2.sol\":2917:3186  function isSupportedToken(address token) internal view returns (bool) {... */\n    tag_148:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_158\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_166\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_174\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_182\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_181)\n    tag_182:\n      0x60\n      swap2\n      pop\n    tag_181:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_184\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_187\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_188\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_189)\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_190\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_190:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_185)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_185:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_197:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_199:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_200:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_234\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_199\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_201:\n        /* \"#utility.yul\":641:665   */\n      tag_236\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_200\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_237:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_202:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_239\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_201\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_203:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_204:\n        /* \"#utility.yul\":997:1021   */\n      tag_242\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_203\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_243\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_243:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_205:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_245\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_204\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_18:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_248\n      tag_197\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1290:1409   */\n    tag_247:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_249\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_202\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_250\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_205\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:2006   */\n    tag_22:\n        /* \"#utility.yul\":1736:1742   */\n      0x00\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1773:1782   */\n      dup3\n        /* \"#utility.yul\":1764:1771   */\n      dup5\n        /* \"#utility.yul\":1760:1783   */\n      sub\n        /* \"#utility.yul\":1756:1788   */\n      slt\n        /* \"#utility.yul\":1753:1872   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":1791:1870   */\n      tag_253\n      tag_197\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1753:1872   */\n    tag_252:\n        /* \"#utility.yul\":1911:1912   */\n      0x00\n        /* \"#utility.yul\":1936:1989   */\n      tag_254\n        /* \"#utility.yul\":1981:1988   */\n      dup5\n        /* \"#utility.yul\":1972:1978   */\n      dup3\n        /* \"#utility.yul\":1961:1970   */\n      dup6\n        /* \"#utility.yul\":1957:1979   */\n      add\n        /* \"#utility.yul\":1936:1989   */\n      tag_202\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":1926:1989   */\n      swap2\n      pop\n        /* \"#utility.yul\":1882:1999   */\n      pop\n        /* \"#utility.yul\":1677:2006   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2012:2130   */\n    tag_206:\n        /* \"#utility.yul\":2099:2123   */\n      tag_256\n        /* \"#utility.yul\":2117:2122   */\n      dup2\n        /* \"#utility.yul\":2099:2123   */\n      tag_203\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2094:2097   */\n      dup3\n        /* \"#utility.yul\":2087:2124   */\n      mstore\n        /* \"#utility.yul\":2012:2130   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2358   */\n    tag_25:\n        /* \"#utility.yul\":2229:2233   */\n      0x00\n        /* \"#utility.yul\":2267:2269   */\n      0x20\n        /* \"#utility.yul\":2256:2265   */\n      dup3\n        /* \"#utility.yul\":2252:2270   */\n      add\n        /* \"#utility.yul\":2244:2270   */\n      swap1\n      pop\n        /* \"#utility.yul\":2280:2351   */\n      tag_258\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup5\n        /* \"#utility.yul\":2280:2351   */\n      tag_206\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2136:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2693   */\n    tag_28:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_261\n      tag_197\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2440:2559   */\n    tag_260:\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2623:2676   */\n      tag_262\n        /* \"#utility.yul\":2668:2675   */\n      dup5\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup6\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_205\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2686   */\n      pop\n        /* \"#utility.yul\":2364:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2817   */\n    tag_207:\n        /* \"#utility.yul\":2786:2810   */\n      tag_264\n        /* \"#utility.yul\":2804:2809   */\n      dup2\n        /* \"#utility.yul\":2786:2810   */\n      tag_200\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2781:2784   */\n      dup3\n        /* \"#utility.yul\":2774:2811   */\n      mstore\n        /* \"#utility.yul\":2699:2817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2823:3045   */\n    tag_39:\n        /* \"#utility.yul\":2916:2920   */\n      0x00\n        /* \"#utility.yul\":2954:2956   */\n      0x20\n        /* \"#utility.yul\":2943:2952   */\n      dup3\n        /* \"#utility.yul\":2939:2957   */\n      add\n        /* \"#utility.yul\":2931:2957   */\n      swap1\n      pop\n        /* \"#utility.yul\":2967:3038   */\n      tag_266\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3024:3033   */\n      dup4\n        /* \"#utility.yul\":3020:3037   */\n      add\n        /* \"#utility.yul\":3011:3017   */\n      dup5\n        /* \"#utility.yul\":2967:3038   */\n      tag_207\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2823:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3525   */\n    tag_42:\n        /* \"#utility.yul\":3119:3125   */\n      0x00\n        /* \"#utility.yul\":3127:3133   */\n      dup1\n        /* \"#utility.yul\":3176:3178   */\n      0x40\n        /* \"#utility.yul\":3164:3173   */\n      dup4\n        /* \"#utility.yul\":3155:3162   */\n      dup6\n        /* \"#utility.yul\":3151:3174   */\n      sub\n        /* \"#utility.yul\":3147:3179   */\n      slt\n        /* \"#utility.yul\":3144:3263   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3182:3261   */\n      tag_269\n      tag_197\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3144:3263   */\n    tag_268:\n        /* \"#utility.yul\":3302:3303   */\n      0x00\n        /* \"#utility.yul\":3327:3380   */\n      tag_270\n        /* \"#utility.yul\":3372:3379   */\n      dup6\n        /* \"#utility.yul\":3363:3369   */\n      dup3\n        /* \"#utility.yul\":3352:3361   */\n      dup7\n        /* \"#utility.yul\":3348:3370   */\n      add\n        /* \"#utility.yul\":3327:3380   */\n      tag_202\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3317:3380   */\n      swap3\n      pop\n        /* \"#utility.yul\":3273:3390   */\n      pop\n        /* \"#utility.yul\":3429:3431   */\n      0x20\n        /* \"#utility.yul\":3455:3508   */\n      tag_271\n        /* \"#utility.yul\":3500:3507   */\n      dup6\n        /* \"#utility.yul\":3491:3497   */\n      dup3\n        /* \"#utility.yul\":3480:3489   */\n      dup7\n        /* \"#utility.yul\":3476:3498   */\n      add\n        /* \"#utility.yul\":3455:3508   */\n      tag_202\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3445:3508   */\n      swap2\n      pop\n        /* \"#utility.yul\":3400:3518   */\n      pop\n        /* \"#utility.yul\":3051:3525   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3531:3700   */\n    tag_208:\n        /* \"#utility.yul\":3615:3626   */\n      0x00\n        /* \"#utility.yul\":3649:3655   */\n      dup3\n        /* \"#utility.yul\":3644:3647   */\n      dup3\n        /* \"#utility.yul\":3637:3656   */\n      mstore\n        /* \"#utility.yul\":3689:3693   */\n      0x20\n        /* \"#utility.yul\":3684:3687   */\n      dup3\n        /* \"#utility.yul\":3680:3694   */\n      add\n        /* \"#utility.yul\":3665:3694   */\n      swap1\n      pop\n        /* \"#utility.yul\":3531:3700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3706:3870   */\n    tag_209:\n        /* \"#utility.yul\":3846:3862   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":3842:3843   */\n      0x00\n        /* \"#utility.yul\":3834:3840   */\n      dup3\n        /* \"#utility.yul\":3830:3844   */\n      add\n        /* \"#utility.yul\":3823:3863   */\n      mstore\n        /* \"#utility.yul\":3706:3870   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3876:4242   */\n    tag_210:\n        /* \"#utility.yul\":4018:4021   */\n      0x00\n        /* \"#utility.yul\":4039:4106   */\n      tag_275\n        /* \"#utility.yul\":4103:4105   */\n      0x0e\n        /* \"#utility.yul\":4098:4101   */\n      dup4\n        /* \"#utility.yul\":4039:4106   */\n      tag_208\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4032:4106   */\n      swap2\n      pop\n        /* \"#utility.yul\":4115:4208   */\n      tag_276\n        /* \"#utility.yul\":4204:4207   */\n      dup3\n        /* \"#utility.yul\":4115:4208   */\n      tag_209\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4233:4235   */\n      0x20\n        /* \"#utility.yul\":4228:4231   */\n      dup3\n        /* \"#utility.yul\":4224:4236   */\n      add\n        /* \"#utility.yul\":4217:4236   */\n      swap1\n      pop\n        /* \"#utility.yul\":3876:4242   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4248:4667   */\n    tag_65:\n        /* \"#utility.yul\":4414:4418   */\n      0x00\n        /* \"#utility.yul\":4452:4454   */\n      0x20\n        /* \"#utility.yul\":4441:4450   */\n      dup3\n        /* \"#utility.yul\":4437:4455   */\n      add\n        /* \"#utility.yul\":4429:4455   */\n      swap1\n      pop\n        /* \"#utility.yul\":4501:4510   */\n      dup2\n        /* \"#utility.yul\":4495:4499   */\n      dup2\n        /* \"#utility.yul\":4491:4511   */\n      sub\n        /* \"#utility.yul\":4487:4488   */\n      0x00\n        /* \"#utility.yul\":4476:4485   */\n      dup4\n        /* \"#utility.yul\":4472:4489   */\n      add\n        /* \"#utility.yul\":4465:4512   */\n      mstore\n        /* \"#utility.yul\":4529:4660   */\n      tag_278\n        /* \"#utility.yul\":4655:4659   */\n      dup2\n        /* \"#utility.yul\":4529:4660   */\n      tag_210\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4521:4660   */\n      swap1\n      pop\n        /* \"#utility.yul\":4248:4667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4673:4842   */\n    tag_211:\n        /* \"#utility.yul\":4813:4834   */\n      0x546f6b656e206e6f7420737570706f7274656400000000000000000000000000\n        /* \"#utility.yul\":4809:4810   */\n      0x00\n        /* \"#utility.yul\":4801:4807   */\n      dup3\n        /* \"#utility.yul\":4797:4811   */\n      add\n        /* \"#utility.yul\":4790:4835   */\n      mstore\n        /* \"#utility.yul\":4673:4842   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4848:5214   */\n    tag_212:\n        /* \"#utility.yul\":4990:4993   */\n      0x00\n        /* \"#utility.yul\":5011:5078   */\n      tag_281\n        /* \"#utility.yul\":5075:5077   */\n      0x13\n        /* \"#utility.yul\":5070:5073   */\n      dup4\n        /* \"#utility.yul\":5011:5078   */\n      tag_208\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5004:5078   */\n      swap2\n      pop\n        /* \"#utility.yul\":5087:5180   */\n      tag_282\n        /* \"#utility.yul\":5176:5179   */\n      dup3\n        /* \"#utility.yul\":5087:5180   */\n      tag_211\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5205:5207   */\n      0x20\n        /* \"#utility.yul\":5200:5203   */\n      dup3\n        /* \"#utility.yul\":5196:5208   */\n      add\n        /* \"#utility.yul\":5189:5208   */\n      swap1\n      pop\n        /* \"#utility.yul\":4848:5214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5220:5639   */\n    tag_71:\n        /* \"#utility.yul\":5386:5390   */\n      0x00\n        /* \"#utility.yul\":5424:5426   */\n      0x20\n        /* \"#utility.yul\":5413:5422   */\n      dup3\n        /* \"#utility.yul\":5409:5427   */\n      add\n        /* \"#utility.yul\":5401:5427   */\n      swap1\n      pop\n        /* \"#utility.yul\":5473:5482   */\n      dup2\n        /* \"#utility.yul\":5467:5471   */\n      dup2\n        /* \"#utility.yul\":5463:5483   */\n      sub\n        /* \"#utility.yul\":5459:5460   */\n      0x00\n        /* \"#utility.yul\":5448:5457   */\n      dup4\n        /* \"#utility.yul\":5444:5461   */\n      add\n        /* \"#utility.yul\":5437:5484   */\n      mstore\n        /* \"#utility.yul\":5501:5632   */\n      tag_284\n        /* \"#utility.yul\":5627:5631   */\n      dup2\n        /* \"#utility.yul\":5501:5632   */\n      tag_212\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5493:5632   */\n      swap1\n      pop\n        /* \"#utility.yul\":5220:5639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5645:5977   */\n    tag_73:\n        /* \"#utility.yul\":5766:5770   */\n      0x00\n        /* \"#utility.yul\":5804:5806   */\n      0x40\n        /* \"#utility.yul\":5793:5802   */\n      dup3\n        /* \"#utility.yul\":5789:5807   */\n      add\n        /* \"#utility.yul\":5781:5807   */\n      swap1\n      pop\n        /* \"#utility.yul\":5817:5888   */\n      tag_286\n        /* \"#utility.yul\":5885:5886   */\n      0x00\n        /* \"#utility.yul\":5874:5883   */\n      dup4\n        /* \"#utility.yul\":5870:5887   */\n      add\n        /* \"#utility.yul\":5861:5867   */\n      dup6\n        /* \"#utility.yul\":5817:5888   */\n      tag_207\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5898:5970   */\n      tag_287\n        /* \"#utility.yul\":5966:5968   */\n      0x20\n        /* \"#utility.yul\":5955:5964   */\n      dup4\n        /* \"#utility.yul\":5951:5969   */\n      add\n        /* \"#utility.yul\":5942:5948   */\n      dup5\n        /* \"#utility.yul\":5898:5970   */\n      tag_206\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5645:5977   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5983:6145   */\n    tag_213:\n        /* \"#utility.yul\":6123:6137   */\n      0x46656520746f6f20686967680000000000000000000000000000000000000000\n        /* \"#utility.yul\":6119:6120   */\n      0x00\n        /* \"#utility.yul\":6111:6117   */\n      dup3\n        /* \"#utility.yul\":6107:6121   */\n      add\n        /* \"#utility.yul\":6100:6138   */\n      mstore\n        /* \"#utility.yul\":5983:6145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6151:6517   */\n    tag_214:\n        /* \"#utility.yul\":6293:6296   */\n      0x00\n        /* \"#utility.yul\":6314:6381   */\n      tag_290\n        /* \"#utility.yul\":6378:6380   */\n      0x0c\n        /* \"#utility.yul\":6373:6376   */\n      dup4\n        /* \"#utility.yul\":6314:6381   */\n      tag_208\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6307:6381   */\n      swap2\n      pop\n        /* \"#utility.yul\":6390:6483   */\n      tag_291\n        /* \"#utility.yul\":6479:6482   */\n      dup3\n        /* \"#utility.yul\":6390:6483   */\n      tag_213\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6508:6510   */\n      0x20\n        /* \"#utility.yul\":6503:6506   */\n      dup3\n        /* \"#utility.yul\":6499:6511   */\n      add\n        /* \"#utility.yul\":6492:6511   */\n      swap1\n      pop\n        /* \"#utility.yul\":6151:6517   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6523:6942   */\n    tag_80:\n        /* \"#utility.yul\":6689:6693   */\n      0x00\n        /* \"#utility.yul\":6727:6729   */\n      0x20\n        /* \"#utility.yul\":6716:6725   */\n      dup3\n        /* \"#utility.yul\":6712:6730   */\n      add\n        /* \"#utility.yul\":6704:6730   */\n      swap1\n      pop\n        /* \"#utility.yul\":6776:6785   */\n      dup2\n        /* \"#utility.yul\":6770:6774   */\n      dup2\n        /* \"#utility.yul\":6766:6786   */\n      sub\n        /* \"#utility.yul\":6762:6763   */\n      0x00\n        /* \"#utility.yul\":6751:6760   */\n      dup4\n        /* \"#utility.yul\":6747:6764   */\n      add\n        /* \"#utility.yul\":6740:6787   */\n      mstore\n        /* \"#utility.yul\":6804:6935   */\n      tag_293\n        /* \"#utility.yul\":6930:6934   */\n      dup2\n        /* \"#utility.yul\":6804:6935   */\n      tag_214\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6796:6935   */\n      swap1\n      pop\n        /* \"#utility.yul\":6523:6942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6948:7121   */\n    tag_215:\n        /* \"#utility.yul\":7088:7113   */\n      0x546f6b656e20616c726561647920737570706f72746564000000000000000000\n        /* \"#utility.yul\":7084:7085   */\n      0x00\n        /* \"#utility.yul\":7076:7082   */\n      dup3\n        /* \"#utility.yul\":7072:7086   */\n      add\n        /* \"#utility.yul\":7065:7114   */\n      mstore\n        /* \"#utility.yul\":6948:7121   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7127:7493   */\n    tag_216:\n        /* \"#utility.yul\":7269:7272   */\n      0x00\n        /* \"#utility.yul\":7290:7357   */\n      tag_296\n        /* \"#utility.yul\":7354:7356   */\n      0x17\n        /* \"#utility.yul\":7349:7352   */\n      dup4\n        /* \"#utility.yul\":7290:7357   */\n      tag_208\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7283:7357   */\n      swap2\n      pop\n        /* \"#utility.yul\":7366:7459   */\n      tag_297\n        /* \"#utility.yul\":7455:7458   */\n      dup3\n        /* \"#utility.yul\":7366:7459   */\n      tag_215\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":7484:7486   */\n      0x20\n        /* \"#utility.yul\":7479:7482   */\n      dup3\n        /* \"#utility.yul\":7475:7487   */\n      add\n        /* \"#utility.yul\":7468:7487   */\n      swap1\n      pop\n        /* \"#utility.yul\":7127:7493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7499:7918   */\n    tag_88:\n        /* \"#utility.yul\":7665:7669   */\n      0x00\n        /* \"#utility.yul\":7703:7705   */\n      0x20\n        /* \"#utility.yul\":7692:7701   */\n      dup3\n        /* \"#utility.yul\":7688:7706   */\n      add\n        /* \"#utility.yul\":7680:7706   */\n      swap1\n      pop\n        /* \"#utility.yul\":7752:7761   */\n      dup2\n        /* \"#utility.yul\":7746:7750   */\n      dup2\n        /* \"#utility.yul\":7742:7762   */\n      sub\n        /* \"#utility.yul\":7738:7739   */\n      0x00\n        /* \"#utility.yul\":7727:7736   */\n      dup4\n        /* \"#utility.yul\":7723:7740   */\n      add\n        /* \"#utility.yul\":7716:7763   */\n      mstore\n        /* \"#utility.yul\":7780:7911   */\n      tag_299\n        /* \"#utility.yul\":7906:7910   */\n      dup2\n        /* \"#utility.yul\":7780:7911   */\n      tag_216\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7772:7911   */\n      swap1\n      pop\n        /* \"#utility.yul\":7499:7918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7924:8104   */\n    tag_217:\n        /* \"#utility.yul\":7972:8049   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7969:7970   */\n      0x00\n        /* \"#utility.yul\":7962:8050   */\n      mstore\n        /* \"#utility.yul\":8069:8073   */\n      0x11\n        /* \"#utility.yul\":8066:8067   */\n      0x04\n        /* \"#utility.yul\":8059:8074   */\n      mstore\n        /* \"#utility.yul\":8093:8097   */\n      0x24\n        /* \"#utility.yul\":8090:8091   */\n      0x00\n        /* \"#utility.yul\":8083:8098   */\n      revert\n        /* \"#utility.yul\":8110:8520   */\n    tag_95:\n        /* \"#utility.yul\":8150:8157   */\n      0x00\n        /* \"#utility.yul\":8173:8193   */\n      tag_302\n        /* \"#utility.yul\":8191:8192   */\n      dup3\n        /* \"#utility.yul\":8173:8193   */\n      tag_203\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":8168:8193   */\n      swap2\n      pop\n        /* \"#utility.yul\":8207:8227   */\n      tag_303\n        /* \"#utility.yul\":8225:8226   */\n      dup4\n        /* \"#utility.yul\":8207:8227   */\n      tag_203\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":8202:8227   */\n      swap3\n      pop\n        /* \"#utility.yul\":8262:8263   */\n      dup3\n        /* \"#utility.yul\":8259:8260   */\n      dup3\n        /* \"#utility.yul\":8255:8264   */\n      mul\n        /* \"#utility.yul\":8284:8314   */\n      tag_304\n        /* \"#utility.yul\":8302:8313   */\n      dup2\n        /* \"#utility.yul\":8284:8314   */\n      tag_203\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":8273:8314   */\n      swap2\n      pop\n        /* \"#utility.yul\":8463:8464   */\n      dup3\n        /* \"#utility.yul\":8454:8461   */\n      dup3\n        /* \"#utility.yul\":8450:8465   */\n      div\n        /* \"#utility.yul\":8447:8448   */\n      dup5\n        /* \"#utility.yul\":8444:8466   */\n      eq\n        /* \"#utility.yul\":8424:8425   */\n      dup4\n        /* \"#utility.yul\":8417:8426   */\n      iszero\n        /* \"#utility.yul\":8397:8480   */\n      or\n        /* \"#utility.yul\":8374:8513   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":8493:8511   */\n      tag_306\n      tag_217\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8374:8513   */\n    tag_305:\n        /* \"#utility.yul\":8158:8520   */\n      pop\n        /* \"#utility.yul\":8110:8520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8526:8706   */\n    tag_218:\n        /* \"#utility.yul\":8574:8651   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8571:8572   */\n      0x00\n        /* \"#utility.yul\":8564:8652   */\n      mstore\n        /* \"#utility.yul\":8671:8675   */\n      0x12\n        /* \"#utility.yul\":8668:8669   */\n      0x04\n        /* \"#utility.yul\":8661:8676   */\n      mstore\n        /* \"#utility.yul\":8695:8699   */\n      0x24\n        /* \"#utility.yul\":8692:8693   */\n      0x00\n        /* \"#utility.yul\":8685:8700   */\n      revert\n        /* \"#utility.yul\":8712:8897   */\n    tag_97:\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8769:8789   */\n      tag_309\n        /* \"#utility.yul\":8787:8788   */\n      dup3\n        /* \"#utility.yul\":8769:8789   */\n      tag_203\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8764:8789   */\n      swap2\n      pop\n        /* \"#utility.yul\":8803:8823   */\n      tag_310\n        /* \"#utility.yul\":8821:8822   */\n      dup4\n        /* \"#utility.yul\":8803:8823   */\n      tag_203\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8798:8823   */\n      swap3\n      pop\n        /* \"#utility.yul\":8842:8843   */\n      dup3\n        /* \"#utility.yul\":8832:8867   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":8847:8865   */\n      tag_312\n      tag_218\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":8832:8867   */\n    tag_311:\n        /* \"#utility.yul\":8889:8890   */\n      dup3\n        /* \"#utility.yul\":8886:8887   */\n      dup3\n        /* \"#utility.yul\":8882:8891   */\n      div\n        /* \"#utility.yul\":8877:8891   */\n      swap1\n      pop\n        /* \"#utility.yul\":8712:8897   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8903:9097   */\n    tag_99:\n        /* \"#utility.yul\":8943:8947   */\n      0x00\n        /* \"#utility.yul\":8963:8983   */\n      tag_314\n        /* \"#utility.yul\":8981:8982   */\n      dup3\n        /* \"#utility.yul\":8963:8983   */\n      tag_203\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8958:8983   */\n      swap2\n      pop\n        /* \"#utility.yul\":8997:9017   */\n      tag_315\n        /* \"#utility.yul\":9015:9016   */\n      dup4\n        /* \"#utility.yul\":8997:9017   */\n      tag_203\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":8992:9017   */\n      swap3\n      pop\n        /* \"#utility.yul\":9041:9042   */\n      dup3\n        /* \"#utility.yul\":9038:9039   */\n      dup3\n        /* \"#utility.yul\":9034:9043   */\n      sub\n        /* \"#utility.yul\":9026:9043   */\n      swap1\n      pop\n        /* \"#utility.yul\":9065:9066   */\n      dup2\n        /* \"#utility.yul\":9059:9063   */\n      dup2\n        /* \"#utility.yul\":9056:9067   */\n      gt\n        /* \"#utility.yul\":9053:9090   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":9070:9088   */\n      tag_317\n      tag_217\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":9053:9090   */\n    tag_316:\n        /* \"#utility.yul\":8903:9097   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9103:9294   */\n    tag_104:\n        /* \"#utility.yul\":9143:9146   */\n      0x00\n        /* \"#utility.yul\":9162:9182   */\n      tag_319\n        /* \"#utility.yul\":9180:9181   */\n      dup3\n        /* \"#utility.yul\":9162:9182   */\n      tag_203\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":9157:9182   */\n      swap2\n      pop\n        /* \"#utility.yul\":9196:9216   */\n      tag_320\n        /* \"#utility.yul\":9214:9215   */\n      dup4\n        /* \"#utility.yul\":9196:9216   */\n      tag_203\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":9191:9216   */\n      swap3\n      pop\n        /* \"#utility.yul\":9239:9240   */\n      dup3\n        /* \"#utility.yul\":9236:9237   */\n      dup3\n        /* \"#utility.yul\":9232:9241   */\n      add\n        /* \"#utility.yul\":9225:9241   */\n      swap1\n      pop\n        /* \"#utility.yul\":9260:9263   */\n      dup1\n        /* \"#utility.yul\":9257:9258   */\n      dup3\n        /* \"#utility.yul\":9254:9264   */\n      gt\n        /* \"#utility.yul\":9251:9287   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":9267:9285   */\n      tag_322\n      tag_217\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":9251:9287   */\n    tag_321:\n        /* \"#utility.yul\":9103:9294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9300:9480   */\n    tag_120:\n        /* \"#utility.yul\":9348:9425   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9345:9346   */\n      0x00\n        /* \"#utility.yul\":9338:9426   */\n      mstore\n        /* \"#utility.yul\":9445:9449   */\n      0x32\n        /* \"#utility.yul\":9442:9443   */\n      0x04\n        /* \"#utility.yul\":9435:9450   */\n      mstore\n        /* \"#utility.yul\":9469:9473   */\n      0x24\n        /* \"#utility.yul\":9466:9467   */\n      0x00\n        /* \"#utility.yul\":9459:9474   */\n      revert\n        /* \"#utility.yul\":9486:9666   */\n    tag_132:\n        /* \"#utility.yul\":9534:9611   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9531:9532   */\n      0x00\n        /* \"#utility.yul\":9524:9612   */\n      mstore\n        /* \"#utility.yul\":9631:9635   */\n      0x31\n        /* \"#utility.yul\":9628:9629   */\n      0x04\n        /* \"#utility.yul\":9621:9636   */\n      mstore\n        /* \"#utility.yul\":9655:9659   */\n      0x24\n        /* \"#utility.yul\":9652:9653   */\n      0x00\n        /* \"#utility.yul\":9645:9660   */\n      revert\n        /* \"#utility.yul\":9672:9842   */\n    tag_219:\n        /* \"#utility.yul\":9812:9834   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":9808:9809   */\n      0x00\n        /* \"#utility.yul\":9800:9806   */\n      dup3\n        /* \"#utility.yul\":9796:9810   */\n      add\n        /* \"#utility.yul\":9789:9835   */\n      mstore\n        /* \"#utility.yul\":9672:9842   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9848:10214   */\n    tag_220:\n        /* \"#utility.yul\":9990:9993   */\n      0x00\n        /* \"#utility.yul\":10011:10078   */\n      tag_327\n        /* \"#utility.yul\":10075:10077   */\n      0x14\n        /* \"#utility.yul\":10070:10073   */\n      dup4\n        /* \"#utility.yul\":10011:10078   */\n      tag_208\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":10004:10078   */\n      swap2\n      pop\n        /* \"#utility.yul\":10087:10180   */\n      tag_328\n        /* \"#utility.yul\":10176:10179   */\n      dup3\n        /* \"#utility.yul\":10087:10180   */\n      tag_219\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":10205:10207   */\n      0x20\n        /* \"#utility.yul\":10200:10203   */\n      dup3\n        /* \"#utility.yul\":10196:10208   */\n      add\n        /* \"#utility.yul\":10189:10208   */\n      swap1\n      pop\n        /* \"#utility.yul\":9848:10214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10220:10639   */\n    tag_140:\n        /* \"#utility.yul\":10386:10390   */\n      0x00\n        /* \"#utility.yul\":10424:10426   */\n      0x20\n        /* \"#utility.yul\":10413:10422   */\n      dup3\n        /* \"#utility.yul\":10409:10427   */\n      add\n        /* \"#utility.yul\":10401:10427   */\n      swap1\n      pop\n        /* \"#utility.yul\":10473:10482   */\n      dup2\n        /* \"#utility.yul\":10467:10471   */\n      dup2\n        /* \"#utility.yul\":10463:10483   */\n      sub\n        /* \"#utility.yul\":10459:10460   */\n      0x00\n        /* \"#utility.yul\":10448:10457   */\n      dup4\n        /* \"#utility.yul\":10444:10461   */\n      add\n        /* \"#utility.yul\":10437:10484   */\n      mstore\n        /* \"#utility.yul\":10501:10632   */\n      tag_330\n        /* \"#utility.yul\":10627:10631   */\n      dup2\n        /* \"#utility.yul\":10501:10632   */\n      tag_220\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":10493:10632   */\n      swap1\n      pop\n        /* \"#utility.yul\":10220:10639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10645:11087   */\n    tag_159:\n        /* \"#utility.yul\":10794:10798   */\n      0x00\n        /* \"#utility.yul\":10832:10834   */\n      0x60\n        /* \"#utility.yul\":10821:10830   */\n      dup3\n        /* \"#utility.yul\":10817:10835   */\n      add\n        /* \"#utility.yul\":10809:10835   */\n      swap1\n      pop\n        /* \"#utility.yul\":10845:10916   */\n      tag_332\n        /* \"#utility.yul\":10913:10914   */\n      0x00\n        /* \"#utility.yul\":10902:10911   */\n      dup4\n        /* \"#utility.yul\":10898:10915   */\n      add\n        /* \"#utility.yul\":10889:10895   */\n      dup7\n        /* \"#utility.yul\":10845:10916   */\n      tag_207\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10926:10998   */\n      tag_333\n        /* \"#utility.yul\":10994:10996   */\n      0x20\n        /* \"#utility.yul\":10983:10992   */\n      dup4\n        /* \"#utility.yul\":10979:10997   */\n      add\n        /* \"#utility.yul\":10970:10976   */\n      dup6\n        /* \"#utility.yul\":10926:10998   */\n      tag_207\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":11008:11080   */\n      tag_334\n        /* \"#utility.yul\":11076:11078   */\n      0x40\n        /* \"#utility.yul\":11065:11074   */\n      dup4\n        /* \"#utility.yul\":11061:11079   */\n      add\n        /* \"#utility.yul\":11052:11058   */\n      dup5\n        /* \"#utility.yul\":11008:11080   */\n      tag_206\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":10645:11087   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11093:11183   */\n    tag_221:\n        /* \"#utility.yul\":11127:11134   */\n      0x00\n        /* \"#utility.yul\":11170:11175   */\n      dup2\n        /* \"#utility.yul\":11163:11176   */\n      iszero\n        /* \"#utility.yul\":11156:11177   */\n      iszero\n        /* \"#utility.yul\":11145:11177   */\n      swap1\n      pop\n        /* \"#utility.yul\":11093:11183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11189:11305   */\n    tag_222:\n        /* \"#utility.yul\":11259:11280   */\n      tag_337\n        /* \"#utility.yul\":11274:11279   */\n      dup2\n        /* \"#utility.yul\":11259:11280   */\n      tag_221\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":11252:11257   */\n      dup2\n        /* \"#utility.yul\":11249:11281   */\n      eq\n        /* \"#utility.yul\":11239:11299   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":11295:11296   */\n      0x00\n        /* \"#utility.yul\":11292:11293   */\n      dup1\n        /* \"#utility.yul\":11285:11297   */\n      revert\n        /* \"#utility.yul\":11239:11299   */\n    tag_338:\n        /* \"#utility.yul\":11189:11305   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11311:11448   */\n    tag_223:\n        /* \"#utility.yul\":11365:11370   */\n      0x00\n        /* \"#utility.yul\":11396:11402   */\n      dup2\n        /* \"#utility.yul\":11390:11403   */\n      mload\n        /* \"#utility.yul\":11381:11403   */\n      swap1\n      pop\n        /* \"#utility.yul\":11412:11442   */\n      tag_340\n        /* \"#utility.yul\":11436:11441   */\n      dup2\n        /* \"#utility.yul\":11412:11442   */\n      tag_222\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":11311:11448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11454:11799   */\n    tag_169:\n        /* \"#utility.yul\":11521:11527   */\n      0x00\n        /* \"#utility.yul\":11570:11572   */\n      0x20\n        /* \"#utility.yul\":11558:11567   */\n      dup3\n        /* \"#utility.yul\":11549:11556   */\n      dup5\n        /* \"#utility.yul\":11545:11568   */\n      sub\n        /* \"#utility.yul\":11541:11573   */\n      slt\n        /* \"#utility.yul\":11538:11657   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":11576:11655   */\n      tag_343\n      tag_197\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11538:11657   */\n    tag_342:\n        /* \"#utility.yul\":11696:11697   */\n      0x00\n        /* \"#utility.yul\":11721:11782   */\n      tag_344\n        /* \"#utility.yul\":11774:11781   */\n      dup5\n        /* \"#utility.yul\":11765:11771   */\n      dup3\n        /* \"#utility.yul\":11754:11763   */\n      dup6\n        /* \"#utility.yul\":11750:11772   */\n      add\n        /* \"#utility.yul\":11721:11782   */\n      tag_223\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":11711:11782   */\n      swap2\n      pop\n        /* \"#utility.yul\":11667:11792   */\n      pop\n        /* \"#utility.yul\":11454:11799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11805:11903   */\n    tag_224:\n        /* \"#utility.yul\":11856:11862   */\n      0x00\n        /* \"#utility.yul\":11890:11895   */\n      dup2\n        /* \"#utility.yul\":11884:11896   */\n      mload\n        /* \"#utility.yul\":11874:11896   */\n      swap1\n      pop\n        /* \"#utility.yul\":11805:11903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11909:12056   */\n    tag_225:\n        /* \"#utility.yul\":12010:12021   */\n      0x00\n        /* \"#utility.yul\":12047:12050   */\n      dup2\n        /* \"#utility.yul\":12032:12050   */\n      swap1\n      pop\n        /* \"#utility.yul\":11909:12056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12062:12201   */\n    tag_226:\n        /* \"#utility.yul\":12151:12157   */\n      dup3\n        /* \"#utility.yul\":12146:12149   */\n      dup2\n        /* \"#utility.yul\":12141:12144   */\n      dup4\n        /* \"#utility.yul\":12135:12158   */\n      mcopy\n        /* \"#utility.yul\":12192:12193   */\n      0x00\n        /* \"#utility.yul\":12183:12189   */\n      dup4\n        /* \"#utility.yul\":12178:12181   */\n      dup4\n        /* \"#utility.yul\":12174:12190   */\n      add\n        /* \"#utility.yul\":12167:12194   */\n      mstore\n        /* \"#utility.yul\":12062:12201   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12207:12593   */\n    tag_227:\n        /* \"#utility.yul\":12311:12314   */\n      0x00\n        /* \"#utility.yul\":12339:12377   */\n      tag_349\n        /* \"#utility.yul\":12371:12376   */\n      dup3\n        /* \"#utility.yul\":12339:12377   */\n      tag_224\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":12393:12481   */\n      tag_350\n        /* \"#utility.yul\":12474:12480   */\n      dup2\n        /* \"#utility.yul\":12469:12472   */\n      dup6\n        /* \"#utility.yul\":12393:12481   */\n      tag_225\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":12386:12481   */\n      swap4\n      pop\n        /* \"#utility.yul\":12490:12555   */\n      tag_351\n        /* \"#utility.yul\":12548:12554   */\n      dup2\n        /* \"#utility.yul\":12543:12546   */\n      dup6\n        /* \"#utility.yul\":12536:12540   */\n      0x20\n        /* \"#utility.yul\":12529:12534   */\n      dup7\n        /* \"#utility.yul\":12525:12541   */\n      add\n        /* \"#utility.yul\":12490:12555   */\n      tag_226\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":12580:12586   */\n      dup1\n        /* \"#utility.yul\":12575:12578   */\n      dup5\n        /* \"#utility.yul\":12571:12587   */\n      add\n        /* \"#utility.yul\":12564:12587   */\n      swap2\n      pop\n        /* \"#utility.yul\":12315:12593   */\n      pop\n        /* \"#utility.yul\":12207:12593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12599:12870   */\n    tag_179:\n        /* \"#utility.yul\":12729:12732   */\n      0x00\n        /* \"#utility.yul\":12751:12844   */\n      tag_353\n        /* \"#utility.yul\":12840:12843   */\n      dup3\n        /* \"#utility.yul\":12831:12837   */\n      dup5\n        /* \"#utility.yul\":12751:12844   */\n      tag_227\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":12744:12844   */\n      swap2\n      pop\n        /* \"#utility.yul\":12861:12864   */\n      dup2\n        /* \"#utility.yul\":12854:12864   */\n      swap1\n      pop\n        /* \"#utility.yul\":12599:12870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ab03e5580427c0916df5aa02a59a6cba7baaa8c91c7b0bf9cf7c982104688e0f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_776": {
									"entryPoint": null,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1059,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_address_fromMemory": {
									"entryPoint": 1208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7538:5",
										"nodeType": "YulBlock",
										"src": "0:7538:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "423:28:5",
													"nodeType": "YulBlock",
													"src": "423:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:5",
																		"nodeType": "YulLiteral",
																		"src": "440:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:5",
																		"nodeType": "YulLiteral",
																		"src": "443:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:5"
																},
																"nativeSrc": "433:12:5",
																"nodeType": "YulFunctionCall",
																"src": "433:12:5"
															},
															"nativeSrc": "433:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:5"
											},
											{
												"body": {
													"nativeSrc": "505:54:5",
													"nodeType": "YulBlock",
													"src": "505:54:5",
													"statements": [
														{
															"nativeSrc": "515:38:5",
															"nodeType": "YulAssignment",
															"src": "515:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "533:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:5",
																				"nodeType": "YulLiteral",
																				"src": "540:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "529:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:5"
																		},
																		"nativeSrc": "529:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "549:2:5",
																				"nodeType": "YulLiteral",
																				"src": "549:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "545:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:5"
																		},
																		"nativeSrc": "545:7:5",
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "525:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:5"
																},
																"nativeSrc": "525:28:5",
																"nodeType": "YulFunctionCall",
																"src": "525:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "515:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "457:102:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "488:5:5",
														"nodeType": "YulTypedName",
														"src": "488:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "498:6:5",
														"nodeType": "YulTypedName",
														"src": "498:6:5",
														"type": ""
													}
												],
												"src": "457:102:5"
											},
											{
												"body": {
													"nativeSrc": "593:152:5",
													"nodeType": "YulBlock",
													"src": "593:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "610:1:5",
																		"nodeType": "YulLiteral",
																		"src": "610:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "613:77:5",
																		"nodeType": "YulLiteral",
																		"src": "613:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "603:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:5"
																},
																"nativeSrc": "603:88:5",
																"nodeType": "YulFunctionCall",
																"src": "603:88:5"
															},
															"nativeSrc": "603:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "603:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "707:1:5",
																		"nodeType": "YulLiteral",
																		"src": "707:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "710:4:5",
																		"nodeType": "YulLiteral",
																		"src": "710:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "700:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:5"
																},
																"nativeSrc": "700:15:5",
																"nodeType": "YulFunctionCall",
																"src": "700:15:5"
															},
															"nativeSrc": "700:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "700:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "731:1:5",
																		"nodeType": "YulLiteral",
																		"src": "731:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "734:4:5",
																		"nodeType": "YulLiteral",
																		"src": "734:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "724:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:5"
																},
																"nativeSrc": "724:15:5",
																"nodeType": "YulFunctionCall",
																"src": "724:15:5"
															},
															"nativeSrc": "724:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "724:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "565:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:5"
											},
											{
												"body": {
													"nativeSrc": "794:238:5",
													"nodeType": "YulBlock",
													"src": "794:238:5",
													"statements": [
														{
															"nativeSrc": "804:58:5",
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "826:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "856:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "834:21:5",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:5"
																		},
																		"nativeSrc": "834:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "822:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:5"
																},
																"nativeSrc": "822:40:5",
																"nodeType": "YulFunctionCall",
																"src": "822:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "808:10:5",
																	"nodeType": "YulTypedName",
																	"src": "808:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "973:22:5",
																"nodeType": "YulBlock",
																"src": "973:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "975:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:5"
																			},
																			"nativeSrc": "975:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:5"
																		},
																		"nativeSrc": "975:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "916:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "928:18:5",
																				"nodeType": "YulLiteral",
																				"src": "928:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "913:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:5"
																		},
																		"nativeSrc": "913:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "952:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "964:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "949:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:5"
																		},
																		"nativeSrc": "949:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "910:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:5"
																},
																"nativeSrc": "910:62:5",
																"nodeType": "YulFunctionCall",
																"src": "910:62:5"
															},
															"nativeSrc": "907:88:5",
															"nodeType": "YulIf",
															"src": "907:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1011:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1015:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1004:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:5"
																},
																"nativeSrc": "1004:22:5",
																"nodeType": "YulFunctionCall",
																"src": "1004:22:5"
															},
															"nativeSrc": "1004:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "751:281:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "780:6:5",
														"nodeType": "YulTypedName",
														"src": "780:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "788:4:5",
														"nodeType": "YulTypedName",
														"src": "788:4:5",
														"type": ""
													}
												],
												"src": "751:281:5"
											},
											{
												"body": {
													"nativeSrc": "1079:88:5",
													"nodeType": "YulBlock",
													"src": "1079:88:5",
													"statements": [
														{
															"nativeSrc": "1089:30:5",
															"nodeType": "YulAssignment",
															"src": "1089:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1099:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:5"
																},
																"nativeSrc": "1099:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1099:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1089:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1148:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:5"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1156:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1128:19:5",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:5"
																},
																"nativeSrc": "1128:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1128:33:5"
															},
															"nativeSrc": "1128:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1038:129:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1063:4:5",
														"nodeType": "YulTypedName",
														"src": "1063:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1072:6:5",
														"nodeType": "YulTypedName",
														"src": "1072:6:5",
														"type": ""
													}
												],
												"src": "1038:129:5"
											},
											{
												"body": {
													"nativeSrc": "1255:229:5",
													"nodeType": "YulBlock",
													"src": "1255:229:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1360:22:5",
																"nodeType": "YulBlock",
																"src": "1360:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1362:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "1362:16:5"
																			},
																			"nativeSrc": "1362:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1362:18:5"
																		},
																		"nativeSrc": "1362:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1332:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:18:5",
																		"nodeType": "YulLiteral",
																		"src": "1340:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1329:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:5"
																},
																"nativeSrc": "1329:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1329:30:5"
															},
															"nativeSrc": "1326:56:5",
															"nodeType": "YulIf",
															"src": "1326:56:5"
														},
														{
															"nativeSrc": "1392:25:5",
															"nodeType": "YulAssignment",
															"src": "1392:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1404:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1404:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1412:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1412:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:5"
																},
																"nativeSrc": "1400:17:5",
																"nodeType": "YulFunctionCall",
																"src": "1400:17:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1392:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:5"
																}
															]
														},
														{
															"nativeSrc": "1454:23:5",
															"nodeType": "YulAssignment",
															"src": "1454:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1466:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1466:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1472:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1462:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:5"
																},
																"nativeSrc": "1462:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1462:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1454:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "1173:311:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1239:6:5",
														"nodeType": "YulTypedName",
														"src": "1239:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1250:4:5",
														"nodeType": "YulTypedName",
														"src": "1250:4:5",
														"type": ""
													}
												],
												"src": "1173:311:5"
											},
											{
												"body": {
													"nativeSrc": "1579:28:5",
													"nodeType": "YulBlock",
													"src": "1579:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1596:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1599:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1589:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:5"
																},
																"nativeSrc": "1589:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1589:12:5"
															},
															"nativeSrc": "1589:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1589:12:5"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1490:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1490:117:5"
											},
											{
												"body": {
													"nativeSrc": "1658:81:5",
													"nodeType": "YulBlock",
													"src": "1658:81:5",
													"statements": [
														{
															"nativeSrc": "1668:65:5",
															"nodeType": "YulAssignment",
															"src": "1668:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1683:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1683:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1690:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1690:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1679:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:5"
																},
																"nativeSrc": "1679:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1679:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1668:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1668:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1613:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1640:5:5",
														"nodeType": "YulTypedName",
														"src": "1640:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1650:7:5",
														"nodeType": "YulTypedName",
														"src": "1650:7:5",
														"type": ""
													}
												],
												"src": "1613:126:5"
											},
											{
												"body": {
													"nativeSrc": "1790:51:5",
													"nodeType": "YulBlock",
													"src": "1790:51:5",
													"statements": [
														{
															"nativeSrc": "1800:35:5",
															"nodeType": "YulAssignment",
															"src": "1800:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1829:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1829:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1811:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1811:17:5"
																},
																"nativeSrc": "1811:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1811:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1800:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1800:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1745:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1772:5:5",
														"nodeType": "YulTypedName",
														"src": "1772:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1782:7:5",
														"nodeType": "YulTypedName",
														"src": "1782:7:5",
														"type": ""
													}
												],
												"src": "1745:96:5"
											},
											{
												"body": {
													"nativeSrc": "1890:79:5",
													"nodeType": "YulBlock",
													"src": "1890:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1947:16:5",
																"nodeType": "YulBlock",
																"src": "1947:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1956:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1959:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1949:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:5"
																			},
																			"nativeSrc": "1949:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:5"
																		},
																		"nativeSrc": "1949:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1913:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1913:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1938:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1938:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1920:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1920:17:5"
																				},
																				"nativeSrc": "1920:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1920:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1910:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1910:2:5"
																		},
																		"nativeSrc": "1910:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1903:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:5"
																},
																"nativeSrc": "1903:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1903:43:5"
															},
															"nativeSrc": "1900:63:5",
															"nodeType": "YulIf",
															"src": "1900:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1847:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1883:5:5",
														"nodeType": "YulTypedName",
														"src": "1883:5:5",
														"type": ""
													}
												],
												"src": "1847:122:5"
											},
											{
												"body": {
													"nativeSrc": "2038:80:5",
													"nodeType": "YulBlock",
													"src": "2038:80:5",
													"statements": [
														{
															"nativeSrc": "2048:22:5",
															"nodeType": "YulAssignment",
															"src": "2048:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2063:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2063:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2057:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2057:5:5"
																},
																"nativeSrc": "2057:13:5",
																"nodeType": "YulFunctionCall",
																"src": "2057:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2048:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2048:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2106:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2106:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2079:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2079:26:5"
																},
																"nativeSrc": "2079:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2079:33:5"
															},
															"nativeSrc": "2079:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2079:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1975:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2016:6:5",
														"nodeType": "YulTypedName",
														"src": "2016:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2024:3:5",
														"nodeType": "YulTypedName",
														"src": "2024:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2032:5:5",
														"nodeType": "YulTypedName",
														"src": "2032:5:5",
														"type": ""
													}
												],
												"src": "1975:143:5"
											},
											{
												"body": {
													"nativeSrc": "2254:619:5",
													"nodeType": "YulBlock",
													"src": "2254:619:5",
													"statements": [
														{
															"nativeSrc": "2264:90:5",
															"nodeType": "YulAssignment",
															"src": "2264:90:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2346:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2346:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "2289:56:5",
																			"nodeType": "YulIdentifier",
																			"src": "2289:56:5"
																		},
																		"nativeSrc": "2289:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:64:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2273:15:5",
																	"nodeType": "YulIdentifier",
																	"src": "2273:15:5"
																},
																"nativeSrc": "2273:81:5",
																"nodeType": "YulFunctionCall",
																"src": "2273:81:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2264:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2264:5:5"
																}
															]
														},
														{
															"nativeSrc": "2363:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:16:5",
															"value": {
																"name": "array",
																"nativeSrc": "2374:5:5",
																"nodeType": "YulIdentifier",
																"src": "2374:5:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2367:3:5",
																	"nodeType": "YulTypedName",
																	"src": "2367:3:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2396:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2396:5:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2403:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2389:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:5"
																},
																"nativeSrc": "2389:21:5",
																"nodeType": "YulFunctionCall",
																"src": "2389:21:5"
															},
															"nativeSrc": "2389:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "2389:21:5"
														},
														{
															"nativeSrc": "2419:23:5",
															"nodeType": "YulAssignment",
															"src": "2419:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2430:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2430:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2437:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2437:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2426:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2426:3:5"
																},
																"nativeSrc": "2426:16:5",
																"nodeType": "YulFunctionCall",
																"src": "2426:16:5"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2419:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2419:3:5"
																}
															]
														},
														{
															"nativeSrc": "2452:44:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:44:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2470:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2470:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2482:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2482:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2490:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2490:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2478:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:5"
																		},
																		"nativeSrc": "2478:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:17:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2466:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:5"
																},
																"nativeSrc": "2466:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2466:30:5"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2456:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2456:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2524:103:5",
																"nodeType": "YulBlock",
																"src": "2524:103:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2538:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2538:77:5"
																			},
																			"nativeSrc": "2538:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2538:79:5"
																		},
																		"nativeSrc": "2538:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2511:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2519:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2519:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2508:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2508:2:5"
																},
																"nativeSrc": "2508:15:5",
																"nodeType": "YulFunctionCall",
																"src": "2508:15:5"
															},
															"nativeSrc": "2505:122:5",
															"nodeType": "YulIf",
															"src": "2505:122:5"
														},
														{
															"body": {
																"nativeSrc": "2712:155:5",
																"nodeType": "YulBlock",
																"src": "2712:155:5",
																"statements": [
																	{
																		"nativeSrc": "2727:21:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2727:21:5",
																		"value": {
																			"name": "src",
																			"nativeSrc": "2745:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2745:3:5"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "2731:10:5",
																				"nodeType": "YulTypedName",
																				"src": "2731:10:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2769:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2769:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "2806:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "2806:10:5"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "2818:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2818:3:5"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nativeSrc": "2774:31:5",
																						"nodeType": "YulIdentifier",
																						"src": "2774:31:5"
																					},
																					"nativeSrc": "2774:48:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2774:48:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2762:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:5"
																			},
																			"nativeSrc": "2762:61:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2762:61:5"
																		},
																		"nativeSrc": "2762:61:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:61:5"
																	},
																	{
																		"nativeSrc": "2836:21:5",
																		"nodeType": "YulAssignment",
																		"src": "2836:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2847:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2852:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2852:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2843:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2843:3:5"
																			},
																			"nativeSrc": "2843:14:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2836:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2665:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:5"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2670:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2670:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2662:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2662:2:5"
																},
																"nativeSrc": "2662:15:5",
																"nodeType": "YulFunctionCall",
																"src": "2662:15:5"
															},
															"nativeSrc": "2636:231:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2678:25:5",
																"nodeType": "YulBlock",
																"src": "2678:25:5",
																"statements": [
																	{
																		"nativeSrc": "2680:21:5",
																		"nodeType": "YulAssignment",
																		"src": "2680:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2691:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2696:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2696:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2687:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2687:3:5"
																			},
																			"nativeSrc": "2687:14:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2687:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2680:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2680:3:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2640:21:5",
																"nodeType": "YulBlock",
																"src": "2640:21:5",
																"statements": [
																	{
																		"nativeSrc": "2642:17:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2642:17:5",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "2653:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2653:6:5"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "2646:3:5",
																				"nodeType": "YulTypedName",
																				"src": "2646:3:5",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2636:231:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2141:732:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2224:6:5",
														"nodeType": "YulTypedName",
														"src": "2224:6:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2232:6:5",
														"nodeType": "YulTypedName",
														"src": "2232:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2240:3:5",
														"nodeType": "YulTypedName",
														"src": "2240:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2248:5:5",
														"nodeType": "YulTypedName",
														"src": "2248:5:5",
														"type": ""
													}
												],
												"src": "2141:732:5"
											},
											{
												"body": {
													"nativeSrc": "2984:297:5",
													"nodeType": "YulBlock",
													"src": "2984:297:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3033:83:5",
																"nodeType": "YulBlock",
																"src": "3033:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3035:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3035:77:5"
																			},
																			"nativeSrc": "3035:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3035:79:5"
																		},
																		"nativeSrc": "3035:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3035:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3012:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3012:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3020:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3020:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3008:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:5"
																				},
																				"nativeSrc": "3008:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3008:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3027:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3027:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3004:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:5"
																		},
																		"nativeSrc": "3004:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2997:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:5"
																},
																"nativeSrc": "2997:35:5",
																"nodeType": "YulFunctionCall",
																"src": "2997:35:5"
															},
															"nativeSrc": "2994:122:5",
															"nodeType": "YulIf",
															"src": "2994:122:5"
														},
														{
															"nativeSrc": "3125:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3125:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3145:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3139:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3139:5:5"
																},
																"nativeSrc": "3139:13:5",
																"nodeType": "YulFunctionCall",
																"src": "3139:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3129:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3129:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3161:114:5",
															"nodeType": "YulAssignment",
															"src": "3161:114:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3248:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3248:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3256:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3256:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3244:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3244:3:5"
																		},
																		"nativeSrc": "3244:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:17:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3263:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3263:6:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3271:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "3170:73:5",
																	"nodeType": "YulIdentifier",
																	"src": "3170:73:5"
																},
																"nativeSrc": "3170:105:5",
																"nodeType": "YulFunctionCall",
																"src": "3170:105:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3161:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3161:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "2896:385:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2962:6:5",
														"nodeType": "YulTypedName",
														"src": "2962:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2970:3:5",
														"nodeType": "YulTypedName",
														"src": "2970:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2978:5:5",
														"nodeType": "YulTypedName",
														"src": "2978:5:5",
														"type": ""
													}
												],
												"src": "2896:385:5"
											},
											{
												"body": {
													"nativeSrc": "3369:229:5",
													"nodeType": "YulBlock",
													"src": "3369:229:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3474:22:5",
																"nodeType": "YulBlock",
																"src": "3474:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3476:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "3476:16:5"
																			},
																			"nativeSrc": "3476:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3476:18:5"
																		},
																		"nativeSrc": "3476:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3446:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3446:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3454:18:5",
																		"nodeType": "YulLiteral",
																		"src": "3454:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3443:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3443:2:5"
																},
																"nativeSrc": "3443:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3443:30:5"
															},
															"nativeSrc": "3440:56:5",
															"nodeType": "YulIf",
															"src": "3440:56:5"
														},
														{
															"nativeSrc": "3506:25:5",
															"nodeType": "YulAssignment",
															"src": "3506:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3518:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3518:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3526:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3526:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3514:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3514:3:5"
																},
																"nativeSrc": "3514:17:5",
																"nodeType": "YulFunctionCall",
																"src": "3514:17:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3506:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3506:4:5"
																}
															]
														},
														{
															"nativeSrc": "3568:23:5",
															"nodeType": "YulAssignment",
															"src": "3568:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "3580:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3580:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3586:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3586:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3576:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:5"
																},
																"nativeSrc": "3576:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3576:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3568:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3568:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "3287:311:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "3353:6:5",
														"nodeType": "YulTypedName",
														"src": "3353:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "3364:4:5",
														"nodeType": "YulTypedName",
														"src": "3364:4:5",
														"type": ""
													}
												],
												"src": "3287:311:5"
											},
											{
												"body": {
													"nativeSrc": "3649:32:5",
													"nodeType": "YulBlock",
													"src": "3649:32:5",
													"statements": [
														{
															"nativeSrc": "3659:16:5",
															"nodeType": "YulAssignment",
															"src": "3659:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "3670:5:5",
																"nodeType": "YulIdentifier",
																"src": "3670:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3659:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3659:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3604:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3631:5:5",
														"nodeType": "YulTypedName",
														"src": "3631:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3641:7:5",
														"nodeType": "YulTypedName",
														"src": "3641:7:5",
														"type": ""
													}
												],
												"src": "3604:77:5"
											},
											{
												"body": {
													"nativeSrc": "3730:79:5",
													"nodeType": "YulBlock",
													"src": "3730:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3787:16:5",
																"nodeType": "YulBlock",
																"src": "3787:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3796:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3796:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3799:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3799:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3789:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3789:6:5"
																			},
																			"nativeSrc": "3789:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3789:12:5"
																		},
																		"nativeSrc": "3789:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3789:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3753:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3753:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3778:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3778:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3760:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "3760:17:5"
																				},
																				"nativeSrc": "3760:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3760:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3750:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3750:2:5"
																		},
																		"nativeSrc": "3750:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3750:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3743:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:5"
																},
																"nativeSrc": "3743:43:5",
																"nodeType": "YulFunctionCall",
																"src": "3743:43:5"
															},
															"nativeSrc": "3740:63:5",
															"nodeType": "YulIf",
															"src": "3740:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3687:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3723:5:5",
														"nodeType": "YulTypedName",
														"src": "3723:5:5",
														"type": ""
													}
												],
												"src": "3687:122:5"
											},
											{
												"body": {
													"nativeSrc": "3878:80:5",
													"nodeType": "YulBlock",
													"src": "3878:80:5",
													"statements": [
														{
															"nativeSrc": "3888:22:5",
															"nodeType": "YulAssignment",
															"src": "3888:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3903:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3903:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3897:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3897:5:5"
																},
																"nativeSrc": "3897:13:5",
																"nodeType": "YulFunctionCall",
																"src": "3897:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3888:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3888:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3946:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3946:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3919:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "3919:26:5"
																},
																"nativeSrc": "3919:33:5",
																"nodeType": "YulFunctionCall",
																"src": "3919:33:5"
															},
															"nativeSrc": "3919:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "3919:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3815:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3856:6:5",
														"nodeType": "YulTypedName",
														"src": "3856:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3864:3:5",
														"nodeType": "YulTypedName",
														"src": "3864:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3872:5:5",
														"nodeType": "YulTypedName",
														"src": "3872:5:5",
														"type": ""
													}
												],
												"src": "3815:143:5"
											},
											{
												"body": {
													"nativeSrc": "4094:619:5",
													"nodeType": "YulBlock",
													"src": "4094:619:5",
													"statements": [
														{
															"nativeSrc": "4104:90:5",
															"nodeType": "YulAssignment",
															"src": "4104:90:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4186:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4186:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "4129:56:5",
																			"nodeType": "YulIdentifier",
																			"src": "4129:56:5"
																		},
																		"nativeSrc": "4129:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4129:64:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4113:15:5",
																	"nodeType": "YulIdentifier",
																	"src": "4113:15:5"
																},
																"nativeSrc": "4113:81:5",
																"nodeType": "YulFunctionCall",
																"src": "4113:81:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4104:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4104:5:5"
																}
															]
														},
														{
															"nativeSrc": "4203:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4203:16:5",
															"value": {
																"name": "array",
																"nativeSrc": "4214:5:5",
																"nodeType": "YulIdentifier",
																"src": "4214:5:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4207:3:5",
																	"nodeType": "YulTypedName",
																	"src": "4207:3:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4236:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4236:5:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4243:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4243:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4229:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:5"
																},
																"nativeSrc": "4229:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4229:21:5"
															},
															"nativeSrc": "4229:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4229:21:5"
														},
														{
															"nativeSrc": "4259:23:5",
															"nodeType": "YulAssignment",
															"src": "4259:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4270:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4270:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4277:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4266:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4266:3:5"
																},
																"nativeSrc": "4266:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4266:16:5"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "4259:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4259:3:5"
																}
															]
														},
														{
															"nativeSrc": "4292:44:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4292:44:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4310:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4310:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4322:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4322:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4330:4:5",
																				"nodeType": "YulLiteral",
																				"src": "4330:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4318:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4318:3:5"
																		},
																		"nativeSrc": "4318:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4318:17:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4306:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4306:3:5"
																},
																"nativeSrc": "4306:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4306:30:5"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "4296:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4296:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4364:103:5",
																"nodeType": "YulBlock",
																"src": "4364:103:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "4378:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4378:77:5"
																			},
																			"nativeSrc": "4378:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4378:79:5"
																		},
																		"nativeSrc": "4378:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4378:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "4351:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4351:6:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4359:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4359:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4348:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4348:2:5"
																},
																"nativeSrc": "4348:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4348:15:5"
															},
															"nativeSrc": "4345:122:5",
															"nodeType": "YulIf",
															"src": "4345:122:5"
														},
														{
															"body": {
																"nativeSrc": "4552:155:5",
																"nodeType": "YulBlock",
																"src": "4552:155:5",
																"statements": [
																	{
																		"nativeSrc": "4567:21:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4567:21:5",
																		"value": {
																			"name": "src",
																			"nativeSrc": "4585:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4585:3:5"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "4571:10:5",
																				"nodeType": "YulTypedName",
																				"src": "4571:10:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4609:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4609:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "4646:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "4646:10:5"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "4658:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4658:3:5"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nativeSrc": "4614:31:5",
																						"nodeType": "YulIdentifier",
																						"src": "4614:31:5"
																					},
																					"nativeSrc": "4614:48:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4614:48:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4602:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4602:6:5"
																			},
																			"nativeSrc": "4602:61:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4602:61:5"
																		},
																		"nativeSrc": "4602:61:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4602:61:5"
																	},
																	{
																		"nativeSrc": "4676:21:5",
																		"nodeType": "YulAssignment",
																		"src": "4676:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4687:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4687:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4692:4:5",
																					"nodeType": "YulLiteral",
																					"src": "4692:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4683:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4683:3:5"
																			},
																			"nativeSrc": "4683:14:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4683:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "4676:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4676:3:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4505:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4505:3:5"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "4510:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4510:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4502:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4502:2:5"
																},
																"nativeSrc": "4502:15:5",
																"nodeType": "YulFunctionCall",
																"src": "4502:15:5"
															},
															"nativeSrc": "4476:231:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4518:25:5",
																"nodeType": "YulBlock",
																"src": "4518:25:5",
																"statements": [
																	{
																		"nativeSrc": "4520:21:5",
																		"nodeType": "YulAssignment",
																		"src": "4520:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "4531:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4531:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4536:4:5",
																					"nodeType": "YulLiteral",
																					"src": "4536:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4527:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4527:3:5"
																			},
																			"nativeSrc": "4527:14:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4527:14:5"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "4520:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4520:3:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4480:21:5",
																"nodeType": "YulBlock",
																"src": "4480:21:5",
																"statements": [
																	{
																		"nativeSrc": "4482:17:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4482:17:5",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "4493:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4493:6:5"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "4486:3:5",
																				"nodeType": "YulTypedName",
																				"src": "4486:3:5",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4476:231:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "3981:732:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4064:6:5",
														"nodeType": "YulTypedName",
														"src": "4064:6:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4072:6:5",
														"nodeType": "YulTypedName",
														"src": "4072:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4080:3:5",
														"nodeType": "YulTypedName",
														"src": "4080:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4088:5:5",
														"nodeType": "YulTypedName",
														"src": "4088:5:5",
														"type": ""
													}
												],
												"src": "3981:732:5"
											},
											{
												"body": {
													"nativeSrc": "4824:297:5",
													"nodeType": "YulBlock",
													"src": "4824:297:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4873:83:5",
																"nodeType": "YulBlock",
																"src": "4873:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "4875:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4875:77:5"
																			},
																			"nativeSrc": "4875:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4875:79:5"
																		},
																		"nativeSrc": "4875:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4875:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4852:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4852:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4860:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4860:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4848:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4848:3:5"
																				},
																				"nativeSrc": "4848:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4848:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4867:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4867:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4844:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4844:3:5"
																		},
																		"nativeSrc": "4844:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4844:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4837:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:5"
																},
																"nativeSrc": "4837:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4837:35:5"
															},
															"nativeSrc": "4834:122:5",
															"nodeType": "YulIf",
															"src": "4834:122:5"
														},
														{
															"nativeSrc": "4965:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4965:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4985:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4985:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4979:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4979:5:5"
																},
																"nativeSrc": "4979:13:5",
																"nodeType": "YulFunctionCall",
																"src": "4979:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4969:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4969:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5001:114:5",
															"nodeType": "YulAssignment",
															"src": "5001:114:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5088:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5088:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5096:4:5",
																				"nodeType": "YulLiteral",
																				"src": "5096:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5084:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5084:3:5"
																		},
																		"nativeSrc": "5084:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5084:17:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5103:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5103:6:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5111:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5111:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nativeSrc": "5010:73:5",
																	"nodeType": "YulIdentifier",
																	"src": "5010:73:5"
																},
																"nativeSrc": "5010:105:5",
																"nodeType": "YulFunctionCall",
																"src": "5010:105:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5001:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5001:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "4736:385:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4802:6:5",
														"nodeType": "YulTypedName",
														"src": "4802:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4810:3:5",
														"nodeType": "YulTypedName",
														"src": "4810:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4818:5:5",
														"nodeType": "YulTypedName",
														"src": "4818:5:5",
														"type": ""
													}
												],
												"src": "4736:385:5"
											},
											{
												"body": {
													"nativeSrc": "5288:908:5",
													"nodeType": "YulBlock",
													"src": "5288:908:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5334:83:5",
																"nodeType": "YulBlock",
																"src": "5334:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5336:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5336:77:5"
																			},
																			"nativeSrc": "5336:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5336:79:5"
																		},
																		"nativeSrc": "5336:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5336:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5309:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5309:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5318:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5318:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5305:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5305:3:5"
																		},
																		"nativeSrc": "5305:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5305:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5330:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5330:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5301:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5301:3:5"
																},
																"nativeSrc": "5301:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5301:32:5"
															},
															"nativeSrc": "5298:119:5",
															"nodeType": "YulIf",
															"src": "5298:119:5"
														},
														{
															"nativeSrc": "5427:306:5",
															"nodeType": "YulBlock",
															"src": "5427:306:5",
															"statements": [
																{
																	"nativeSrc": "5442:38:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5442:38:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5466:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5466:9:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5477:1:5",
																						"nodeType": "YulLiteral",
																						"src": "5477:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5462:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5462:3:5"
																				},
																				"nativeSrc": "5462:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5462:17:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5456:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5456:5:5"
																		},
																		"nativeSrc": "5456:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5456:24:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5446:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5446:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5527:83:5",
																		"nodeType": "YulBlock",
																		"src": "5527:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5529:77:5",
																						"nodeType": "YulIdentifier",
																						"src": "5529:77:5"
																					},
																					"nativeSrc": "5529:79:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5529:79:5"
																				},
																				"nativeSrc": "5529:79:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "5529:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5499:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5499:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5507:18:5",
																				"nodeType": "YulLiteral",
																				"src": "5507:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5496:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "5496:2:5"
																		},
																		"nativeSrc": "5496:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5496:30:5"
																	},
																	"nativeSrc": "5493:117:5",
																	"nodeType": "YulIf",
																	"src": "5493:117:5"
																},
																{
																	"nativeSrc": "5624:99:5",
																	"nodeType": "YulAssignment",
																	"src": "5624:99:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5695:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5695:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5706:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5706:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5691:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5691:3:5"
																				},
																				"nativeSrc": "5691:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5691:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5715:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5715:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "5634:56:5",
																			"nodeType": "YulIdentifier",
																			"src": "5634:56:5"
																		},
																		"nativeSrc": "5634:89:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5634:89:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5624:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5624:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5743:307:5",
															"nodeType": "YulBlock",
															"src": "5743:307:5",
															"statements": [
																{
																	"nativeSrc": "5758:39:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5758:39:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5782:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5782:9:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5793:2:5",
																						"nodeType": "YulLiteral",
																						"src": "5793:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5778:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5778:3:5"
																				},
																				"nativeSrc": "5778:18:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5778:18:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5772:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "5772:5:5"
																		},
																		"nativeSrc": "5772:25:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:25:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5762:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5762:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5844:83:5",
																		"nodeType": "YulBlock",
																		"src": "5844:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5846:77:5",
																						"nodeType": "YulIdentifier",
																						"src": "5846:77:5"
																					},
																					"nativeSrc": "5846:79:5",
																					"nodeType": "YulFunctionCall",
																					"src": "5846:79:5"
																				},
																				"nativeSrc": "5846:79:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "5846:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5816:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5816:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5824:18:5",
																				"nodeType": "YulLiteral",
																				"src": "5824:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5813:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "5813:2:5"
																		},
																		"nativeSrc": "5813:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5813:30:5"
																	},
																	"nativeSrc": "5810:117:5",
																	"nodeType": "YulIf",
																	"src": "5810:117:5"
																},
																{
																	"nativeSrc": "5941:99:5",
																	"nodeType": "YulAssignment",
																	"src": "5941:99:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6012:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "6012:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6023:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "6023:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6008:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6008:3:5"
																				},
																				"nativeSrc": "6008:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6008:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6032:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6032:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nativeSrc": "5951:56:5",
																			"nodeType": "YulIdentifier",
																			"src": "5951:56:5"
																		},
																		"nativeSrc": "5951:89:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5951:89:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5941:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5941:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6060:129:5",
															"nodeType": "YulBlock",
															"src": "6060:129:5",
															"statements": [
																{
																	"nativeSrc": "6075:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6075:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6089:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6089:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6079:6:5",
																			"nodeType": "YulTypedName",
																			"src": "6079:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6105:74:5",
																	"nodeType": "YulAssignment",
																	"src": "6105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:5"
																				},
																				"nativeSrc": "6147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "6115:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "6115:31:5"
																		},
																		"nativeSrc": "6115:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6105:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "6105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_address_fromMemory",
												"nativeSrc": "5127:1069:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5242:9:5",
														"nodeType": "YulTypedName",
														"src": "5242:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5253:7:5",
														"nodeType": "YulTypedName",
														"src": "5253:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5265:6:5",
														"nodeType": "YulTypedName",
														"src": "5265:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5273:6:5",
														"nodeType": "YulTypedName",
														"src": "5273:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5281:6:5",
														"nodeType": "YulTypedName",
														"src": "5281:6:5",
														"type": ""
													}
												],
												"src": "5127:1069:5"
											},
											{
												"body": {
													"nativeSrc": "6298:73:5",
													"nodeType": "YulBlock",
													"src": "6298:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6315:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6315:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6320:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6320:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6308:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6308:6:5"
																},
																"nativeSrc": "6308:19:5",
																"nodeType": "YulFunctionCall",
																"src": "6308:19:5"
															},
															"nativeSrc": "6308:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "6308:19:5"
														},
														{
															"nativeSrc": "6336:29:5",
															"nodeType": "YulAssignment",
															"src": "6336:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6355:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6355:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6360:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6360:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6351:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6351:3:5"
																},
																"nativeSrc": "6351:14:5",
																"nodeType": "YulFunctionCall",
																"src": "6351:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6336:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "6336:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6202:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6270:3:5",
														"nodeType": "YulTypedName",
														"src": "6270:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6275:6:5",
														"nodeType": "YulTypedName",
														"src": "6275:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6286:11:5",
														"nodeType": "YulTypedName",
														"src": "6286:11:5",
														"type": ""
													}
												],
												"src": "6202:169:5"
											},
											{
												"body": {
													"nativeSrc": "6483:69:5",
													"nodeType": "YulBlock",
													"src": "6483:69:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6505:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6505:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6513:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6513:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6501:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6501:3:5"
																		},
																		"nativeSrc": "6501:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6501:14:5"
																	},
																	{
																		"hexValue": "546f6b656e20616e6420776569676874206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "6517:27:5",
																		"nodeType": "YulLiteral",
																		"src": "6517:27:5",
																		"type": "",
																		"value": "Token and weight mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6494:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6494:6:5"
																},
																"nativeSrc": "6494:51:5",
																"nodeType": "YulFunctionCall",
																"src": "6494:51:5"
															},
															"nativeSrc": "6494:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "6494:51:5"
														}
													]
												},
												"name": "store_literal_in_memory_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9",
												"nativeSrc": "6377:175:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6475:6:5",
														"nodeType": "YulTypedName",
														"src": "6475:6:5",
														"type": ""
													}
												],
												"src": "6377:175:5"
											},
											{
												"body": {
													"nativeSrc": "6704:220:5",
													"nodeType": "YulBlock",
													"src": "6704:220:5",
													"statements": [
														{
															"nativeSrc": "6714:74:5",
															"nodeType": "YulAssignment",
															"src": "6714:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6780:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6780:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6785:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6785:2:5",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6721:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6721:58:5"
																},
																"nativeSrc": "6721:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6721:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6714:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6714:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6886:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6886:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9",
																	"nativeSrc": "6797:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6797:88:5"
																},
																"nativeSrc": "6797:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6797:93:5"
															},
															"nativeSrc": "6797:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6797:93:5"
														},
														{
															"nativeSrc": "6899:19:5",
															"nodeType": "YulAssignment",
															"src": "6899:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6910:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6910:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6915:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6915:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6906:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6906:3:5"
																},
																"nativeSrc": "6906:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6906:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6899:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6899:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6558:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6692:3:5",
														"nodeType": "YulTypedName",
														"src": "6692:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6700:3:5",
														"nodeType": "YulTypedName",
														"src": "6700:3:5",
														"type": ""
													}
												],
												"src": "6558:366:5"
											},
											{
												"body": {
													"nativeSrc": "7101:248:5",
													"nodeType": "YulBlock",
													"src": "7101:248:5",
													"statements": [
														{
															"nativeSrc": "7111:26:5",
															"nodeType": "YulAssignment",
															"src": "7111:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7123:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7123:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7134:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7134:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7119:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7119:3:5"
																},
																"nativeSrc": "7119:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7119:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7111:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7111:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7158:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7158:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7169:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7169:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7154:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7154:3:5"
																		},
																		"nativeSrc": "7154:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7154:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7177:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7177:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7183:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7183:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7173:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7173:3:5"
																		},
																		"nativeSrc": "7173:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7173:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7147:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7147:6:5"
																},
																"nativeSrc": "7147:47:5",
																"nodeType": "YulFunctionCall",
																"src": "7147:47:5"
															},
															"nativeSrc": "7147:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "7147:47:5"
														},
														{
															"nativeSrc": "7203:139:5",
															"nodeType": "YulAssignment",
															"src": "7203:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7337:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7337:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7211:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "7211:124:5"
																},
																"nativeSrc": "7211:131:5",
																"nodeType": "YulFunctionCall",
																"src": "7211:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7203:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7203:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6930:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7081:9:5",
														"nodeType": "YulTypedName",
														"src": "7081:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7096:4:5",
														"nodeType": "YulTypedName",
														"src": "7096:4:5",
														"type": ""
													}
												],
												"src": "6930:419:5"
											},
											{
												"body": {
													"nativeSrc": "7383:152:5",
													"nodeType": "YulBlock",
													"src": "7383:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7400:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7400:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7403:77:5",
																		"nodeType": "YulLiteral",
																		"src": "7403:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7393:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7393:6:5"
																},
																"nativeSrc": "7393:88:5",
																"nodeType": "YulFunctionCall",
																"src": "7393:88:5"
															},
															"nativeSrc": "7393:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "7393:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7497:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7497:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7500:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7500:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7490:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7490:6:5"
																},
																"nativeSrc": "7490:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7490:15:5"
															},
															"nativeSrc": "7490:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7490:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7521:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7521:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7524:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7524:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7514:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7514:6:5"
																},
																"nativeSrc": "7514:15:5",
																"nodeType": "YulFunctionCall",
																"src": "7514:15:5"
															},
															"nativeSrc": "7514:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "7514:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "7355:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "7355:180:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token and weight mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a600555348015610014575f80fd5b50604051611ec8380380611ec8833981810160405281019061003691906104b8565b815183511461007a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100719061059a565b60405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600490805190602001906100d0929190610168565b505f5b835181101561015f578281815181106100ef576100ee6105b8565b5b602002602001015160025f86848151811061010d5761010c6105b8565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080806001019150506100d3565b505050506105e5565b828054828255905f5260205f209081019282156101de579160200282015b828111156101dd578251825f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610186565b5b5090506101eb91906101ef565b5090565b5b80821115610206575f815f9055506001016101f0565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6102658261021f565b810181811067ffffffffffffffff821117156102845761028361022f565b5b80604052505050565b5f61029661020a565b90506102a2828261025c565b919050565b5f67ffffffffffffffff8211156102c1576102c061022f565b5b602082029050602081019050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102ff826102d6565b9050919050565b61030f816102f5565b8114610319575f80fd5b50565b5f8151905061032a81610306565b92915050565b5f61034261033d846102a7565b61028d565b90508083825260208201905060208402830185811115610365576103646102d2565b5b835b8181101561038e578061037a888261031c565b845260208401935050602081019050610367565b5050509392505050565b5f82601f8301126103ac576103ab61021b565b5b81516103bc848260208601610330565b91505092915050565b5f67ffffffffffffffff8211156103df576103de61022f565b5b602082029050602081019050919050565b5f819050919050565b610402816103f0565b811461040c575f80fd5b50565b5f8151905061041d816103f9565b92915050565b5f610435610430846103c5565b61028d565b90508083825260208201905060208402830185811115610458576104576102d2565b5b835b81811015610481578061046d888261040f565b84526020840193505060208101905061045a565b5050509392505050565b5f82601f83011261049f5761049e61021b565b5b81516104af848260208601610423565b91505092915050565b5f805f606084860312156104cf576104ce610213565b5b5f84015167ffffffffffffffff8111156104ec576104eb610217565b5b6104f886828701610398565b935050602084015167ffffffffffffffff81111561051957610518610217565b5b6105258682870161048b565b92505060406105368682870161031c565b9150509250925092565b5f82825260208201905092915050565b7f546f6b656e20616e6420776569676874206d69736d61746368000000000000005f82015250565b5f610584601983610540565b915061058f82610550565b602082019050919050565b5f6020820190508181035f8301526105b181610578565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b6118d6806105f25f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80636805d6ad1161006f5780636805d6ad1461017457806376319190146101a457806398118cb4146101c0578063a201ccf6146101de578063ab2f3ad4146101fa578063c62556261461022a576100b2565b806321faf184146100b65780633053f0b2146100d2578063357bf15c146101025780634d8e3d3b1461011e578063566887001461013a5780635aa6e67514610156575b5f80fd5b6100d060048036038101906100cb91906112b7565b61025a565b005b6100ec60048036038101906100e791906112f5565b6103b0565b6040516100f9919061132f565b60405180910390f35b61011c60048036038101906101179190611348565b6103c5565b005b610138600480360381019061013391906112b7565b6104a2565b005b610154600480360381019061014f91906112b7565b610620565b005b61015e610848565b60405161016b9190611382565b60405180910390f35b61018e6004803603810190610189919061139b565b61086d565b60405161019b919061132f565b60405180910390f35b6101be60048036038101906101b991906112f5565b6108f0565b005b6101c8610b84565b6040516101d5919061132f565b60405180910390f35b6101f860048036038101906101f391906112b7565b610b8a565b005b610214600480360381019061020f91906112f5565b610def565b604051610221919061132f565b60405180910390f35b610244600480360381019061023f9190611348565b610e04565b6040516102519190611382565b60405180910390f35b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e090611433565b60405180910390fd5b6102f282610e3f565b610331576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103289061149b565b60405180910390fd5b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507fc9bf4277eb054fe4fa82ff2e3b468a6300f4bc73a13794b02287f6d8282c998c82826040516103a49291906114b9565b60405180910390a15050565b6001602052805f5260405f205f915090505481565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044b90611433565b60405180910390fd5b6064811115610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048f9061152a565b60405180910390fd5b8060058190555050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890611433565b60405180910390fd5b61053a82610e3f565b1561057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057190611592565b60405180910390fd5b600482908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b61062982610e3f565b610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f9061149b565b60405180910390fd5b5f6127106005548361067a91906115dd565b610684919061164b565b90505f8183610693919061167b565b90506106c23330838773ffffffffffffffffffffffffffffffffffffffff16610ee1909392919063ffffffff16565b6107103360035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848773ffffffffffffffffffffffffffffffffffffffff16610ee1909392919063ffffffff16565b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461079891906116ae565b925050819055508060015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107eb91906116ae565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9d278c56ba6dc86a12eefe6b43112bd6e06648eb4ec0b950ee2d783d40e2acb4858360405161083a9291906114b9565b60405180910390a250505050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097690611433565b60405180910390fd5b61098881610e3f565b6109c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109be9061149b565b60405180910390fd5b5f5b600480549050811015610b40578173ffffffffffffffffffffffffffffffffffffffff1660048281548110610a0157610a006116e1565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b335760046001600480549050610a58919061167b565b81548110610a6957610a686116e1565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660048281548110610aa557610aa46116e1565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004805480610afc57610afb61170e565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055610b40565b80806001019150506109c9565b5060025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f905550565b60055481565b610b9382610e3f565b610bd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc99061149b565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610c8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8590611785565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d16919061167b565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d69919061167b565b92505081905550610d9b33828473ffffffffffffffffffffffffffffffffffffffff16610f639092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f983e86fda8e7b1e2eae380201830eaf1cac55772e8e39583da349865e81788638383604051610de39291906114b9565b60405180910390a25050565b6002602052805f5260405f205f915090505481565b60048181548110610e13575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f90505b600480549050811015610ed7578273ffffffffffffffffffffffffffffffffffffffff1660048281548110610e7d57610e7c6116e1565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610eca576001915050610edc565b8080600101915050610e45565b505f90505b919050565b610f5d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610f16939291906117a3565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fe2565b50505050565b610fdd838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610f969291906114b9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fe2565b505050565b5f61100c828473ffffffffffffffffffffffffffffffffffffffff1661107790919063ffffffff16565b90505f81511415801561103057508080602001905181019061102e919061180d565b155b1561107257826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016110699190611382565b60405180910390fd5b505050565b606061108483835f61108c565b905092915050565b6060814710156110d357306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016110ca9190611382565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516110fb919061188a565b5f6040518083038185875af1925050503d805f8114611135576040519150601f19603f3d011682016040523d82523d5f602084013e61113a565b606091505b509150915061114a868383611155565b925050509392505050565b60608261116a57611165826111e2565b6111da565b5f825114801561119057505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156111d257836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016111c99190611382565b60405180910390fd5b8190506111db565b5b9392505050565b5f815111156111f45780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112538261122a565b9050919050565b61126381611249565b811461126d575f80fd5b50565b5f8135905061127e8161125a565b92915050565b5f819050919050565b61129681611284565b81146112a0575f80fd5b50565b5f813590506112b18161128d565b92915050565b5f80604083850312156112cd576112cc611226565b5b5f6112da85828601611270565b92505060206112eb858286016112a3565b9150509250929050565b5f6020828403121561130a57611309611226565b5b5f61131784828501611270565b91505092915050565b61132981611284565b82525050565b5f6020820190506113425f830184611320565b92915050565b5f6020828403121561135d5761135c611226565b5b5f61136a848285016112a3565b91505092915050565b61137c81611249565b82525050565b5f6020820190506113955f830184611373565b92915050565b5f80604083850312156113b1576113b0611226565b5b5f6113be85828601611270565b92505060206113cf85828601611270565b9150509250929050565b5f82825260208201905092915050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f61141d600e836113d9565b9150611428826113e9565b602082019050919050565b5f6020820190508181035f83015261144a81611411565b9050919050565b7f546f6b656e206e6f7420737570706f72746564000000000000000000000000005f82015250565b5f6114856013836113d9565b915061149082611451565b602082019050919050565b5f6020820190508181035f8301526114b281611479565b9050919050565b5f6040820190506114cc5f830185611373565b6114d96020830184611320565b9392505050565b7f46656520746f6f206869676800000000000000000000000000000000000000005f82015250565b5f611514600c836113d9565b915061151f826114e0565b602082019050919050565b5f6020820190508181035f83015261154181611508565b9050919050565b7f546f6b656e20616c726561647920737570706f727465640000000000000000005f82015250565b5f61157c6017836113d9565b915061158782611548565b602082019050919050565b5f6020820190508181035f8301526115a981611570565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115e782611284565b91506115f283611284565b925082820261160081611284565b91508282048414831517611617576116166115b0565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61165582611284565b915061166083611284565b9250826116705761166f61161e565b5b828204905092915050565b5f61168582611284565b915061169083611284565b92508282039050818111156116a8576116a76115b0565b5b92915050565b5f6116b882611284565b91506116c383611284565b92508282019050808211156116db576116da6115b0565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61176f6014836113d9565b915061177a8261173b565b602082019050919050565b5f6020820190508181035f83015261179c81611763565b9050919050565b5f6060820190506117b65f830186611373565b6117c36020830185611373565b6117d06040830184611320565b949350505050565b5f8115159050919050565b6117ec816117d8565b81146117f6575f80fd5b50565b5f81519050611807816117e3565b92915050565b5f6020828403121561182257611821611226565b5b5f61182f848285016117f9565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61186482611838565b61186e8185611842565b935061187e81856020860161184c565b80840191505092915050565b5f611895828461185a565b91508190509291505056fea2646970667358221220ab03e5580427c0916df5aa02a59a6cba7baaa8c91c7b0bf9cf7c982104688e0f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1EC8 CODESIZE SUB DUP1 PUSH2 0x1EC8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0x4B8 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71 SWAP1 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xD0 SWAP3 SWAP2 SWAP1 PUSH2 0x168 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x15F JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xEF JUMPI PUSH2 0xEE PUSH2 0x5B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x10D JUMPI PUSH2 0x10C PUSH2 0x5B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD3 JUMP JUMPDEST POP POP POP POP PUSH2 0x5E5 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1DE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1DD JUMPI DUP3 MLOAD DUP3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x186 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1EF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x206 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1F0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x265 DUP3 PUSH2 0x21F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x284 JUMPI PUSH2 0x283 PUSH2 0x22F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x296 PUSH2 0x20A JUMP JUMPDEST SWAP1 POP PUSH2 0x2A2 DUP3 DUP3 PUSH2 0x25C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C1 JUMPI PUSH2 0x2C0 PUSH2 0x22F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2FF DUP3 PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30F DUP2 PUSH2 0x2F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x319 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x32A DUP2 PUSH2 0x306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x342 PUSH2 0x33D DUP5 PUSH2 0x2A7 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x365 JUMPI PUSH2 0x364 PUSH2 0x2D2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38E JUMPI DUP1 PUSH2 0x37A DUP9 DUP3 PUSH2 0x31C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x367 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3AC JUMPI PUSH2 0x3AB PUSH2 0x21B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x3BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x330 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3DF JUMPI PUSH2 0x3DE PUSH2 0x22F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x402 DUP2 PUSH2 0x3F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x40C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x41D DUP2 PUSH2 0x3F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x435 PUSH2 0x430 DUP5 PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x458 JUMPI PUSH2 0x457 PUSH2 0x2D2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x481 JUMPI DUP1 PUSH2 0x46D DUP9 DUP3 PUSH2 0x40F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x45A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x49F JUMPI PUSH2 0x49E PUSH2 0x21B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4AF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x423 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4CF JUMPI PUSH2 0x4CE PUSH2 0x213 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4EC JUMPI PUSH2 0x4EB PUSH2 0x217 JUMP JUMPDEST JUMPDEST PUSH2 0x4F8 DUP7 DUP3 DUP8 ADD PUSH2 0x398 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x518 PUSH2 0x217 JUMP JUMPDEST JUMPDEST PUSH2 0x525 DUP7 DUP3 DUP8 ADD PUSH2 0x48B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x536 DUP7 DUP3 DUP8 ADD PUSH2 0x31C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E20616E6420776569676874206D69736D6174636800000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x584 PUSH1 0x19 DUP4 PUSH2 0x540 JUMP JUMPDEST SWAP2 POP PUSH2 0x58F DUP3 PUSH2 0x550 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5B1 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x18D6 DUP1 PUSH2 0x5F2 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6805D6AD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x6805D6AD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x76319190 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xA201CCF6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xAB2F3AD4 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xC6255626 EQ PUSH2 0x22A JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x21FAF184 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x3053F0B2 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x357BF15C EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x4D8E3D3B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x56688700 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x156 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x25A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15E PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x86D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xB8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E0 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F2 DUP3 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xC9BF4277EB054FE4FA82FF2E3B468A6300F4BC73A13794B02287F6D8282C998C DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP3 SWAP2 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x53A DUP3 PUSH2 0xE3F JUMP JUMPDEST ISZERO PUSH2 0x57A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x571 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x629 DUP3 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x5 SLOAD DUP4 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x684 SWAP2 SWAP1 PUSH2 0x164B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST SWAP1 POP PUSH2 0x6C2 CALLER ADDRESS DUP4 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x710 CALLER PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x798 SWAP2 SWAP1 PUSH2 0x16AE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x16AE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9D278C56BA6DC86A12EEFE6B43112BD6E06648EB4EC0B950EE2D783D40E2ACB4 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x83A SWAP3 SWAP2 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x976 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x988 DUP2 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BE SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xB40 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA01 JUMPI PUSH2 0xA00 PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB33 JUMPI PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA69 JUMPI PUSH2 0xA68 PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAA5 JUMPI PUSH2 0xAA4 PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 DUP1 SLOAD DUP1 PUSH2 0xAFC JUMPI PUSH2 0xAFB PUSH2 0x170E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0xB40 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9C9 JUMP JUMPDEST POP PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB93 DUP3 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC85 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD16 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD69 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD9B CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x983E86FDA8E7B1E2EAE380201830EAF1CAC55772E8E39583DA349865E8178863 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDE3 SWAP3 SWAP2 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE13 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xED7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE7D JUMPI PUSH2 0xE7C PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECA JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xEDC JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE45 JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF16 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFE2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFDD DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF96 SWAP3 SWAP2 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100C DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1077 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1030 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1072 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1084 DUP4 DUP4 PUSH0 PUSH2 0x108C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x10D3 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CA SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x10FB SWAP2 SWAP1 PUSH2 0x188A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1135 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x113A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x114A DUP7 DUP4 DUP4 PUSH2 0x1155 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x116A JUMPI PUSH2 0x1165 DUP3 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x11DA JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1190 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x11D2 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C9 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x11DB JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x11F4 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1253 DUP3 PUSH2 0x122A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1263 DUP2 PUSH2 0x1249 JUMP JUMPDEST DUP2 EQ PUSH2 0x126D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127E DUP2 PUSH2 0x125A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1296 DUP2 PUSH2 0x1284 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B1 DUP2 PUSH2 0x128D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12CD JUMPI PUSH2 0x12CC PUSH2 0x1226 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12DA DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12EB DUP6 DUP3 DUP7 ADD PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130A JUMPI PUSH2 0x1309 PUSH2 0x1226 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1317 DUP5 DUP3 DUP6 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1329 DUP2 PUSH2 0x1284 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1342 PUSH0 DUP4 ADD DUP5 PUSH2 0x1320 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135D JUMPI PUSH2 0x135C PUSH2 0x1226 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x136A DUP5 DUP3 DUP6 ADD PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x137C DUP2 PUSH2 0x1249 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH0 DUP4 ADD DUP5 PUSH2 0x1373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B1 JUMPI PUSH2 0x13B0 PUSH2 0x1226 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13BE DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13CF DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x141D PUSH1 0xE DUP4 PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1428 DUP3 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x144A DUP2 PUSH2 0x1411 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420737570706F7274656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1485 PUSH1 0x13 DUP4 PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1490 DUP3 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14B2 DUP2 PUSH2 0x1479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14CC PUSH0 DUP4 ADD DUP6 PUSH2 0x1373 JUMP JUMPDEST PUSH2 0x14D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1320 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1514 PUSH1 0xC DUP4 PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x151F DUP3 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1541 DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920737570706F72746564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x157C PUSH1 0x17 DUP4 PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1587 DUP3 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15A9 DUP2 PUSH2 0x1570 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15E7 DUP3 PUSH2 0x1284 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F2 DUP4 PUSH2 0x1284 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1600 DUP2 PUSH2 0x1284 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1617 JUMPI PUSH2 0x1616 PUSH2 0x15B0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1655 DUP3 PUSH2 0x1284 JUMP JUMPDEST SWAP2 POP PUSH2 0x1660 DUP4 PUSH2 0x1284 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1670 JUMPI PUSH2 0x166F PUSH2 0x161E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1685 DUP3 PUSH2 0x1284 JUMP JUMPDEST SWAP2 POP PUSH2 0x1690 DUP4 PUSH2 0x1284 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x16A8 JUMPI PUSH2 0x16A7 PUSH2 0x15B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16B8 DUP3 PUSH2 0x1284 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C3 DUP4 PUSH2 0x1284 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16DB JUMPI PUSH2 0x16DA PUSH2 0x15B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x176F PUSH1 0x14 DUP4 PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x177A DUP3 PUSH2 0x173B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x179C DUP2 PUSH2 0x1763 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17B6 PUSH0 DUP4 ADD DUP7 PUSH2 0x1373 JUMP JUMPDEST PUSH2 0x17C3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1373 JUMP JUMPDEST PUSH2 0x17D0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1320 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EC DUP2 PUSH2 0x17D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1807 DUP2 PUSH2 0x17E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1822 JUMPI PUSH2 0x1821 PUSH2 0x1226 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x182F DUP5 DUP3 DUP6 ADD PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1864 DUP3 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x186E DUP2 DUP6 PUSH2 0x1842 JUMP JUMPDEST SWAP4 POP PUSH2 0x187E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x184C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1895 DUP3 DUP5 PUSH2 0x185A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SUB 0xE5 PC DIV 0x27 0xC0 SWAP2 PUSH14 0xF5AA02A59A6CBA7BAAA8C91C7B0B 0xF9 0xCF PUSH29 0x982104688E0F64736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "187:4743:4:-:0;;;837:2;807:32;;1255:369;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1378:8;:15;1360:7;:14;:33;1352:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1447:11;1434:10;;:24;;;;;;;;;;;;;;;;;;1487:7;1469:15;:25;;;;;;;;;;;;:::i;:::-;;1512:9;1507:110;1531:7;:14;1527:1;:18;1507:110;;;1594:8;1603:1;1594:11;;;;;;;;:::i;:::-;;;;;;;;1567:12;:24;1580:7;1588:1;1580:10;;;;;;;;:::i;:::-;;;;;;;;1567:24;;;;;;;;;;;;;;;:38;;;;1547:3;;;;;;;1507:110;;;;1255:369;;;187:4743;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:5:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:143::-;2032:5;2063:6;2057:13;2048:22;;2079:33;2106:5;2079:33;:::i;:::-;1975:143;;;;:::o;2141:732::-;2248:5;2273:81;2289:64;2346:6;2289:64;:::i;:::-;2273:81;:::i;:::-;2264:90;;2374:5;2403:6;2396:5;2389:21;2437:4;2430:5;2426:16;2419:23;;2490:4;2482:6;2478:17;2470:6;2466:30;2519:3;2511:6;2508:15;2505:122;;;2538:79;;:::i;:::-;2505:122;2653:6;2636:231;2670:6;2665:3;2662:15;2636:231;;;2745:3;2774:48;2818:3;2806:10;2774:48;:::i;:::-;2769:3;2762:61;2852:4;2847:3;2843:14;2836:21;;2712:155;2696:4;2691:3;2687:14;2680:21;;2636:231;;;2640:21;2254:619;;2141:732;;;;;:::o;2896:385::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3145:6;3139:13;3170:105;3271:3;3263:6;3256:4;3248:6;3244:17;3170:105;:::i;:::-;3161:114;;2984:297;2896:385;;;;:::o;3287:311::-;3364:4;3454:18;3446:6;3443:30;3440:56;;;3476:18;;:::i;:::-;3440:56;3526:4;3518:6;3514:17;3506:25;;3586:4;3580;3576:15;3568:23;;3287:311;;;:::o;3604:77::-;3641:7;3670:5;3659:16;;3604:77;;;:::o;3687:122::-;3760:24;3778:5;3760:24;:::i;:::-;3753:5;3750:35;3740:63;;3799:1;3796;3789:12;3740:63;3687:122;:::o;3815:143::-;3872:5;3903:6;3897:13;3888:22;;3919:33;3946:5;3919:33;:::i;:::-;3815:143;;;;:::o;3981:732::-;4088:5;4113:81;4129:64;4186:6;4129:64;:::i;:::-;4113:81;:::i;:::-;4104:90;;4214:5;4243:6;4236:5;4229:21;4277:4;4270:5;4266:16;4259:23;;4330:4;4322:6;4318:17;4310:6;4306:30;4359:3;4351:6;4348:15;4345:122;;;4378:79;;:::i;:::-;4345:122;4493:6;4476:231;4510:6;4505:3;4502:15;4476:231;;;4585:3;4614:48;4658:3;4646:10;4614:48;:::i;:::-;4609:3;4602:61;4692:4;4687:3;4683:14;4676:21;;4552:155;4536:4;4531:3;4527:14;4520:21;;4476:231;;;4480:21;4094:619;;3981:732;;;;;:::o;4736:385::-;4818:5;4867:3;4860:4;4852:6;4848:17;4844:27;4834:122;;4875:79;;:::i;:::-;4834:122;4985:6;4979:13;5010:105;5111:3;5103:6;5096:4;5088:6;5084:17;5010:105;:::i;:::-;5001:114;;4824:297;4736:385;;;;:::o;5127:1069::-;5265:6;5273;5281;5330:2;5318:9;5309:7;5305:23;5301:32;5298:119;;;5336:79;;:::i;:::-;5298:119;5477:1;5466:9;5462:17;5456:24;5507:18;5499:6;5496:30;5493:117;;;5529:79;;:::i;:::-;5493:117;5634:89;5715:7;5706:6;5695:9;5691:22;5634:89;:::i;:::-;5624:99;;5427:306;5793:2;5782:9;5778:18;5772:25;5824:18;5816:6;5813:30;5810:117;;;5846:79;;:::i;:::-;5810:117;5951:89;6032:7;6023:6;6012:9;6008:22;5951:89;:::i;:::-;5941:99;;5743:307;6089:2;6115:64;6171:7;6162:6;6151:9;6147:22;6115:64;:::i;:::-;6105:74;;6060:129;5127:1069;;;;;:::o;6202:169::-;6286:11;6320:6;6315:3;6308:19;6360:4;6355:3;6351:14;6336:29;;6202:169;;;;:::o;6377:175::-;6517:27;6513:1;6505:6;6501:14;6494:51;6377:175;:::o;6558:366::-;6700:3;6721:67;6785:2;6780:3;6721:67;:::i;:::-;6714:74;;6797:93;6886:3;6797:93;:::i;:::-;6915:2;6910:3;6906:12;6899:19;;6558:366;;;:::o;6930:419::-;7096:4;7134:2;7123:9;7119:18;7111:26;;7183:9;7177:4;7173:20;7169:1;7158:9;7154:17;7147:47;7211:131;7337:4;7211:131;:::i;:::-;7203:139;;6930:419;;;:::o;7355:180::-;7403:77;7400:1;7393:88;7500:4;7497:1;7490:15;7524:4;7521:1;7514:15;187:4743:4;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_353": {
									"entryPoint": 4066,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_655": {
									"entryPoint": 4578,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_852": {
									"entryPoint": 1568,
									"id": 852,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addSupportedToken_1019": {
									"entryPoint": 1186,
									"id": 1019,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_523": {
									"entryPoint": 4236,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_477": {
									"entryPoint": 4215,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getUserBalance_961": {
									"entryPoint": 2157,
									"id": 961,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@governance_684": {
									"entryPoint": 2120,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isSupportedToken_944": {
									"entryPoint": 3647,
									"id": 944,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@liquidityFee_690": {
									"entryPoint": 2948,
									"id": 690,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeLiquidity_912": {
									"entryPoint": 2954,
									"id": 912,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@removeSupportedToken_1076": {
									"entryPoint": 2288,
									"id": 1076,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_190": {
									"entryPoint": 3809,
									"id": 190,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_163": {
									"entryPoint": 3939,
									"id": 163,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setLiquidityFee_1095": {
									"entryPoint": 965,
									"id": 1095,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportedTokens_687": {
									"entryPoint": 3588,
									"id": 687,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenWeights_682": {
									"entryPoint": 3567,
									"id": 682,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalPoolLiquidity_678": {
									"entryPoint": 944,
									"id": 678,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateTokenWeight_989": {
									"entryPoint": 602,
									"id": 989,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_615": {
									"entryPoint": 4437,
									"id": 615,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6051,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5305,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6220,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 5552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5662,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 5902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 5947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1": {
									"entryPoint": 5344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047": {
									"entryPoint": 5201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36": {
									"entryPoint": 5097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12873:5",
										"nodeType": "YulBlock",
										"src": "0:12873:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "886:32:5",
													"nodeType": "YulBlock",
													"src": "886:32:5",
													"statements": [
														{
															"nativeSrc": "896:16:5",
															"nodeType": "YulAssignment",
															"src": "896:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:5",
																"nodeType": "YulIdentifier",
																"src": "907:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:5",
														"nodeType": "YulTypedName",
														"src": "868:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:5",
														"nodeType": "YulTypedName",
														"src": "878:7:5",
														"type": ""
													}
												],
												"src": "841:77:5"
											},
											{
												"body": {
													"nativeSrc": "967:79:5",
													"nodeType": "YulBlock",
													"src": "967:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:5",
																"nodeType": "YulBlock",
																"src": "1024:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:5"
																			},
																			"nativeSrc": "1026:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:5"
																		},
																		"nativeSrc": "1026:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:5"
																				},
																				"nativeSrc": "997:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:5"
																		},
																		"nativeSrc": "987:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:5"
																},
																"nativeSrc": "980:43:5",
																"nodeType": "YulFunctionCall",
																"src": "980:43:5"
															},
															"nativeSrc": "977:63:5",
															"nodeType": "YulIf",
															"src": "977:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:5",
														"nodeType": "YulTypedName",
														"src": "960:5:5",
														"type": ""
													}
												],
												"src": "924:122:5"
											},
											{
												"body": {
													"nativeSrc": "1104:87:5",
													"nodeType": "YulBlock",
													"src": "1104:87:5",
													"statements": [
														{
															"nativeSrc": "1114:29:5",
															"nodeType": "YulAssignment",
															"src": "1114:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:5"
																},
																"nativeSrc": "1123:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:5"
																},
																"nativeSrc": "1152:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:5"
															},
															"nativeSrc": "1152:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:5",
														"nodeType": "YulTypedName",
														"src": "1082:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:5",
														"nodeType": "YulTypedName",
														"src": "1090:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:5",
														"nodeType": "YulTypedName",
														"src": "1098:5:5",
														"type": ""
													}
												],
												"src": "1052:139:5"
											},
											{
												"body": {
													"nativeSrc": "1280:391:5",
													"nodeType": "YulBlock",
													"src": "1280:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:5",
																"nodeType": "YulBlock",
																"src": "1326:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:5"
																			},
																			"nativeSrc": "1328:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:5"
																		},
																		"nativeSrc": "1328:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:5"
																		},
																		"nativeSrc": "1297:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:5"
																},
																"nativeSrc": "1293:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:5"
															},
															"nativeSrc": "1290:119:5",
															"nodeType": "YulIf",
															"src": "1290:119:5"
														},
														{
															"nativeSrc": "1419:117:5",
															"nodeType": "YulBlock",
															"src": "1419:117:5",
															"statements": [
																{
																	"nativeSrc": "1434:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:5"
																				},
																				"nativeSrc": "1494:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:5"
																		},
																		"nativeSrc": "1473:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:5",
															"nodeType": "YulBlock",
															"src": "1546:118:5",
															"statements": [
																{
																	"nativeSrc": "1561:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:5"
																				},
																				"nativeSrc": "1622:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:5"
																		},
																		"nativeSrc": "1601:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:5",
														"nodeType": "YulTypedName",
														"src": "1242:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:5",
														"nodeType": "YulTypedName",
														"src": "1253:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:5",
														"nodeType": "YulTypedName",
														"src": "1265:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:5",
														"nodeType": "YulTypedName",
														"src": "1273:6:5",
														"type": ""
													}
												],
												"src": "1197:474:5"
											},
											{
												"body": {
													"nativeSrc": "1743:263:5",
													"nodeType": "YulBlock",
													"src": "1743:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1789:83:5",
																"nodeType": "YulBlock",
																"src": "1789:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1791:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1791:77:5"
																			},
																			"nativeSrc": "1791:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1791:79:5"
																		},
																		"nativeSrc": "1791:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1791:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1764:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1764:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1773:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1773:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1760:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:5"
																		},
																		"nativeSrc": "1760:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1760:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1785:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1756:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:5"
																},
																"nativeSrc": "1756:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1756:32:5"
															},
															"nativeSrc": "1753:119:5",
															"nodeType": "YulIf",
															"src": "1753:119:5"
														},
														{
															"nativeSrc": "1882:117:5",
															"nodeType": "YulBlock",
															"src": "1882:117:5",
															"statements": [
																{
																	"nativeSrc": "1897:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1897:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1911:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1911:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1901:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1901:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1926:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1926:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1961:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1961:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1972:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1972:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1957:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1957:3:5"
																				},
																				"nativeSrc": "1957:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1957:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1981:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1981:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1936:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1936:20:5"
																		},
																		"nativeSrc": "1936:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1936:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1926:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1926:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1677:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1713:9:5",
														"nodeType": "YulTypedName",
														"src": "1713:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1724:7:5",
														"nodeType": "YulTypedName",
														"src": "1724:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1736:6:5",
														"nodeType": "YulTypedName",
														"src": "1736:6:5",
														"type": ""
													}
												],
												"src": "1677:329:5"
											},
											{
												"body": {
													"nativeSrc": "2077:53:5",
													"nodeType": "YulBlock",
													"src": "2077:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2094:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2094:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2117:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2117:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2099:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2099:17:5"
																		},
																		"nativeSrc": "2099:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2099:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2087:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:5"
																},
																"nativeSrc": "2087:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2087:37:5"
															},
															"nativeSrc": "2087:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2087:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2012:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2065:5:5",
														"nodeType": "YulTypedName",
														"src": "2065:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2072:3:5",
														"nodeType": "YulTypedName",
														"src": "2072:3:5",
														"type": ""
													}
												],
												"src": "2012:118:5"
											},
											{
												"body": {
													"nativeSrc": "2234:124:5",
													"nodeType": "YulBlock",
													"src": "2234:124:5",
													"statements": [
														{
															"nativeSrc": "2244:26:5",
															"nodeType": "YulAssignment",
															"src": "2244:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2256:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2256:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2267:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2267:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2252:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2252:3:5"
																},
																"nativeSrc": "2252:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2252:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2244:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2244:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2324:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2337:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2333:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:5"
																		},
																		"nativeSrc": "2333:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2280:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2280:43:5"
																},
																"nativeSrc": "2280:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2280:71:5"
															},
															"nativeSrc": "2280:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2280:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2136:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2206:9:5",
														"nodeType": "YulTypedName",
														"src": "2206:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2218:6:5",
														"nodeType": "YulTypedName",
														"src": "2218:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2229:4:5",
														"nodeType": "YulTypedName",
														"src": "2229:4:5",
														"type": ""
													}
												],
												"src": "2136:222:5"
											},
											{
												"body": {
													"nativeSrc": "2430:263:5",
													"nodeType": "YulBlock",
													"src": "2430:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2476:83:5",
																"nodeType": "YulBlock",
																"src": "2476:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2478:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:5"
																			},
																			"nativeSrc": "2478:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:5"
																		},
																		"nativeSrc": "2478:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2451:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2460:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2447:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:5"
																		},
																		"nativeSrc": "2447:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2472:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2443:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:5"
																},
																"nativeSrc": "2443:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2443:32:5"
															},
															"nativeSrc": "2440:119:5",
															"nodeType": "YulIf",
															"src": "2440:119:5"
														},
														{
															"nativeSrc": "2569:117:5",
															"nodeType": "YulBlock",
															"src": "2569:117:5",
															"statements": [
																{
																	"nativeSrc": "2584:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2598:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2598:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2588:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2613:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2613:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2648:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2659:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2644:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:5"
																				},
																				"nativeSrc": "2644:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2668:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2623:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:5"
																		},
																		"nativeSrc": "2623:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2613:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2364:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2400:9:5",
														"nodeType": "YulTypedName",
														"src": "2400:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2411:7:5",
														"nodeType": "YulTypedName",
														"src": "2411:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2423:6:5",
														"nodeType": "YulTypedName",
														"src": "2423:6:5",
														"type": ""
													}
												],
												"src": "2364:329:5"
											},
											{
												"body": {
													"nativeSrc": "2764:53:5",
													"nodeType": "YulBlock",
													"src": "2764:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2781:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2781:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2804:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2804:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2786:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2786:17:5"
																		},
																		"nativeSrc": "2786:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2786:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2774:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2774:6:5"
																},
																"nativeSrc": "2774:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2774:37:5"
															},
															"nativeSrc": "2774:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2774:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2699:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2752:5:5",
														"nodeType": "YulTypedName",
														"src": "2752:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2759:3:5",
														"nodeType": "YulTypedName",
														"src": "2759:3:5",
														"type": ""
													}
												],
												"src": "2699:118:5"
											},
											{
												"body": {
													"nativeSrc": "2921:124:5",
													"nodeType": "YulBlock",
													"src": "2921:124:5",
													"statements": [
														{
															"nativeSrc": "2931:26:5",
															"nodeType": "YulAssignment",
															"src": "2931:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2943:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2943:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2954:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2939:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2939:3:5"
																},
																"nativeSrc": "2939:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2939:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2931:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2931:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3011:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3011:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3024:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3024:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3035:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3035:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3020:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3020:3:5"
																		},
																		"nativeSrc": "3020:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3020:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2967:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2967:43:5"
																},
																"nativeSrc": "2967:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2967:71:5"
															},
															"nativeSrc": "2967:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2967:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2823:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2893:9:5",
														"nodeType": "YulTypedName",
														"src": "2893:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2905:6:5",
														"nodeType": "YulTypedName",
														"src": "2905:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2916:4:5",
														"nodeType": "YulTypedName",
														"src": "2916:4:5",
														"type": ""
													}
												],
												"src": "2823:222:5"
											},
											{
												"body": {
													"nativeSrc": "3134:391:5",
													"nodeType": "YulBlock",
													"src": "3134:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3180:83:5",
																"nodeType": "YulBlock",
																"src": "3180:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3182:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3182:77:5"
																			},
																			"nativeSrc": "3182:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3182:79:5"
																		},
																		"nativeSrc": "3182:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3182:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3155:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3155:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3164:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3164:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3151:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:5"
																		},
																		"nativeSrc": "3151:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3176:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3176:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3147:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3147:3:5"
																},
																"nativeSrc": "3147:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3147:32:5"
															},
															"nativeSrc": "3144:119:5",
															"nodeType": "YulIf",
															"src": "3144:119:5"
														},
														{
															"nativeSrc": "3273:117:5",
															"nodeType": "YulBlock",
															"src": "3273:117:5",
															"statements": [
																{
																	"nativeSrc": "3288:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3288:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3302:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3302:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3292:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3292:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3317:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3317:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3352:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3352:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3363:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3363:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3348:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3348:3:5"
																				},
																				"nativeSrc": "3348:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3348:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3372:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3372:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3327:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3327:20:5"
																		},
																		"nativeSrc": "3327:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3327:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3317:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3317:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3400:118:5",
															"nodeType": "YulBlock",
															"src": "3400:118:5",
															"statements": [
																{
																	"nativeSrc": "3415:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3415:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3429:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3429:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3419:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3419:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3445:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3445:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3480:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3480:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3491:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3491:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3476:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3476:3:5"
																				},
																				"nativeSrc": "3476:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3476:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3500:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3500:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3455:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3455:20:5"
																		},
																		"nativeSrc": "3455:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3455:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3445:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3445:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3051:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3096:9:5",
														"nodeType": "YulTypedName",
														"src": "3096:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3107:7:5",
														"nodeType": "YulTypedName",
														"src": "3107:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3119:6:5",
														"nodeType": "YulTypedName",
														"src": "3119:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3127:6:5",
														"nodeType": "YulTypedName",
														"src": "3127:6:5",
														"type": ""
													}
												],
												"src": "3051:474:5"
											},
											{
												"body": {
													"nativeSrc": "3627:73:5",
													"nodeType": "YulBlock",
													"src": "3627:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3644:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3644:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3649:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3649:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3637:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3637:6:5"
																},
																"nativeSrc": "3637:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3637:19:5"
															},
															"nativeSrc": "3637:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "3637:19:5"
														},
														{
															"nativeSrc": "3665:29:5",
															"nodeType": "YulAssignment",
															"src": "3665:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3684:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3684:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3689:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3689:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3680:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3680:3:5"
																},
																"nativeSrc": "3680:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3680:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3665:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "3665:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3531:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3599:3:5",
														"nodeType": "YulTypedName",
														"src": "3599:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3604:6:5",
														"nodeType": "YulTypedName",
														"src": "3604:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3615:11:5",
														"nodeType": "YulTypedName",
														"src": "3615:11:5",
														"type": ""
													}
												],
												"src": "3531:169:5"
											},
											{
												"body": {
													"nativeSrc": "3812:58:5",
													"nodeType": "YulBlock",
													"src": "3812:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3834:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3834:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3842:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3842:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3830:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3830:3:5"
																		},
																		"nativeSrc": "3830:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3830:14:5"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "3846:16:5",
																		"nodeType": "YulLiteral",
																		"src": "3846:16:5",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3823:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3823:6:5"
																},
																"nativeSrc": "3823:40:5",
																"nodeType": "YulFunctionCall",
																"src": "3823:40:5"
															},
															"nativeSrc": "3823:40:5",
															"nodeType": "YulExpressionStatement",
															"src": "3823:40:5"
														}
													]
												},
												"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
												"nativeSrc": "3706:164:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3804:6:5",
														"nodeType": "YulTypedName",
														"src": "3804:6:5",
														"type": ""
													}
												],
												"src": "3706:164:5"
											},
											{
												"body": {
													"nativeSrc": "4022:220:5",
													"nodeType": "YulBlock",
													"src": "4022:220:5",
													"statements": [
														{
															"nativeSrc": "4032:74:5",
															"nodeType": "YulAssignment",
															"src": "4032:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4098:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4098:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4103:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4103:2:5",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4039:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "4039:58:5"
																},
																"nativeSrc": "4039:67:5",
																"nodeType": "YulFunctionCall",
																"src": "4039:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4032:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4032:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4204:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4204:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																	"nativeSrc": "4115:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "4115:88:5"
																},
																"nativeSrc": "4115:93:5",
																"nodeType": "YulFunctionCall",
																"src": "4115:93:5"
															},
															"nativeSrc": "4115:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "4115:93:5"
														},
														{
															"nativeSrc": "4217:19:5",
															"nodeType": "YulAssignment",
															"src": "4217:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4228:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4228:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4233:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4233:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4224:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4224:3:5"
																},
																"nativeSrc": "4224:12:5",
																"nodeType": "YulFunctionCall",
																"src": "4224:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4217:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4217:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3876:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4010:3:5",
														"nodeType": "YulTypedName",
														"src": "4010:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4018:3:5",
														"nodeType": "YulTypedName",
														"src": "4018:3:5",
														"type": ""
													}
												],
												"src": "3876:366:5"
											},
											{
												"body": {
													"nativeSrc": "4419:248:5",
													"nodeType": "YulBlock",
													"src": "4419:248:5",
													"statements": [
														{
															"nativeSrc": "4429:26:5",
															"nodeType": "YulAssignment",
															"src": "4429:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4441:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4441:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4452:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4452:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4437:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4437:3:5"
																},
																"nativeSrc": "4437:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4437:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4429:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4429:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4476:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4476:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4487:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4487:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4472:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4472:3:5"
																		},
																		"nativeSrc": "4472:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4472:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4495:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "4495:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4501:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4501:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4491:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4491:3:5"
																		},
																		"nativeSrc": "4491:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4465:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4465:6:5"
																},
																"nativeSrc": "4465:47:5",
																"nodeType": "YulFunctionCall",
																"src": "4465:47:5"
															},
															"nativeSrc": "4465:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "4465:47:5"
														},
														{
															"nativeSrc": "4521:139:5",
															"nodeType": "YulAssignment",
															"src": "4521:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4655:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4655:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4529:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "4529:124:5"
																},
																"nativeSrc": "4529:131:5",
																"nodeType": "YulFunctionCall",
																"src": "4529:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4521:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4521:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4248:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4399:9:5",
														"nodeType": "YulTypedName",
														"src": "4399:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4414:4:5",
														"nodeType": "YulTypedName",
														"src": "4414:4:5",
														"type": ""
													}
												],
												"src": "4248:419:5"
											},
											{
												"body": {
													"nativeSrc": "4779:63:5",
													"nodeType": "YulBlock",
													"src": "4779:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4801:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4801:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4809:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4809:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4797:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4797:3:5"
																		},
																		"nativeSrc": "4797:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4797:14:5"
																	},
																	{
																		"hexValue": "546f6b656e206e6f7420737570706f72746564",
																		"kind": "string",
																		"nativeSrc": "4813:21:5",
																		"nodeType": "YulLiteral",
																		"src": "4813:21:5",
																		"type": "",
																		"value": "Token not supported"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4790:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4790:6:5"
																},
																"nativeSrc": "4790:45:5",
																"nodeType": "YulFunctionCall",
																"src": "4790:45:5"
															},
															"nativeSrc": "4790:45:5",
															"nodeType": "YulExpressionStatement",
															"src": "4790:45:5"
														}
													]
												},
												"name": "store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
												"nativeSrc": "4673:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4771:6:5",
														"nodeType": "YulTypedName",
														"src": "4771:6:5",
														"type": ""
													}
												],
												"src": "4673:169:5"
											},
											{
												"body": {
													"nativeSrc": "4994:220:5",
													"nodeType": "YulBlock",
													"src": "4994:220:5",
													"statements": [
														{
															"nativeSrc": "5004:74:5",
															"nodeType": "YulAssignment",
															"src": "5004:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5070:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5070:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5075:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5075:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5011:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "5011:58:5"
																},
																"nativeSrc": "5011:67:5",
																"nodeType": "YulFunctionCall",
																"src": "5011:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5004:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5004:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5176:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5176:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
																	"nativeSrc": "5087:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "5087:88:5"
																},
																"nativeSrc": "5087:93:5",
																"nodeType": "YulFunctionCall",
																"src": "5087:93:5"
															},
															"nativeSrc": "5087:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "5087:93:5"
														},
														{
															"nativeSrc": "5189:19:5",
															"nodeType": "YulAssignment",
															"src": "5189:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5200:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5200:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5205:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5205:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5196:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5196:3:5"
																},
																"nativeSrc": "5196:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5196:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5189:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5189:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4848:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4982:3:5",
														"nodeType": "YulTypedName",
														"src": "4982:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4990:3:5",
														"nodeType": "YulTypedName",
														"src": "4990:3:5",
														"type": ""
													}
												],
												"src": "4848:366:5"
											},
											{
												"body": {
													"nativeSrc": "5391:248:5",
													"nodeType": "YulBlock",
													"src": "5391:248:5",
													"statements": [
														{
															"nativeSrc": "5401:26:5",
															"nodeType": "YulAssignment",
															"src": "5401:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5413:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5413:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5424:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5424:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5409:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5409:3:5"
																},
																"nativeSrc": "5409:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5409:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5401:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5401:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5448:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5448:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5459:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5459:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5444:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5444:3:5"
																		},
																		"nativeSrc": "5444:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5444:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5467:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "5467:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5473:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5473:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5463:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5463:3:5"
																		},
																		"nativeSrc": "5463:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5463:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5437:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5437:6:5"
																},
																"nativeSrc": "5437:47:5",
																"nodeType": "YulFunctionCall",
																"src": "5437:47:5"
															},
															"nativeSrc": "5437:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "5437:47:5"
														},
														{
															"nativeSrc": "5493:139:5",
															"nodeType": "YulAssignment",
															"src": "5493:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5627:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5627:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5501:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "5501:124:5"
																},
																"nativeSrc": "5501:131:5",
																"nodeType": "YulFunctionCall",
																"src": "5501:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5493:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5493:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5220:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5371:9:5",
														"nodeType": "YulTypedName",
														"src": "5371:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5386:4:5",
														"nodeType": "YulTypedName",
														"src": "5386:4:5",
														"type": ""
													}
												],
												"src": "5220:419:5"
											},
											{
												"body": {
													"nativeSrc": "5771:206:5",
													"nodeType": "YulBlock",
													"src": "5771:206:5",
													"statements": [
														{
															"nativeSrc": "5781:26:5",
															"nodeType": "YulAssignment",
															"src": "5781:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5793:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5793:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5804:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5804:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5789:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5789:3:5"
																},
																"nativeSrc": "5789:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5789:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5781:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5781:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5861:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5861:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5874:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5874:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5885:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5885:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5870:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5870:3:5"
																		},
																		"nativeSrc": "5870:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5870:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5817:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5817:43:5"
																},
																"nativeSrc": "5817:71:5",
																"nodeType": "YulFunctionCall",
																"src": "5817:71:5"
															},
															"nativeSrc": "5817:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "5817:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5942:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5942:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5955:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5955:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5966:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5966:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5951:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5951:3:5"
																		},
																		"nativeSrc": "5951:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5951:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5898:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5898:43:5"
																},
																"nativeSrc": "5898:72:5",
																"nodeType": "YulFunctionCall",
																"src": "5898:72:5"
															},
															"nativeSrc": "5898:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "5898:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5645:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5735:9:5",
														"nodeType": "YulTypedName",
														"src": "5735:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5747:6:5",
														"nodeType": "YulTypedName",
														"src": "5747:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5755:6:5",
														"nodeType": "YulTypedName",
														"src": "5755:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5766:4:5",
														"nodeType": "YulTypedName",
														"src": "5766:4:5",
														"type": ""
													}
												],
												"src": "5645:332:5"
											},
											{
												"body": {
													"nativeSrc": "6089:56:5",
													"nodeType": "YulBlock",
													"src": "6089:56:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6111:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6111:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6119:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6119:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6107:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6107:3:5"
																		},
																		"nativeSrc": "6107:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6107:14:5"
																	},
																	{
																		"hexValue": "46656520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "6123:14:5",
																		"nodeType": "YulLiteral",
																		"src": "6123:14:5",
																		"type": "",
																		"value": "Fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6100:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6100:6:5"
																},
																"nativeSrc": "6100:38:5",
																"nodeType": "YulFunctionCall",
																"src": "6100:38:5"
															},
															"nativeSrc": "6100:38:5",
															"nodeType": "YulExpressionStatement",
															"src": "6100:38:5"
														}
													]
												},
												"name": "store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
												"nativeSrc": "5983:162:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6081:6:5",
														"nodeType": "YulTypedName",
														"src": "6081:6:5",
														"type": ""
													}
												],
												"src": "5983:162:5"
											},
											{
												"body": {
													"nativeSrc": "6297:220:5",
													"nodeType": "YulBlock",
													"src": "6297:220:5",
													"statements": [
														{
															"nativeSrc": "6307:74:5",
															"nodeType": "YulAssignment",
															"src": "6307:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6373:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6373:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6378:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6378:2:5",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6314:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "6314:58:5"
																},
																"nativeSrc": "6314:67:5",
																"nodeType": "YulFunctionCall",
																"src": "6314:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6307:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6479:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6479:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																	"nativeSrc": "6390:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "6390:88:5"
																},
																"nativeSrc": "6390:93:5",
																"nodeType": "YulFunctionCall",
																"src": "6390:93:5"
															},
															"nativeSrc": "6390:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "6390:93:5"
														},
														{
															"nativeSrc": "6492:19:5",
															"nodeType": "YulAssignment",
															"src": "6492:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6503:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6503:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6508:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6508:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6499:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:5"
																},
																"nativeSrc": "6499:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6499:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6492:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6492:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6151:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6285:3:5",
														"nodeType": "YulTypedName",
														"src": "6285:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6293:3:5",
														"nodeType": "YulTypedName",
														"src": "6293:3:5",
														"type": ""
													}
												],
												"src": "6151:366:5"
											},
											{
												"body": {
													"nativeSrc": "6694:248:5",
													"nodeType": "YulBlock",
													"src": "6694:248:5",
													"statements": [
														{
															"nativeSrc": "6704:26:5",
															"nodeType": "YulAssignment",
															"src": "6704:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6716:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6716:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6727:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6727:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6712:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6712:3:5"
																},
																"nativeSrc": "6712:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6712:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6704:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6704:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6751:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6751:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6762:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6762:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6747:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6747:3:5"
																		},
																		"nativeSrc": "6747:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6747:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6770:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6770:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6776:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6776:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6766:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6766:3:5"
																		},
																		"nativeSrc": "6766:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6766:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6740:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6740:6:5"
																},
																"nativeSrc": "6740:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6740:47:5"
															},
															"nativeSrc": "6740:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6740:47:5"
														},
														{
															"nativeSrc": "6796:139:5",
															"nodeType": "YulAssignment",
															"src": "6796:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6930:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6930:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6804:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "6804:124:5"
																},
																"nativeSrc": "6804:131:5",
																"nodeType": "YulFunctionCall",
																"src": "6804:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6796:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6796:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6523:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6674:9:5",
														"nodeType": "YulTypedName",
														"src": "6674:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6689:4:5",
														"nodeType": "YulTypedName",
														"src": "6689:4:5",
														"type": ""
													}
												],
												"src": "6523:419:5"
											},
											{
												"body": {
													"nativeSrc": "7054:67:5",
													"nodeType": "YulBlock",
													"src": "7054:67:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7076:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7076:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7084:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7084:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7072:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7072:3:5"
																		},
																		"nativeSrc": "7072:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7072:14:5"
																	},
																	{
																		"hexValue": "546f6b656e20616c726561647920737570706f72746564",
																		"kind": "string",
																		"nativeSrc": "7088:25:5",
																		"nodeType": "YulLiteral",
																		"src": "7088:25:5",
																		"type": "",
																		"value": "Token already supported"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7065:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7065:6:5"
																},
																"nativeSrc": "7065:49:5",
																"nodeType": "YulFunctionCall",
																"src": "7065:49:5"
															},
															"nativeSrc": "7065:49:5",
															"nodeType": "YulExpressionStatement",
															"src": "7065:49:5"
														}
													]
												},
												"name": "store_literal_in_memory_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944",
												"nativeSrc": "6948:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7046:6:5",
														"nodeType": "YulTypedName",
														"src": "7046:6:5",
														"type": ""
													}
												],
												"src": "6948:173:5"
											},
											{
												"body": {
													"nativeSrc": "7273:220:5",
													"nodeType": "YulBlock",
													"src": "7273:220:5",
													"statements": [
														{
															"nativeSrc": "7283:74:5",
															"nodeType": "YulAssignment",
															"src": "7283:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7349:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7349:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7354:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7354:2:5",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7290:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "7290:58:5"
																},
																"nativeSrc": "7290:67:5",
																"nodeType": "YulFunctionCall",
																"src": "7290:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7283:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7283:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7455:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7455:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944",
																	"nativeSrc": "7366:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "7366:88:5"
																},
																"nativeSrc": "7366:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7366:93:5"
															},
															"nativeSrc": "7366:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "7366:93:5"
														},
														{
															"nativeSrc": "7468:19:5",
															"nodeType": "YulAssignment",
															"src": "7468:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7479:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7479:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7484:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7484:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7475:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7475:3:5"
																},
																"nativeSrc": "7475:12:5",
																"nodeType": "YulFunctionCall",
																"src": "7475:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7468:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7468:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7127:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7261:3:5",
														"nodeType": "YulTypedName",
														"src": "7261:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7269:3:5",
														"nodeType": "YulTypedName",
														"src": "7269:3:5",
														"type": ""
													}
												],
												"src": "7127:366:5"
											},
											{
												"body": {
													"nativeSrc": "7670:248:5",
													"nodeType": "YulBlock",
													"src": "7670:248:5",
													"statements": [
														{
															"nativeSrc": "7680:26:5",
															"nodeType": "YulAssignment",
															"src": "7680:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7692:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7692:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7703:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7703:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7688:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7688:3:5"
																},
																"nativeSrc": "7688:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7688:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7680:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7680:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7727:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7727:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7738:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7738:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7723:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:5"
																		},
																		"nativeSrc": "7723:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7723:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7746:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7746:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7752:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7752:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7742:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7742:3:5"
																		},
																		"nativeSrc": "7742:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7742:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7716:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7716:6:5"
																},
																"nativeSrc": "7716:47:5",
																"nodeType": "YulFunctionCall",
																"src": "7716:47:5"
															},
															"nativeSrc": "7716:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "7716:47:5"
														},
														{
															"nativeSrc": "7772:139:5",
															"nodeType": "YulAssignment",
															"src": "7772:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7906:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7906:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7780:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "7780:124:5"
																},
																"nativeSrc": "7780:131:5",
																"nodeType": "YulFunctionCall",
																"src": "7780:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7772:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7772:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7499:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7650:9:5",
														"nodeType": "YulTypedName",
														"src": "7650:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7665:4:5",
														"nodeType": "YulTypedName",
														"src": "7665:4:5",
														"type": ""
													}
												],
												"src": "7499:419:5"
											},
											{
												"body": {
													"nativeSrc": "7952:152:5",
													"nodeType": "YulBlock",
													"src": "7952:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7969:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7969:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7972:77:5",
																		"nodeType": "YulLiteral",
																		"src": "7972:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7962:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7962:6:5"
																},
																"nativeSrc": "7962:88:5",
																"nodeType": "YulFunctionCall",
																"src": "7962:88:5"
															},
															"nativeSrc": "7962:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "7962:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8066:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8066:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8069:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8069:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8059:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8059:6:5"
																},
																"nativeSrc": "8059:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8059:15:5"
															},
															"nativeSrc": "8059:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8059:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8090:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8093:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8093:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8083:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8083:6:5"
																},
																"nativeSrc": "8083:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8083:15:5"
															},
															"nativeSrc": "8083:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8083:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7924:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "7924:180:5"
											},
											{
												"body": {
													"nativeSrc": "8158:362:5",
													"nodeType": "YulBlock",
													"src": "8158:362:5",
													"statements": [
														{
															"nativeSrc": "8168:25:5",
															"nodeType": "YulAssignment",
															"src": "8168:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8191:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8191:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8173:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8173:17:5"
																},
																"nativeSrc": "8173:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8173:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8168:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8168:1:5"
																}
															]
														},
														{
															"nativeSrc": "8202:25:5",
															"nodeType": "YulAssignment",
															"src": "8202:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8225:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8225:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8207:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8207:17:5"
																},
																"nativeSrc": "8207:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8207:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8202:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8202:1:5"
																}
															]
														},
														{
															"nativeSrc": "8236:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8236:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8259:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8259:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8262:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8262:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8255:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8255:3:5"
																},
																"nativeSrc": "8255:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8255:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8240:11:5",
																	"nodeType": "YulTypedName",
																	"src": "8240:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8273:41:5",
															"nodeType": "YulAssignment",
															"src": "8273:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8302:11:5",
																		"nodeType": "YulIdentifier",
																		"src": "8302:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8284:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8284:17:5"
																},
																"nativeSrc": "8284:30:5",
																"nodeType": "YulFunctionCall",
																"src": "8284:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8273:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "8273:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8491:22:5",
																"nodeType": "YulBlock",
																"src": "8491:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8493:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "8493:16:5"
																			},
																			"nativeSrc": "8493:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8493:18:5"
																		},
																		"nativeSrc": "8493:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8493:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8424:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "8424:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8417:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "8417:6:5"
																				},
																				"nativeSrc": "8417:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8417:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8447:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "8447:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8454:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "8454:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8463:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "8463:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8450:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "8450:3:5"
																						},
																						"nativeSrc": "8450:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "8450:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8444:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "8444:2:5"
																				},
																				"nativeSrc": "8444:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8444:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8397:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "8397:2:5"
																		},
																		"nativeSrc": "8397:83:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8397:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8377:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8377:6:5"
																},
																"nativeSrc": "8377:113:5",
																"nodeType": "YulFunctionCall",
																"src": "8377:113:5"
															},
															"nativeSrc": "8374:139:5",
															"nodeType": "YulIf",
															"src": "8374:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8110:410:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8141:1:5",
														"nodeType": "YulTypedName",
														"src": "8141:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8144:1:5",
														"nodeType": "YulTypedName",
														"src": "8144:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8150:7:5",
														"nodeType": "YulTypedName",
														"src": "8150:7:5",
														"type": ""
													}
												],
												"src": "8110:410:5"
											},
											{
												"body": {
													"nativeSrc": "8554:152:5",
													"nodeType": "YulBlock",
													"src": "8554:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8571:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8571:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8574:77:5",
																		"nodeType": "YulLiteral",
																		"src": "8574:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8564:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8564:6:5"
																},
																"nativeSrc": "8564:88:5",
																"nodeType": "YulFunctionCall",
																"src": "8564:88:5"
															},
															"nativeSrc": "8564:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "8564:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8668:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8668:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8671:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8671:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8661:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8661:6:5"
																},
																"nativeSrc": "8661:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8661:15:5"
															},
															"nativeSrc": "8661:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8661:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8692:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8692:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8695:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8695:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8685:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8685:6:5"
																},
																"nativeSrc": "8685:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8685:15:5"
															},
															"nativeSrc": "8685:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8685:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8526:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8526:180:5"
											},
											{
												"body": {
													"nativeSrc": "8754:143:5",
													"nodeType": "YulBlock",
													"src": "8754:143:5",
													"statements": [
														{
															"nativeSrc": "8764:25:5",
															"nodeType": "YulAssignment",
															"src": "8764:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8787:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8787:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8769:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8769:17:5"
																},
																"nativeSrc": "8769:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8769:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8764:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8764:1:5"
																}
															]
														},
														{
															"nativeSrc": "8798:25:5",
															"nodeType": "YulAssignment",
															"src": "8798:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8821:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8821:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8803:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8803:17:5"
																},
																"nativeSrc": "8803:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8803:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8798:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8798:1:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8845:22:5",
																"nodeType": "YulBlock",
																"src": "8845:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8847:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "8847:16:5"
																			},
																			"nativeSrc": "8847:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8847:18:5"
																		},
																		"nativeSrc": "8847:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8847:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8842:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8842:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8835:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8835:6:5"
																},
																"nativeSrc": "8835:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8835:9:5"
															},
															"nativeSrc": "8832:35:5",
															"nodeType": "YulIf",
															"src": "8832:35:5"
														},
														{
															"nativeSrc": "8877:14:5",
															"nodeType": "YulAssignment",
															"src": "8877:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8886:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8886:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8889:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8889:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8882:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8882:3:5"
																},
																"nativeSrc": "8882:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8882:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8877:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8877:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8712:185:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8743:1:5",
														"nodeType": "YulTypedName",
														"src": "8743:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8746:1:5",
														"nodeType": "YulTypedName",
														"src": "8746:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8752:1:5",
														"nodeType": "YulTypedName",
														"src": "8752:1:5",
														"type": ""
													}
												],
												"src": "8712:185:5"
											},
											{
												"body": {
													"nativeSrc": "8948:149:5",
													"nodeType": "YulBlock",
													"src": "8948:149:5",
													"statements": [
														{
															"nativeSrc": "8958:25:5",
															"nodeType": "YulAssignment",
															"src": "8958:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8981:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8981:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8963:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8963:17:5"
																},
																"nativeSrc": "8963:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8963:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8958:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8958:1:5"
																}
															]
														},
														{
															"nativeSrc": "8992:25:5",
															"nodeType": "YulAssignment",
															"src": "8992:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9015:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9015:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8997:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "8997:17:5"
																},
																"nativeSrc": "8997:20:5",
																"nodeType": "YulFunctionCall",
																"src": "8997:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8992:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "8992:1:5"
																}
															]
														},
														{
															"nativeSrc": "9026:17:5",
															"nodeType": "YulAssignment",
															"src": "9026:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9038:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9038:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9041:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9041:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9034:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9034:3:5"
																},
																"nativeSrc": "9034:9:5",
																"nodeType": "YulFunctionCall",
																"src": "9034:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9026:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9026:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9068:22:5",
																"nodeType": "YulBlock",
																"src": "9068:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9070:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "9070:16:5"
																			},
																			"nativeSrc": "9070:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9070:18:5"
																		},
																		"nativeSrc": "9070:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9070:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9059:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9059:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9065:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9065:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9056:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "9056:2:5"
																},
																"nativeSrc": "9056:11:5",
																"nodeType": "YulFunctionCall",
																"src": "9056:11:5"
															},
															"nativeSrc": "9053:37:5",
															"nodeType": "YulIf",
															"src": "9053:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8903:194:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8934:1:5",
														"nodeType": "YulTypedName",
														"src": "8934:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8937:1:5",
														"nodeType": "YulTypedName",
														"src": "8937:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8943:4:5",
														"nodeType": "YulTypedName",
														"src": "8943:4:5",
														"type": ""
													}
												],
												"src": "8903:194:5"
											},
											{
												"body": {
													"nativeSrc": "9147:147:5",
													"nodeType": "YulBlock",
													"src": "9147:147:5",
													"statements": [
														{
															"nativeSrc": "9157:25:5",
															"nodeType": "YulAssignment",
															"src": "9157:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9180:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9180:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9162:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9162:17:5"
																},
																"nativeSrc": "9162:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9162:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9157:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9157:1:5"
																}
															]
														},
														{
															"nativeSrc": "9191:25:5",
															"nodeType": "YulAssignment",
															"src": "9191:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9214:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9214:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9196:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "9196:17:5"
																},
																"nativeSrc": "9196:20:5",
																"nodeType": "YulFunctionCall",
																"src": "9196:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9191:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "9191:1:5"
																}
															]
														},
														{
															"nativeSrc": "9225:16:5",
															"nodeType": "YulAssignment",
															"src": "9225:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9236:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9236:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9239:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9239:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9232:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9232:3:5"
																},
																"nativeSrc": "9232:9:5",
																"nodeType": "YulFunctionCall",
																"src": "9232:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9225:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9225:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9265:22:5",
																"nodeType": "YulBlock",
																"src": "9265:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9267:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "9267:16:5"
																			},
																			"nativeSrc": "9267:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9267:18:5"
																		},
																		"nativeSrc": "9267:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9267:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9257:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "9257:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9260:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9260:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9254:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "9254:2:5"
																},
																"nativeSrc": "9254:10:5",
																"nodeType": "YulFunctionCall",
																"src": "9254:10:5"
															},
															"nativeSrc": "9251:36:5",
															"nodeType": "YulIf",
															"src": "9251:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9103:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9134:1:5",
														"nodeType": "YulTypedName",
														"src": "9134:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9137:1:5",
														"nodeType": "YulTypedName",
														"src": "9137:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9143:3:5",
														"nodeType": "YulTypedName",
														"src": "9143:3:5",
														"type": ""
													}
												],
												"src": "9103:191:5"
											},
											{
												"body": {
													"nativeSrc": "9328:152:5",
													"nodeType": "YulBlock",
													"src": "9328:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9345:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9345:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9348:77:5",
																		"nodeType": "YulLiteral",
																		"src": "9348:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9338:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9338:6:5"
																},
																"nativeSrc": "9338:88:5",
																"nodeType": "YulFunctionCall",
																"src": "9338:88:5"
															},
															"nativeSrc": "9338:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "9338:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9442:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9442:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9445:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9445:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9435:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9435:6:5"
																},
																"nativeSrc": "9435:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9435:15:5"
															},
															"nativeSrc": "9435:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9435:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9466:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9466:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9469:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9469:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9459:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9459:6:5"
																},
																"nativeSrc": "9459:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9459:15:5"
															},
															"nativeSrc": "9459:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9459:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9300:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "9300:180:5"
											},
											{
												"body": {
													"nativeSrc": "9514:152:5",
													"nodeType": "YulBlock",
													"src": "9514:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9531:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9531:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9534:77:5",
																		"nodeType": "YulLiteral",
																		"src": "9534:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9524:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9524:6:5"
																},
																"nativeSrc": "9524:88:5",
																"nodeType": "YulFunctionCall",
																"src": "9524:88:5"
															},
															"nativeSrc": "9524:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "9524:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9628:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9628:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9631:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9631:4:5",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9621:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9621:6:5"
																},
																"nativeSrc": "9621:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9621:15:5"
															},
															"nativeSrc": "9621:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9621:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9652:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9652:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9655:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9655:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9645:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9645:6:5"
																},
																"nativeSrc": "9645:15:5",
																"nodeType": "YulFunctionCall",
																"src": "9645:15:5"
															},
															"nativeSrc": "9645:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "9645:15:5"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "9486:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "9486:180:5"
											},
											{
												"body": {
													"nativeSrc": "9778:64:5",
													"nodeType": "YulBlock",
													"src": "9778:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9800:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9800:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9808:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9808:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9796:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9796:3:5"
																		},
																		"nativeSrc": "9796:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9796:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "9812:22:5",
																		"nodeType": "YulLiteral",
																		"src": "9812:22:5",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9789:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9789:6:5"
																},
																"nativeSrc": "9789:46:5",
																"nodeType": "YulFunctionCall",
																"src": "9789:46:5"
															},
															"nativeSrc": "9789:46:5",
															"nodeType": "YulExpressionStatement",
															"src": "9789:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "9672:170:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9770:6:5",
														"nodeType": "YulTypedName",
														"src": "9770:6:5",
														"type": ""
													}
												],
												"src": "9672:170:5"
											},
											{
												"body": {
													"nativeSrc": "9994:220:5",
													"nodeType": "YulBlock",
													"src": "9994:220:5",
													"statements": [
														{
															"nativeSrc": "10004:74:5",
															"nodeType": "YulAssignment",
															"src": "10004:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10070:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10070:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10075:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10075:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10011:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10011:58:5"
																},
																"nativeSrc": "10011:67:5",
																"nodeType": "YulFunctionCall",
																"src": "10011:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10004:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10004:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10176:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10176:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "10087:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10087:88:5"
																},
																"nativeSrc": "10087:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10087:93:5"
															},
															"nativeSrc": "10087:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10087:93:5"
														},
														{
															"nativeSrc": "10189:19:5",
															"nodeType": "YulAssignment",
															"src": "10189:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10200:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10200:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10205:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10205:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10196:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10196:3:5"
																},
																"nativeSrc": "10196:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10196:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10189:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10189:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9848:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9982:3:5",
														"nodeType": "YulTypedName",
														"src": "9982:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9990:3:5",
														"nodeType": "YulTypedName",
														"src": "9990:3:5",
														"type": ""
													}
												],
												"src": "9848:366:5"
											},
											{
												"body": {
													"nativeSrc": "10391:248:5",
													"nodeType": "YulBlock",
													"src": "10391:248:5",
													"statements": [
														{
															"nativeSrc": "10401:26:5",
															"nodeType": "YulAssignment",
															"src": "10401:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10413:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10413:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10424:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10424:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10409:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10409:3:5"
																},
																"nativeSrc": "10409:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10409:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10401:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10401:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10448:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10448:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10459:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10459:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10444:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10444:3:5"
																		},
																		"nativeSrc": "10444:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10444:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10467:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10467:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10473:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10473:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10463:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10463:3:5"
																		},
																		"nativeSrc": "10463:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10463:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10437:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10437:6:5"
																},
																"nativeSrc": "10437:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10437:47:5"
															},
															"nativeSrc": "10437:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10437:47:5"
														},
														{
															"nativeSrc": "10493:139:5",
															"nodeType": "YulAssignment",
															"src": "10493:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10627:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10627:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10501:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10501:124:5"
																},
																"nativeSrc": "10501:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10501:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10493:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10493:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10220:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10371:9:5",
														"nodeType": "YulTypedName",
														"src": "10371:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10386:4:5",
														"nodeType": "YulTypedName",
														"src": "10386:4:5",
														"type": ""
													}
												],
												"src": "10220:419:5"
											},
											{
												"body": {
													"nativeSrc": "10799:288:5",
													"nodeType": "YulBlock",
													"src": "10799:288:5",
													"statements": [
														{
															"nativeSrc": "10809:26:5",
															"nodeType": "YulAssignment",
															"src": "10809:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10821:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10821:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10832:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10832:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10817:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10817:3:5"
																},
																"nativeSrc": "10817:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10817:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10809:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10809:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10889:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10889:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10902:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10902:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10913:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10913:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10898:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10898:3:5"
																		},
																		"nativeSrc": "10898:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10898:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10845:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10845:43:5"
																},
																"nativeSrc": "10845:71:5",
																"nodeType": "YulFunctionCall",
																"src": "10845:71:5"
															},
															"nativeSrc": "10845:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "10845:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10970:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10970:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10983:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10983:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10994:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10994:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10979:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10979:3:5"
																		},
																		"nativeSrc": "10979:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10979:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10926:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "10926:43:5"
																},
																"nativeSrc": "10926:72:5",
																"nodeType": "YulFunctionCall",
																"src": "10926:72:5"
															},
															"nativeSrc": "10926:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "10926:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11052:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11052:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11065:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11065:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11076:2:5",
																				"nodeType": "YulLiteral",
																				"src": "11076:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11061:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11061:3:5"
																		},
																		"nativeSrc": "11061:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11061:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11008:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "11008:43:5"
																},
																"nativeSrc": "11008:72:5",
																"nodeType": "YulFunctionCall",
																"src": "11008:72:5"
															},
															"nativeSrc": "11008:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "11008:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10645:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10755:9:5",
														"nodeType": "YulTypedName",
														"src": "10755:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10767:6:5",
														"nodeType": "YulTypedName",
														"src": "10767:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10775:6:5",
														"nodeType": "YulTypedName",
														"src": "10775:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10783:6:5",
														"nodeType": "YulTypedName",
														"src": "10783:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10794:4:5",
														"nodeType": "YulTypedName",
														"src": "10794:4:5",
														"type": ""
													}
												],
												"src": "10645:442:5"
											},
											{
												"body": {
													"nativeSrc": "11135:48:5",
													"nodeType": "YulBlock",
													"src": "11135:48:5",
													"statements": [
														{
															"nativeSrc": "11145:32:5",
															"nodeType": "YulAssignment",
															"src": "11145:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11170:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "11170:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "11163:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "11163:6:5"
																		},
																		"nativeSrc": "11163:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11163:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11156:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11156:6:5"
																},
																"nativeSrc": "11156:21:5",
																"nodeType": "YulFunctionCall",
																"src": "11156:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11145:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "11145:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "11093:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11117:5:5",
														"nodeType": "YulTypedName",
														"src": "11117:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11127:7:5",
														"nodeType": "YulTypedName",
														"src": "11127:7:5",
														"type": ""
													}
												],
												"src": "11093:90:5"
											},
											{
												"body": {
													"nativeSrc": "11229:76:5",
													"nodeType": "YulBlock",
													"src": "11229:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "11283:16:5",
																"nodeType": "YulBlock",
																"src": "11283:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11292:1:5",
																					"nodeType": "YulLiteral",
																					"src": "11292:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11295:1:5",
																					"nodeType": "YulLiteral",
																					"src": "11295:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11285:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11285:6:5"
																			},
																			"nativeSrc": "11285:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "11285:12:5"
																		},
																		"nativeSrc": "11285:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "11285:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11252:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "11252:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11274:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "11274:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "11259:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "11259:14:5"
																				},
																				"nativeSrc": "11259:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "11259:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11249:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "11249:2:5"
																		},
																		"nativeSrc": "11249:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11249:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11242:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:5"
																},
																"nativeSrc": "11242:40:5",
																"nodeType": "YulFunctionCall",
																"src": "11242:40:5"
															},
															"nativeSrc": "11239:60:5",
															"nodeType": "YulIf",
															"src": "11239:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11189:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11222:5:5",
														"nodeType": "YulTypedName",
														"src": "11222:5:5",
														"type": ""
													}
												],
												"src": "11189:116:5"
											},
											{
												"body": {
													"nativeSrc": "11371:77:5",
													"nodeType": "YulBlock",
													"src": "11371:77:5",
													"statements": [
														{
															"nativeSrc": "11381:22:5",
															"nodeType": "YulAssignment",
															"src": "11381:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11396:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11396:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11390:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "11390:5:5"
																},
																"nativeSrc": "11390:13:5",
																"nodeType": "YulFunctionCall",
																"src": "11390:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11381:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "11381:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11436:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "11436:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11412:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "11412:23:5"
																},
																"nativeSrc": "11412:30:5",
																"nodeType": "YulFunctionCall",
																"src": "11412:30:5"
															},
															"nativeSrc": "11412:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "11412:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11311:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11349:6:5",
														"nodeType": "YulTypedName",
														"src": "11349:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11357:3:5",
														"nodeType": "YulTypedName",
														"src": "11357:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11365:5:5",
														"nodeType": "YulTypedName",
														"src": "11365:5:5",
														"type": ""
													}
												],
												"src": "11311:137:5"
											},
											{
												"body": {
													"nativeSrc": "11528:271:5",
													"nodeType": "YulBlock",
													"src": "11528:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "11574:83:5",
																"nodeType": "YulBlock",
																"src": "11574:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11576:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "11576:77:5"
																			},
																			"nativeSrc": "11576:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "11576:79:5"
																		},
																		"nativeSrc": "11576:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "11576:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11549:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "11549:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11558:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "11558:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11545:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11545:3:5"
																		},
																		"nativeSrc": "11545:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11545:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11570:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11570:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11541:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11541:3:5"
																},
																"nativeSrc": "11541:32:5",
																"nodeType": "YulFunctionCall",
																"src": "11541:32:5"
															},
															"nativeSrc": "11538:119:5",
															"nodeType": "YulIf",
															"src": "11538:119:5"
														},
														{
															"nativeSrc": "11667:125:5",
															"nodeType": "YulBlock",
															"src": "11667:125:5",
															"statements": [
																{
																	"nativeSrc": "11682:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11682:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11696:1:5",
																		"nodeType": "YulLiteral",
																		"src": "11696:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11686:6:5",
																			"nodeType": "YulTypedName",
																			"src": "11686:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11711:71:5",
																	"nodeType": "YulAssignment",
																	"src": "11711:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11754:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "11754:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11765:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "11765:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11750:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "11750:3:5"
																				},
																				"nativeSrc": "11750:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "11750:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11774:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "11774:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11721:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "11721:28:5"
																		},
																		"nativeSrc": "11721:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11721:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11711:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "11711:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11454:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11498:9:5",
														"nodeType": "YulTypedName",
														"src": "11498:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11509:7:5",
														"nodeType": "YulTypedName",
														"src": "11509:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11521:6:5",
														"nodeType": "YulTypedName",
														"src": "11521:6:5",
														"type": ""
													}
												],
												"src": "11454:345:5"
											},
											{
												"body": {
													"nativeSrc": "11863:40:5",
													"nodeType": "YulBlock",
													"src": "11863:40:5",
													"statements": [
														{
															"nativeSrc": "11874:22:5",
															"nodeType": "YulAssignment",
															"src": "11874:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11890:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "11890:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11884:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "11884:5:5"
																},
																"nativeSrc": "11884:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11884:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11874:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11874:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "11805:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11846:5:5",
														"nodeType": "YulTypedName",
														"src": "11846:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11856:6:5",
														"nodeType": "YulTypedName",
														"src": "11856:6:5",
														"type": ""
													}
												],
												"src": "11805:98:5"
											},
											{
												"body": {
													"nativeSrc": "12022:34:5",
													"nodeType": "YulBlock",
													"src": "12022:34:5",
													"statements": [
														{
															"nativeSrc": "12032:18:5",
															"nodeType": "YulAssignment",
															"src": "12032:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "12047:3:5",
																"nodeType": "YulIdentifier",
																"src": "12047:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12032:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "12032:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11909:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11994:3:5",
														"nodeType": "YulTypedName",
														"src": "11994:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11999:6:5",
														"nodeType": "YulTypedName",
														"src": "11999:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12010:11:5",
														"nodeType": "YulTypedName",
														"src": "12010:11:5",
														"type": ""
													}
												],
												"src": "11909:147:5"
											},
											{
												"body": {
													"nativeSrc": "12124:77:5",
													"nodeType": "YulBlock",
													"src": "12124:77:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "12141:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12141:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "12146:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12146:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12151:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12151:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "12135:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "12135:5:5"
																},
																"nativeSrc": "12135:23:5",
																"nodeType": "YulFunctionCall",
																"src": "12135:23:5"
															},
															"nativeSrc": "12135:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "12135:23:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "12178:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "12178:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12183:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "12183:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12174:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12174:3:5"
																		},
																		"nativeSrc": "12174:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12174:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12192:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12192:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12167:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12167:6:5"
																},
																"nativeSrc": "12167:27:5",
																"nodeType": "YulFunctionCall",
																"src": "12167:27:5"
															},
															"nativeSrc": "12167:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "12167:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "12062:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12106:3:5",
														"nodeType": "YulTypedName",
														"src": "12106:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12111:3:5",
														"nodeType": "YulTypedName",
														"src": "12111:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12116:6:5",
														"nodeType": "YulTypedName",
														"src": "12116:6:5",
														"type": ""
													}
												],
												"src": "12062:139:5"
											},
											{
												"body": {
													"nativeSrc": "12315:278:5",
													"nodeType": "YulBlock",
													"src": "12315:278:5",
													"statements": [
														{
															"nativeSrc": "12325:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "12325:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12371:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "12371:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12339:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "12339:31:5"
																},
																"nativeSrc": "12339:38:5",
																"nodeType": "YulFunctionCall",
																"src": "12339:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12329:6:5",
																	"nodeType": "YulTypedName",
																	"src": "12329:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12386:95:5",
															"nodeType": "YulAssignment",
															"src": "12386:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12469:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12469:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12474:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12474:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12393:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "12393:75:5"
																},
																"nativeSrc": "12393:88:5",
																"nodeType": "YulFunctionCall",
																"src": "12393:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12386:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12386:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12529:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "12529:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12536:4:5",
																				"nodeType": "YulLiteral",
																				"src": "12536:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12525:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "12525:3:5"
																		},
																		"nativeSrc": "12525:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "12525:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12543:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12543:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12548:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12548:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12490:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "12490:34:5"
																},
																"nativeSrc": "12490:65:5",
																"nodeType": "YulFunctionCall",
																"src": "12490:65:5"
															},
															"nativeSrc": "12490:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "12490:65:5"
														},
														{
															"nativeSrc": "12564:23:5",
															"nodeType": "YulAssignment",
															"src": "12564:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12575:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12575:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12580:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12580:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12571:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12571:3:5"
																},
																"nativeSrc": "12571:16:5",
																"nodeType": "YulFunctionCall",
																"src": "12571:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12564:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12564:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12207:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12296:5:5",
														"nodeType": "YulTypedName",
														"src": "12296:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12303:3:5",
														"nodeType": "YulTypedName",
														"src": "12303:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12311:3:5",
														"nodeType": "YulTypedName",
														"src": "12311:3:5",
														"type": ""
													}
												],
												"src": "12207:386:5"
											},
											{
												"body": {
													"nativeSrc": "12733:137:5",
													"nodeType": "YulBlock",
													"src": "12733:137:5",
													"statements": [
														{
															"nativeSrc": "12744:100:5",
															"nodeType": "YulAssignment",
															"src": "12744:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12831:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12831:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12840:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12840:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "12751:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "12751:79:5"
																},
																"nativeSrc": "12751:93:5",
																"nodeType": "YulFunctionCall",
																"src": "12751:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12744:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12744:3:5"
																}
															]
														},
														{
															"nativeSrc": "12854:10:5",
															"nodeType": "YulAssignment",
															"src": "12854:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "12861:3:5",
																"nodeType": "YulIdentifier",
																"src": "12861:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12854:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12854:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12599:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12712:3:5",
														"nodeType": "YulTypedName",
														"src": "12712:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12718:6:5",
														"nodeType": "YulTypedName",
														"src": "12718:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12729:3:5",
														"nodeType": "YulTypedName",
														"src": "12729:3:5",
														"type": ""
													}
												],
												"src": "12599:271:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token not supported\")\n\n    }\n\n    function abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fee too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token already supported\")\n\n    }\n\n    function abi_encode_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80636805d6ad1161006f5780636805d6ad1461017457806376319190146101a457806398118cb4146101c0578063a201ccf6146101de578063ab2f3ad4146101fa578063c62556261461022a576100b2565b806321faf184146100b65780633053f0b2146100d2578063357bf15c146101025780634d8e3d3b1461011e578063566887001461013a5780635aa6e67514610156575b5f80fd5b6100d060048036038101906100cb91906112b7565b61025a565b005b6100ec60048036038101906100e791906112f5565b6103b0565b6040516100f9919061132f565b60405180910390f35b61011c60048036038101906101179190611348565b6103c5565b005b610138600480360381019061013391906112b7565b6104a2565b005b610154600480360381019061014f91906112b7565b610620565b005b61015e610848565b60405161016b9190611382565b60405180910390f35b61018e6004803603810190610189919061139b565b61086d565b60405161019b919061132f565b60405180910390f35b6101be60048036038101906101b991906112f5565b6108f0565b005b6101c8610b84565b6040516101d5919061132f565b60405180910390f35b6101f860048036038101906101f391906112b7565b610b8a565b005b610214600480360381019061020f91906112f5565b610def565b604051610221919061132f565b60405180910390f35b610244600480360381019061023f9190611348565b610e04565b6040516102519190611382565b60405180910390f35b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e090611433565b60405180910390fd5b6102f282610e3f565b610331576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103289061149b565b60405180910390fd5b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507fc9bf4277eb054fe4fa82ff2e3b468a6300f4bc73a13794b02287f6d8282c998c82826040516103a49291906114b9565b60405180910390a15050565b6001602052805f5260405f205f915090505481565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044b90611433565b60405180910390fd5b6064811115610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048f9061152a565b60405180910390fd5b8060058190555050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890611433565b60405180910390fd5b61053a82610e3f565b1561057a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057190611592565b60405180910390fd5b600482908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b61062982610e3f565b610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f9061149b565b60405180910390fd5b5f6127106005548361067a91906115dd565b610684919061164b565b90505f8183610693919061167b565b90506106c23330838773ffffffffffffffffffffffffffffffffffffffff16610ee1909392919063ffffffff16565b6107103360035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848773ffffffffffffffffffffffffffffffffffffffff16610ee1909392919063ffffffff16565b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461079891906116ae565b925050819055508060015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107eb91906116ae565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9d278c56ba6dc86a12eefe6b43112bd6e06648eb4ec0b950ee2d783d40e2acb4858360405161083a9291906114b9565b60405180910390a250505050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097690611433565b60405180910390fd5b61098881610e3f565b6109c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109be9061149b565b60405180910390fd5b5f5b600480549050811015610b40578173ffffffffffffffffffffffffffffffffffffffff1660048281548110610a0157610a006116e1565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b335760046001600480549050610a58919061167b565b81548110610a6957610a686116e1565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660048281548110610aa557610aa46116e1565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004805480610afc57610afb61170e565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055610b40565b80806001019150506109c9565b5060025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f905550565b60055481565b610b9382610e3f565b610bd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc99061149b565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610c8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8590611785565b60405180910390fd5b805f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d16919061167b565b925050819055508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d69919061167b565b92505081905550610d9b33828473ffffffffffffffffffffffffffffffffffffffff16610f639092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f983e86fda8e7b1e2eae380201830eaf1cac55772e8e39583da349865e81788638383604051610de39291906114b9565b60405180910390a25050565b6002602052805f5260405f205f915090505481565b60048181548110610e13575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f90505b600480549050811015610ed7578273ffffffffffffffffffffffffffffffffffffffff1660048281548110610e7d57610e7c6116e1565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610eca576001915050610edc565b8080600101915050610e45565b505f90505b919050565b610f5d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610f16939291906117a3565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fe2565b50505050565b610fdd838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610f969291906114b9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610fe2565b505050565b5f61100c828473ffffffffffffffffffffffffffffffffffffffff1661107790919063ffffffff16565b90505f81511415801561103057508080602001905181019061102e919061180d565b155b1561107257826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016110699190611382565b60405180910390fd5b505050565b606061108483835f61108c565b905092915050565b6060814710156110d357306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016110ca9190611382565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516110fb919061188a565b5f6040518083038185875af1925050503d805f8114611135576040519150601f19603f3d011682016040523d82523d5f602084013e61113a565b606091505b509150915061114a868383611155565b925050509392505050565b60608261116a57611165826111e2565b6111da565b5f825114801561119057505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156111d257836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016111c99190611382565b60405180910390fd5b8190506111db565b5b9392505050565b5f815111156111f45780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112538261122a565b9050919050565b61126381611249565b811461126d575f80fd5b50565b5f8135905061127e8161125a565b92915050565b5f819050919050565b61129681611284565b81146112a0575f80fd5b50565b5f813590506112b18161128d565b92915050565b5f80604083850312156112cd576112cc611226565b5b5f6112da85828601611270565b92505060206112eb858286016112a3565b9150509250929050565b5f6020828403121561130a57611309611226565b5b5f61131784828501611270565b91505092915050565b61132981611284565b82525050565b5f6020820190506113425f830184611320565b92915050565b5f6020828403121561135d5761135c611226565b5b5f61136a848285016112a3565b91505092915050565b61137c81611249565b82525050565b5f6020820190506113955f830184611373565b92915050565b5f80604083850312156113b1576113b0611226565b5b5f6113be85828601611270565b92505060206113cf85828601611270565b9150509250929050565b5f82825260208201905092915050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f61141d600e836113d9565b9150611428826113e9565b602082019050919050565b5f6020820190508181035f83015261144a81611411565b9050919050565b7f546f6b656e206e6f7420737570706f72746564000000000000000000000000005f82015250565b5f6114856013836113d9565b915061149082611451565b602082019050919050565b5f6020820190508181035f8301526114b281611479565b9050919050565b5f6040820190506114cc5f830185611373565b6114d96020830184611320565b9392505050565b7f46656520746f6f206869676800000000000000000000000000000000000000005f82015250565b5f611514600c836113d9565b915061151f826114e0565b602082019050919050565b5f6020820190508181035f83015261154181611508565b9050919050565b7f546f6b656e20616c726561647920737570706f727465640000000000000000005f82015250565b5f61157c6017836113d9565b915061158782611548565b602082019050919050565b5f6020820190508181035f8301526115a981611570565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115e782611284565b91506115f283611284565b925082820261160081611284565b91508282048414831517611617576116166115b0565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61165582611284565b915061166083611284565b9250826116705761166f61161e565b5b828204905092915050565b5f61168582611284565b915061169083611284565b92508282039050818111156116a8576116a76115b0565b5b92915050565b5f6116b882611284565b91506116c383611284565b92508282019050808211156116db576116da6115b0565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61176f6014836113d9565b915061177a8261173b565b602082019050919050565b5f6020820190508181035f83015261179c81611763565b9050919050565b5f6060820190506117b65f830186611373565b6117c36020830185611373565b6117d06040830184611320565b949350505050565b5f8115159050919050565b6117ec816117d8565b81146117f6575f80fd5b50565b5f81519050611807816117e3565b92915050565b5f6020828403121561182257611821611226565b5b5f61182f848285016117f9565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61186482611838565b61186e8185611842565b935061187e81856020860161184c565b80840191505092915050565b5f611895828461185a565b91508190509291505056fea2646970667358221220ab03e5580427c0916df5aa02a59a6cba7baaa8c91c7b0bf9cf7c982104688e0f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6805D6AD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x6805D6AD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x76319190 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xA201CCF6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xAB2F3AD4 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xC6255626 EQ PUSH2 0x22A JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x21FAF184 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x3053F0B2 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x357BF15C EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x4D8E3D3B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x56688700 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x156 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x25A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15E PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x86D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0x8F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH2 0xB8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0xE04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E0 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F2 DUP3 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x331 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xC9BF4277EB054FE4FA82FF2E3B468A6300F4BC73A13794B02287F6D8282C998C DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP3 SWAP2 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x53A DUP3 PUSH2 0xE3F JUMP JUMPDEST ISZERO PUSH2 0x57A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x571 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x629 DUP3 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x5 SLOAD DUP4 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x684 SWAP2 SWAP1 PUSH2 0x164B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST SWAP1 POP PUSH2 0x6C2 CALLER ADDRESS DUP4 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x710 CALLER PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x798 SWAP2 SWAP1 PUSH2 0x16AE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7EB SWAP2 SWAP1 PUSH2 0x16AE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9D278C56BA6DC86A12EEFE6B43112BD6E06648EB4EC0B950EE2D783D40E2ACB4 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x83A SWAP3 SWAP2 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x976 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x988 DUP2 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BE SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xB40 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA01 JUMPI PUSH2 0xA00 PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB33 JUMPI PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA69 JUMPI PUSH2 0xA68 PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAA5 JUMPI PUSH2 0xAA4 PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 DUP1 SLOAD DUP1 PUSH2 0xAFC JUMPI PUSH2 0xAFB PUSH2 0x170E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0xB40 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9C9 JUMP JUMPDEST POP PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB93 DUP3 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC9 SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC85 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD16 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD69 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD9B CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x983E86FDA8E7B1E2EAE380201830EAF1CAC55772E8E39583DA349865E8178863 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDE3 SWAP3 SWAP2 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE13 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xED7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE7D JUMPI PUSH2 0xE7C PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECA JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xEDC JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE45 JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF16 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFE2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFDD DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF96 SWAP3 SWAP2 SWAP1 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xFE2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100C DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1077 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1030 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1072 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1084 DUP4 DUP4 PUSH0 PUSH2 0x108C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x10D3 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CA SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x10FB SWAP2 SWAP1 PUSH2 0x188A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1135 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x113A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x114A DUP7 DUP4 DUP4 PUSH2 0x1155 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x116A JUMPI PUSH2 0x1165 DUP3 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x11DA JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1190 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x11D2 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C9 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x11DB JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x11F4 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1253 DUP3 PUSH2 0x122A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1263 DUP2 PUSH2 0x1249 JUMP JUMPDEST DUP2 EQ PUSH2 0x126D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127E DUP2 PUSH2 0x125A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1296 DUP2 PUSH2 0x1284 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B1 DUP2 PUSH2 0x128D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12CD JUMPI PUSH2 0x12CC PUSH2 0x1226 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12DA DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12EB DUP6 DUP3 DUP7 ADD PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130A JUMPI PUSH2 0x1309 PUSH2 0x1226 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1317 DUP5 DUP3 DUP6 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1329 DUP2 PUSH2 0x1284 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1342 PUSH0 DUP4 ADD DUP5 PUSH2 0x1320 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135D JUMPI PUSH2 0x135C PUSH2 0x1226 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x136A DUP5 DUP3 DUP6 ADD PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x137C DUP2 PUSH2 0x1249 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH0 DUP4 ADD DUP5 PUSH2 0x1373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B1 JUMPI PUSH2 0x13B0 PUSH2 0x1226 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13BE DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13CF DUP6 DUP3 DUP7 ADD PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x141D PUSH1 0xE DUP4 PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1428 DUP3 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x144A DUP2 PUSH2 0x1411 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E206E6F7420737570706F7274656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1485 PUSH1 0x13 DUP4 PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1490 DUP3 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14B2 DUP2 PUSH2 0x1479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14CC PUSH0 DUP4 ADD DUP6 PUSH2 0x1373 JUMP JUMPDEST PUSH2 0x14D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1320 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1514 PUSH1 0xC DUP4 PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x151F DUP3 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1541 DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C726561647920737570706F72746564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x157C PUSH1 0x17 DUP4 PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1587 DUP3 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15A9 DUP2 PUSH2 0x1570 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15E7 DUP3 PUSH2 0x1284 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F2 DUP4 PUSH2 0x1284 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1600 DUP2 PUSH2 0x1284 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1617 JUMPI PUSH2 0x1616 PUSH2 0x15B0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1655 DUP3 PUSH2 0x1284 JUMP JUMPDEST SWAP2 POP PUSH2 0x1660 DUP4 PUSH2 0x1284 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1670 JUMPI PUSH2 0x166F PUSH2 0x161E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1685 DUP3 PUSH2 0x1284 JUMP JUMPDEST SWAP2 POP PUSH2 0x1690 DUP4 PUSH2 0x1284 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x16A8 JUMPI PUSH2 0x16A7 PUSH2 0x15B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16B8 DUP3 PUSH2 0x1284 JUMP JUMPDEST SWAP2 POP PUSH2 0x16C3 DUP4 PUSH2 0x1284 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16DB JUMPI PUSH2 0x16DA PUSH2 0x15B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x176F PUSH1 0x14 DUP4 PUSH2 0x13D9 JUMP JUMPDEST SWAP2 POP PUSH2 0x177A DUP3 PUSH2 0x173B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x179C DUP2 PUSH2 0x1763 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17B6 PUSH0 DUP4 ADD DUP7 PUSH2 0x1373 JUMP JUMPDEST PUSH2 0x17C3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1373 JUMP JUMPDEST PUSH2 0x17D0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1320 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EC DUP2 PUSH2 0x17D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1807 DUP2 PUSH2 0x17E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1822 JUMPI PUSH2 0x1821 PUSH2 0x1226 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x182F DUP5 DUP3 DUP6 ADD PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1864 DUP3 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0x186E DUP2 DUP6 PUSH2 0x1842 JUMP JUMPDEST SWAP4 POP PUSH2 0x187E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x184C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1895 DUP3 DUP5 PUSH2 0x185A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SUB 0xE5 PC DIV 0x27 0xC0 SWAP2 PUSH14 0xF5AA02A59A6CBA7BAAA8C91C7B0B 0xF9 0xCF PUSH29 0x982104688E0F64736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "187:4743:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3484:253;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;523:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4738:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3802:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1675:661;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;736:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3256:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4104:570;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;807:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2389:482;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;633:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;768:32;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3484:253;1198:10;;;;;;;;;;;1184:24;;:10;:24;;;1176:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;3588:23:::1;3605:5;3588:16;:23::i;:::-;3580:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3668:9;3646:12;:19;3659:5;3646:19;;;;;;;;;;;;;;;:31;;;;3693:36;3712:5;3719:9;3693:36;;;;;;;:::i;:::-;;;;;;;;3484:253:::0;;:::o;523:53::-;;;;;;;;;;;;;;;;;:::o;4738:189::-;1198:10;;;;;;;;;;;1184:24;;:10;:24;;;1176:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;4846:3:::1;4829:13;:20;;4821:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;4906:13;4891:12;:28;;;;4738:189:::0;:::o;3802:238::-;1198:10;;;;;;;;;;;1184:24;;:10;:24;;;1176:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;3904:23:::1;3921:5;3904:16;:23::i;:::-;3903:24;3895:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3966:15;3987:5;3966:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4026:6;4004:12;:19;4017:5;4004:19;;;;;;;;;;;;;;;:28;;;;3802:238:::0;;:::o;1675:661::-;1756:23;1773:5;1756:16;:23::i;:::-;1748:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1816:11;1856:5;1840:12;;1831:6;:21;;;;:::i;:::-;1830:31;;;;:::i;:::-;1816:45;;1906:22;1940:3;1931:6;:12;;;;:::i;:::-;1906:37;;1956:73;1987:10;2007:4;2014:14;1963:5;1956:30;;;;:73;;;;;;:::i;:::-;2040:59;2071:10;2083;;;;;;;;;;;2095:3;2047:5;2040:30;;;;:59;;;;;;:::i;:::-;2193:14;2138:18;:30;2157:10;2138:30;;;;;;;;;;;;;;;:44;;:51;2183:5;2138:51;;;;;;;;;;;;;;;;:69;;;;;;;:::i;:::-;;;;;;;;2247:14;2218:18;:25;2237:5;2218:25;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;2294:10;2279:49;;;2306:5;2313:14;2279:49;;;;;;;:::i;:::-;;;;;;;;1737:599;;1675:661;;:::o;736:25::-;;;;;;;;;;;;;:::o;3256:156::-;3332:7;3359:18;:24;3378:4;3359:24;;;;;;;;;;;;;;;:38;;:45;3398:5;3359:45;;;;;;;;;;;;;;;;3352:52;;3256:156;;;;:::o;4104:570::-;1198:10;;;;;;;;;;;1184:24;;:10;:24;;;1176:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;4192:23:::1;4209:5;4192:16;:23::i;:::-;4184:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4255:9;4250:345;4274:15;:22;;;;4270:1;:26;4250:345;;;4344:5;4322:27;;:15;4338:1;4322:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:27;;::::0;4318:266:::1;;4391:15;4432:1;4407:15;:22;;;;:26;;;;:::i;:::-;4391:43;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4370:15;4386:1;4370:18;;;;;;;;:::i;:::-;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;4496:15;:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;4563:5;;4318:266;4298:3;;;;;;;4250:345;;;;4612:12;:19;4625:5;4612:19;;;;;;;;;;;;;;;4605:26;;;4104:570:::0;:::o;807:32::-;;;;:::o;2389:482::-;2473:23;2490:5;2473:16;:23::i;:::-;2465:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2594:6;2539:18;:30;2558:10;2539:30;;;;;;;;;;;;;;;:44;;:51;2584:5;2539:51;;;;;;;;;;;;;;;;:61;;2531:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;2693:6;2638:18;:30;2657:10;2638:30;;;;;;;;;;;;;;;:44;;:51;2683:5;2638:51;;;;;;;;;;;;;;;;:61;;;;;;;:::i;:::-;;;;;;;;2739:6;2710:18;:25;2729:5;2710:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;2758:46;2785:10;2797:6;2765:5;2758:26;;;;:46;;;;;:::i;:::-;2837:10;2820:43;;;2849:5;2856:6;2820:43;;;;;;;:::i;:::-;;;;;;;;2389:482;;:::o;633:47::-;;;;;;;;;;;;;;;;;:::o;768:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2917:269::-;2981:4;3003:9;3015:1;3003:13;;2998:158;3022:15;:22;;;;3018:1;:26;2998:158;;;3092:5;3070:27;;:15;3086:1;3070:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:27;;;3066:79;;3125:4;3118:11;;;;;3066:79;3046:3;;;;;;;2998:158;;;;3173:5;3166:12;;2917:269;;;;:::o;1702:188:2:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;1303:160::-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:3:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:329::-;1736:6;1785:2;1773:9;1764:7;1760:23;1756:32;1753:119;;;1791:79;;:::i;:::-;1753:119;1911:1;1936:53;1981:7;1972:6;1961:9;1957:22;1936:53;:::i;:::-;1926:63;;1882:117;1677:329;;;;:::o;2012:118::-;2099:24;2117:5;2099:24;:::i;:::-;2094:3;2087:37;2012:118;;:::o;2136:222::-;2229:4;2267:2;2256:9;2252:18;2244:26;;2280:71;2348:1;2337:9;2333:17;2324:6;2280:71;:::i;:::-;2136:222;;;;:::o;2364:329::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:118::-;2786:24;2804:5;2786:24;:::i;:::-;2781:3;2774:37;2699:118;;:::o;2823:222::-;2916:4;2954:2;2943:9;2939:18;2931:26;;2967:71;3035:1;3024:9;3020:17;3011:6;2967:71;:::i;:::-;2823:222;;;;:::o;3051:474::-;3119:6;3127;3176:2;3164:9;3155:7;3151:23;3147:32;3144:119;;;3182:79;;:::i;:::-;3144:119;3302:1;3327:53;3372:7;3363:6;3352:9;3348:22;3327:53;:::i;:::-;3317:63;;3273:117;3429:2;3455:53;3500:7;3491:6;3480:9;3476:22;3455:53;:::i;:::-;3445:63;;3400:118;3051:474;;;;;:::o;3531:169::-;3615:11;3649:6;3644:3;3637:19;3689:4;3684:3;3680:14;3665:29;;3531:169;;;;:::o;3706:164::-;3846:16;3842:1;3834:6;3830:14;3823:40;3706:164;:::o;3876:366::-;4018:3;4039:67;4103:2;4098:3;4039:67;:::i;:::-;4032:74;;4115:93;4204:3;4115:93;:::i;:::-;4233:2;4228:3;4224:12;4217:19;;3876:366;;;:::o;4248:419::-;4414:4;4452:2;4441:9;4437:18;4429:26;;4501:9;4495:4;4491:20;4487:1;4476:9;4472:17;4465:47;4529:131;4655:4;4529:131;:::i;:::-;4521:139;;4248:419;;;:::o;4673:169::-;4813:21;4809:1;4801:6;4797:14;4790:45;4673:169;:::o;4848:366::-;4990:3;5011:67;5075:2;5070:3;5011:67;:::i;:::-;5004:74;;5087:93;5176:3;5087:93;:::i;:::-;5205:2;5200:3;5196:12;5189:19;;4848:366;;;:::o;5220:419::-;5386:4;5424:2;5413:9;5409:18;5401:26;;5473:9;5467:4;5463:20;5459:1;5448:9;5444:17;5437:47;5501:131;5627:4;5501:131;:::i;:::-;5493:139;;5220:419;;;:::o;5645:332::-;5766:4;5804:2;5793:9;5789:18;5781:26;;5817:71;5885:1;5874:9;5870:17;5861:6;5817:71;:::i;:::-;5898:72;5966:2;5955:9;5951:18;5942:6;5898:72;:::i;:::-;5645:332;;;;;:::o;5983:162::-;6123:14;6119:1;6111:6;6107:14;6100:38;5983:162;:::o;6151:366::-;6293:3;6314:67;6378:2;6373:3;6314:67;:::i;:::-;6307:74;;6390:93;6479:3;6390:93;:::i;:::-;6508:2;6503:3;6499:12;6492:19;;6151:366;;;:::o;6523:419::-;6689:4;6727:2;6716:9;6712:18;6704:26;;6776:9;6770:4;6766:20;6762:1;6751:9;6747:17;6740:47;6804:131;6930:4;6804:131;:::i;:::-;6796:139;;6523:419;;;:::o;6948:173::-;7088:25;7084:1;7076:6;7072:14;7065:49;6948:173;:::o;7127:366::-;7269:3;7290:67;7354:2;7349:3;7290:67;:::i;:::-;7283:74;;7366:93;7455:3;7366:93;:::i;:::-;7484:2;7479:3;7475:12;7468:19;;7127:366;;;:::o;7499:419::-;7665:4;7703:2;7692:9;7688:18;7680:26;;7752:9;7746:4;7742:20;7738:1;7727:9;7723:17;7716:47;7780:131;7906:4;7780:131;:::i;:::-;7772:139;;7499:419;;;:::o;7924:180::-;7972:77;7969:1;7962:88;8069:4;8066:1;8059:15;8093:4;8090:1;8083:15;8110:410;8150:7;8173:20;8191:1;8173:20;:::i;:::-;8168:25;;8207:20;8225:1;8207:20;:::i;:::-;8202:25;;8262:1;8259;8255:9;8284:30;8302:11;8284:30;:::i;:::-;8273:41;;8463:1;8454:7;8450:15;8447:1;8444:22;8424:1;8417:9;8397:83;8374:139;;8493:18;;:::i;:::-;8374:139;8158:362;8110:410;;;;:::o;8526:180::-;8574:77;8571:1;8564:88;8671:4;8668:1;8661:15;8695:4;8692:1;8685:15;8712:185;8752:1;8769:20;8787:1;8769:20;:::i;:::-;8764:25;;8803:20;8821:1;8803:20;:::i;:::-;8798:25;;8842:1;8832:35;;8847:18;;:::i;:::-;8832:35;8889:1;8886;8882:9;8877:14;;8712:185;;;;:::o;8903:194::-;8943:4;8963:20;8981:1;8963:20;:::i;:::-;8958:25;;8997:20;9015:1;8997:20;:::i;:::-;8992:25;;9041:1;9038;9034:9;9026:17;;9065:1;9059:4;9056:11;9053:37;;;9070:18;;:::i;:::-;9053:37;8903:194;;;;:::o;9103:191::-;9143:3;9162:20;9180:1;9162:20;:::i;:::-;9157:25;;9196:20;9214:1;9196:20;:::i;:::-;9191:25;;9239:1;9236;9232:9;9225:16;;9260:3;9257:1;9254:10;9251:36;;;9267:18;;:::i;:::-;9251:36;9103:191;;;;:::o;9300:180::-;9348:77;9345:1;9338:88;9445:4;9442:1;9435:15;9469:4;9466:1;9459:15;9486:180;9534:77;9531:1;9524:88;9631:4;9628:1;9621:15;9655:4;9652:1;9645:15;9672:170;9812:22;9808:1;9800:6;9796:14;9789:46;9672:170;:::o;9848:366::-;9990:3;10011:67;10075:2;10070:3;10011:67;:::i;:::-;10004:74;;10087:93;10176:3;10087:93;:::i;:::-;10205:2;10200:3;10196:12;10189:19;;9848:366;;;:::o;10220:419::-;10386:4;10424:2;10413:9;10409:18;10401:26;;10473:9;10467:4;10463:20;10459:1;10448:9;10444:17;10437:47;10501:131;10627:4;10501:131;:::i;:::-;10493:139;;10220:419;;;:::o;10645:442::-;10794:4;10832:2;10821:9;10817:18;10809:26;;10845:71;10913:1;10902:9;10898:17;10889:6;10845:71;:::i;:::-;10926:72;10994:2;10983:9;10979:18;10970:6;10926:72;:::i;:::-;11008;11076:2;11065:9;11061:18;11052:6;11008:72;:::i;:::-;10645:442;;;;;;:::o;11093:90::-;11127:7;11170:5;11163:13;11156:21;11145:32;;11093:90;;;:::o;11189:116::-;11259:21;11274:5;11259:21;:::i;:::-;11252:5;11249:32;11239:60;;11295:1;11292;11285:12;11239:60;11189:116;:::o;11311:137::-;11365:5;11396:6;11390:13;11381:22;;11412:30;11436:5;11412:30;:::i;:::-;11311:137;;;;:::o;11454:345::-;11521:6;11570:2;11558:9;11549:7;11545:23;11541:32;11538:119;;;11576:79;;:::i;:::-;11538:119;11696:1;11721:61;11774:7;11765:6;11754:9;11750:22;11721:61;:::i;:::-;11711:71;;11667:125;11454:345;;;;:::o;11805:98::-;11856:6;11890:5;11884:12;11874:22;;11805:98;;;:::o;11909:147::-;12010:11;12047:3;12032:18;;11909:147;;;;:::o;12062:139::-;12151:6;12146:3;12141;12135:23;12192:1;12183:6;12178:3;12174:16;12167:27;12062:139;;;:::o;12207:386::-;12311:3;12339:38;12371:5;12339:38;:::i;:::-;12393:88;12474:6;12469:3;12393:88;:::i;:::-;12386:95;;12490:65;12548:6;12543:3;12536:4;12529:5;12525:16;12490:65;:::i;:::-;12580:6;12575:3;12571:16;12564:23;;12315:278;12207:386;;;;:::o;12599:271::-;12729:3;12751:93;12840:3;12831:6;12751:93;:::i;:::-;12744:100;;12861:3;12854:10;;12599:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1271600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(address,uint256)": "infinite",
								"addSupportedToken(address,uint256)": "infinite",
								"getUserBalance(address,address)": "infinite",
								"governance()": "2619",
								"liquidityFee()": "2469",
								"removeLiquidity(address,uint256)": "infinite",
								"removeSupportedToken(address)": "infinite",
								"setLiquidityFee(uint256)": "24755",
								"supportedTokens(uint256)": "5054",
								"tokenWeights(address)": "2890",
								"totalPoolLiquidity(address)": "2825",
								"updateTokenWeight(address,uint256)": "infinite"
							},
							"internal": {
								"isSupportedToken(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 837,
									"end": 839,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 807,
									"end": 839,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 807,
									"end": 839,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1255,
									"end": 1624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1386,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1378,
									"end": 1393,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1367,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1374,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1393,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1352,
									"end": 1423,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1352,
									"end": 1423,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1458,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1444,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1434,
									"end": 1444,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1458,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1469,
									"end": 1484,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1469,
									"end": 1494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1469,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1512,
									"end": 1521,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1507,
									"end": 1617,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1507,
									"end": 1617,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1531,
									"end": 1538,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1531,
									"end": 1545,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1527,
									"end": 1528,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1527,
									"end": 1545,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1507,
									"end": 1617,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1507,
									"end": 1617,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1507,
									"end": 1617,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1602,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1594,
									"end": 1605,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1594,
									"end": 1605,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1579,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1580,
									"end": 1587,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1588,
									"end": 1589,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1580,
									"end": 1590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1580,
									"end": 1590,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1567,
									"end": 1591,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1605,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1605,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1605,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1567,
									"end": 1605,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1507,
									"end": 1617,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1507,
									"end": 1617,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1507,
									"end": 1617,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1507,
									"end": 1617,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1507,
									"end": 1617,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1255,
									"end": 1624,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 4930,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 457,
									"end": 559,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 457,
									"end": 559,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 498,
									"end": 504,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 551,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 545,
									"end": 552,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 533,
									"end": 538,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 529,
									"end": 543,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 525,
									"end": 553,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 515,
									"end": 553,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 515,
									"end": 553,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 457,
									"end": 559,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 457,
									"end": 559,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 457,
									"end": 559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 565,
									"end": 745,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 565,
									"end": 745,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 613,
									"end": 690,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 610,
									"end": 611,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 603,
									"end": 691,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 710,
									"end": 714,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 708,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 700,
									"end": 715,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 734,
									"end": 738,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 739,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 856,
									"end": 860,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 834,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 834,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 834,
									"end": 861,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 834,
									"end": 861,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 826,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 822,
									"end": 862,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 952,
									"end": 962,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 949,
									"end": 971,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 928,
									"end": 946,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 916,
									"end": 926,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 913,
									"end": 947,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 910,
									"end": 972,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 907,
									"end": 995,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 907,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 975,
									"end": 993,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 975,
									"end": 993,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 975,
									"end": 993,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 907,
									"end": 995,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 907,
									"end": 995,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1011,
									"end": 1013,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1026,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 794,
									"end": 1032,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 751,
									"end": 1032,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 751,
									"end": 1032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1072,
									"end": 1078,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1099,
									"end": 1119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1099,
									"end": 1119,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 1119,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 1156,
									"end": 1160,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1154,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1128,
									"end": 1161,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 1128,
									"end": 1161,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1038,
									"end": 1167,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1038,
									"end": 1167,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1250,
									"end": 1254,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1358,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1332,
									"end": 1338,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1329,
									"end": 1359,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1362,
									"end": 1380,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 1362,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 1326,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1404,
									"end": 1410,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1400,
									"end": 1417,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1472,
									"end": 1476,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1466,
									"end": 1470,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1462,
									"end": 1477,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1454,
									"end": 1477,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1484,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1490,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 1600,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1650,
									"end": 1657,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1690,
									"end": 1732,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1683,
									"end": 1688,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1679,
									"end": 1733,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1733,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1739,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1782,
									"end": 1789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 1829,
									"end": 1834,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1811,
									"end": 1835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 1811,
									"end": 1835,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1835,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1841,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 1938,
									"end": 1943,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1920,
									"end": 1944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 1920,
									"end": 1944,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1913,
									"end": 1918,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1910,
									"end": 1945,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1956,
									"end": 1957,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1949,
									"end": 1961,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 1900,
									"end": 1963,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1847,
									"end": 1969,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1847,
									"end": 1969,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2063,
									"end": 2069,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2057,
									"end": 2070,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2048,
									"end": 2070,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 2106,
									"end": 2111,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2079,
									"end": 2112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "tag",
									"source": 5,
									"value": "77"
								},
								{
									"begin": 2079,
									"end": 2112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 2118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1975,
									"end": 2118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2248,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 2346,
									"end": 2352,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 2289,
									"end": 2353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "tag",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 2289,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 2273,
									"end": 2354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "tag",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 2273,
									"end": 2354,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2264,
									"end": 2354,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2374,
									"end": 2379,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2403,
									"end": 2409,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2396,
									"end": 2401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2389,
									"end": 2410,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2437,
									"end": 2441,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2430,
									"end": 2435,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2442,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2419,
									"end": 2442,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2490,
									"end": 2494,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2482,
									"end": 2488,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2478,
									"end": 2495,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2470,
									"end": 2476,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2466,
									"end": 2496,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2519,
									"end": 2522,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2511,
									"end": 2517,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2508,
									"end": 2523,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "81"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2538,
									"end": 2617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "tag",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 2538,
									"end": 2617,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "tag",
									"source": 5,
									"value": "81"
								},
								{
									"begin": 2505,
									"end": 2627,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2670,
									"end": 2676,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2665,
									"end": 2668,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2662,
									"end": 2677,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2745,
									"end": 2748,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 2818,
									"end": 2821,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2806,
									"end": 2816,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2774,
									"end": 2822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "tag",
									"source": 5,
									"value": "86"
								},
								{
									"begin": 2774,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2769,
									"end": 2772,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2762,
									"end": 2823,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2847,
									"end": 2850,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2843,
									"end": 2857,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2836,
									"end": 2857,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2712,
									"end": 2867,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2691,
									"end": 2694,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2680,
									"end": 2701,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "tag",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 2636,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2640,
									"end": 2661,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2254,
									"end": 2873,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2141,
									"end": 2873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2978,
									"end": 2983,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3027,
									"end": 3030,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3020,
									"end": 3024,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3012,
									"end": 3018,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3008,
									"end": 3025,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3004,
									"end": 3031,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "89"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 3035,
									"end": 3114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "tag",
									"source": 5,
									"value": "89"
								},
								{
									"begin": 3035,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "tag",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 2994,
									"end": 3116,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3139,
									"end": 3152,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "90"
								},
								{
									"begin": 3271,
									"end": 3274,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3263,
									"end": 3269,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3256,
									"end": 3260,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3248,
									"end": 3254,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3244,
									"end": 3261,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 3170,
									"end": 3275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "tag",
									"source": 5,
									"value": "90"
								},
								{
									"begin": 3170,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3161,
									"end": 3275,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2984,
									"end": 3281,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 3281,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 3281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3598,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 3287,
									"end": 3598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3364,
									"end": 3368,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3454,
									"end": 3472,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3446,
									"end": 3452,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3443,
									"end": 3473,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "92"
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 3476,
									"end": 3494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "tag",
									"source": 5,
									"value": "93"
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "tag",
									"source": 5,
									"value": "92"
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3526,
									"end": 3530,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3518,
									"end": 3524,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3514,
									"end": 3531,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3506,
									"end": 3531,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3506,
									"end": 3531,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3586,
									"end": 3590,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3580,
									"end": 3584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3576,
									"end": 3591,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3568,
									"end": 3591,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3568,
									"end": 3591,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3598,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3598,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3598,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3287,
									"end": 3598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3604,
									"end": 3681,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 3604,
									"end": 3681,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3641,
									"end": 3648,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3670,
									"end": 3675,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3659,
									"end": 3675,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3659,
									"end": 3675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3604,
									"end": 3681,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3604,
									"end": 3681,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3604,
									"end": 3681,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3604,
									"end": 3681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3687,
									"end": 3809,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 3687,
									"end": 3809,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3760,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "96"
								},
								{
									"begin": 3778,
									"end": 3783,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3760,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 3760,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3760,
									"end": 3784,
									"name": "tag",
									"source": 5,
									"value": "96"
								},
								{
									"begin": 3760,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3753,
									"end": 3758,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3750,
									"end": 3785,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3740,
									"end": 3803,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "97"
								},
								{
									"begin": 3740,
									"end": 3803,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3799,
									"end": 3800,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3796,
									"end": 3797,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3789,
									"end": 3801,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3740,
									"end": 3803,
									"name": "tag",
									"source": 5,
									"value": "97"
								},
								{
									"begin": 3740,
									"end": 3803,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3687,
									"end": 3809,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3687,
									"end": 3809,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3815,
									"end": 3958,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 3815,
									"end": 3958,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3872,
									"end": 3877,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3903,
									"end": 3909,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3919,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "99"
								},
								{
									"begin": 3946,
									"end": 3951,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3919,
									"end": 3952,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 3919,
									"end": 3952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3919,
									"end": 3952,
									"name": "tag",
									"source": 5,
									"value": "99"
								},
								{
									"begin": 3919,
									"end": 3952,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3815,
									"end": 3958,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3815,
									"end": 3958,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3815,
									"end": 3958,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3815,
									"end": 3958,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3815,
									"end": 3958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3981,
									"end": 4713,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 3981,
									"end": 4713,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4088,
									"end": 4093,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4113,
									"end": 4194,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "101"
								},
								{
									"begin": 4129,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "102"
								},
								{
									"begin": 4186,
									"end": 4192,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4129,
									"end": 4193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 4129,
									"end": 4193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4129,
									"end": 4193,
									"name": "tag",
									"source": 5,
									"value": "102"
								},
								{
									"begin": 4129,
									"end": 4193,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4113,
									"end": 4194,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 4113,
									"end": 4194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4113,
									"end": 4194,
									"name": "tag",
									"source": 5,
									"value": "101"
								},
								{
									"begin": 4113,
									"end": 4194,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4104,
									"end": 4194,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4104,
									"end": 4194,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4214,
									"end": 4219,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4243,
									"end": 4249,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4236,
									"end": 4241,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4229,
									"end": 4250,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4277,
									"end": 4281,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4270,
									"end": 4275,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4266,
									"end": 4282,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4259,
									"end": 4282,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4259,
									"end": 4282,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4330,
									"end": 4334,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4322,
									"end": 4328,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4318,
									"end": 4335,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 4310,
									"end": 4316,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4306,
									"end": 4336,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4359,
									"end": 4362,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4351,
									"end": 4357,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4348,
									"end": 4363,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4345,
									"end": 4467,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4345,
									"end": 4467,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "103"
								},
								{
									"begin": 4345,
									"end": 4467,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4378,
									"end": 4457,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "104"
								},
								{
									"begin": 4378,
									"end": 4457,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 4378,
									"end": 4457,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4378,
									"end": 4457,
									"name": "tag",
									"source": 5,
									"value": "104"
								},
								{
									"begin": 4378,
									"end": 4457,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4345,
									"end": 4467,
									"name": "tag",
									"source": 5,
									"value": "103"
								},
								{
									"begin": 4345,
									"end": 4467,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4493,
									"end": 4499,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4476,
									"end": 4707,
									"name": "tag",
									"source": 5,
									"value": "105"
								},
								{
									"begin": 4476,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4510,
									"end": 4516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4505,
									"end": 4508,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4502,
									"end": 4517,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4476,
									"end": 4707,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4476,
									"end": 4707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "107"
								},
								{
									"begin": 4476,
									"end": 4707,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4585,
									"end": 4588,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4614,
									"end": 4662,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "108"
								},
								{
									"begin": 4658,
									"end": 4661,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 4646,
									"end": 4656,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4614,
									"end": 4662,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 4614,
									"end": 4662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4614,
									"end": 4662,
									"name": "tag",
									"source": 5,
									"value": "108"
								},
								{
									"begin": 4614,
									"end": 4662,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4609,
									"end": 4612,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4602,
									"end": 4663,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4692,
									"end": 4696,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4687,
									"end": 4690,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4683,
									"end": 4697,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4676,
									"end": 4697,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 4676,
									"end": 4697,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4552,
									"end": 4707,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4536,
									"end": 4540,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4531,
									"end": 4534,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4527,
									"end": 4541,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4520,
									"end": 4541,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4520,
									"end": 4541,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4476,
									"end": 4707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "105"
								},
								{
									"begin": 4476,
									"end": 4707,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4476,
									"end": 4707,
									"name": "tag",
									"source": 5,
									"value": "107"
								},
								{
									"begin": 4476,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4480,
									"end": 4501,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4094,
									"end": 4713,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4094,
									"end": 4713,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3981,
									"end": 4713,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 3981,
									"end": 4713,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3981,
									"end": 4713,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3981,
									"end": 4713,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3981,
									"end": 4713,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3981,
									"end": 4713,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4736,
									"end": 5121,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 4736,
									"end": 5121,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4818,
									"end": 4823,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4867,
									"end": 4870,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4860,
									"end": 4864,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4852,
									"end": 4858,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4848,
									"end": 4865,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4844,
									"end": 4871,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 4834,
									"end": 4956,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "110"
								},
								{
									"begin": 4834,
									"end": 4956,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4875,
									"end": 4954,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "111"
								},
								{
									"begin": 4875,
									"end": 4954,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 4875,
									"end": 4954,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4875,
									"end": 4954,
									"name": "tag",
									"source": 5,
									"value": "111"
								},
								{
									"begin": 4875,
									"end": 4954,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4834,
									"end": 4956,
									"name": "tag",
									"source": 5,
									"value": "110"
								},
								{
									"begin": 4834,
									"end": 4956,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4985,
									"end": 4991,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4979,
									"end": 4992,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5010,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "112"
								},
								{
									"begin": 5111,
									"end": 5114,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5103,
									"end": 5109,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5096,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5088,
									"end": 5094,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 5084,
									"end": 5101,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5010,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 5010,
									"end": 5115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5010,
									"end": 5115,
									"name": "tag",
									"source": 5,
									"value": "112"
								},
								{
									"begin": 5010,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5001,
									"end": 5115,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5001,
									"end": 5115,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4824,
									"end": 5121,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4736,
									"end": 5121,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4736,
									"end": 5121,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4736,
									"end": 5121,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4736,
									"end": 5121,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4736,
									"end": 5121,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5127,
									"end": 6196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 5127,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5265,
									"end": 5271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5273,
									"end": 5279,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5281,
									"end": 5287,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5330,
									"end": 5332,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 5318,
									"end": 5327,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5309,
									"end": 5316,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 5305,
									"end": 5328,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5301,
									"end": 5333,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 5298,
									"end": 5417,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5298,
									"end": 5417,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "114"
								},
								{
									"begin": 5298,
									"end": 5417,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5336,
									"end": 5415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "115"
								},
								{
									"begin": 5336,
									"end": 5415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 5336,
									"end": 5415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5336,
									"end": 5415,
									"name": "tag",
									"source": 5,
									"value": "115"
								},
								{
									"begin": 5336,
									"end": 5415,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5298,
									"end": 5417,
									"name": "tag",
									"source": 5,
									"value": "114"
								},
								{
									"begin": 5298,
									"end": 5417,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5477,
									"end": 5478,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5466,
									"end": 5475,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5462,
									"end": 5479,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5456,
									"end": 5480,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5507,
									"end": 5525,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5499,
									"end": 5505,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5496,
									"end": 5526,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 5493,
									"end": 5610,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5493,
									"end": 5610,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "116"
								},
								{
									"begin": 5493,
									"end": 5610,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "117"
								},
								{
									"begin": 5529,
									"end": 5608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 5529,
									"end": 5608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5529,
									"end": 5608,
									"name": "tag",
									"source": 5,
									"value": "117"
								},
								{
									"begin": 5529,
									"end": 5608,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5493,
									"end": 5610,
									"name": "tag",
									"source": 5,
									"value": "116"
								},
								{
									"begin": 5493,
									"end": 5610,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5634,
									"end": 5723,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "118"
								},
								{
									"begin": 5715,
									"end": 5722,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 5706,
									"end": 5712,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5695,
									"end": 5704,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 5691,
									"end": 5713,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5634,
									"end": 5723,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 5634,
									"end": 5723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5634,
									"end": 5723,
									"name": "tag",
									"source": 5,
									"value": "118"
								},
								{
									"begin": 5634,
									"end": 5723,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5624,
									"end": 5723,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 5624,
									"end": 5723,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5427,
									"end": 5733,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5793,
									"end": 5795,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5782,
									"end": 5791,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5778,
									"end": 5796,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5772,
									"end": 5797,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5824,
									"end": 5842,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5816,
									"end": 5822,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5813,
									"end": 5843,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 5810,
									"end": 5927,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5810,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "119"
								},
								{
									"begin": 5810,
									"end": 5927,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5846,
									"end": 5925,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "120"
								},
								{
									"begin": 5846,
									"end": 5925,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 5846,
									"end": 5925,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5846,
									"end": 5925,
									"name": "tag",
									"source": 5,
									"value": "120"
								},
								{
									"begin": 5846,
									"end": 5925,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5810,
									"end": 5927,
									"name": "tag",
									"source": 5,
									"value": "119"
								},
								{
									"begin": 5810,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5951,
									"end": 6040,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "121"
								},
								{
									"begin": 6032,
									"end": 6039,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 6023,
									"end": 6029,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6012,
									"end": 6021,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 6008,
									"end": 6030,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5951,
									"end": 6040,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 5951,
									"end": 6040,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5951,
									"end": 6040,
									"name": "tag",
									"source": 5,
									"value": "121"
								},
								{
									"begin": 5951,
									"end": 6040,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5941,
									"end": 6040,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 5941,
									"end": 6040,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5743,
									"end": 6050,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6089,
									"end": 6091,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6115,
									"end": 6179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "122"
								},
								{
									"begin": 6171,
									"end": 6178,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 6162,
									"end": 6168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6151,
									"end": 6160,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 6147,
									"end": 6169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6115,
									"end": 6179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6115,
									"end": 6179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6115,
									"end": 6179,
									"name": "tag",
									"source": 5,
									"value": "122"
								},
								{
									"begin": 6115,
									"end": 6179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6105,
									"end": 6179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6105,
									"end": 6179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6060,
									"end": 6189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5127,
									"end": 6196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 5127,
									"end": 6196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5127,
									"end": 6196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 5127,
									"end": 6196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5127,
									"end": 6196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 5127,
									"end": 6196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6202,
									"end": 6371,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 6202,
									"end": 6371,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6286,
									"end": 6297,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6320,
									"end": 6326,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6315,
									"end": 6318,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6308,
									"end": 6327,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6355,
									"end": 6358,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6351,
									"end": 6365,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6336,
									"end": 6365,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6336,
									"end": 6365,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6202,
									"end": 6371,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6202,
									"end": 6371,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6202,
									"end": 6371,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6202,
									"end": 6371,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6202,
									"end": 6371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6377,
									"end": 6552,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 6377,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6517,
									"end": 6544,
									"name": "PUSH",
									"source": 5,
									"value": "546F6B656E20616E6420776569676874206D69736D6174636800000000000000"
								},
								{
									"begin": 6513,
									"end": 6514,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6505,
									"end": 6511,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6501,
									"end": 6515,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6494,
									"end": 6545,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6377,
									"end": 6552,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6377,
									"end": 6552,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6558,
									"end": 6924,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 6558,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6700,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6721,
									"end": 6788,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "126"
								},
								{
									"begin": 6785,
									"end": 6787,
									"name": "PUSH",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 6780,
									"end": 6783,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6721,
									"end": 6788,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 6721,
									"end": 6788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6721,
									"end": 6788,
									"name": "tag",
									"source": 5,
									"value": "126"
								},
								{
									"begin": 6721,
									"end": 6788,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6714,
									"end": 6788,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6714,
									"end": 6788,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6797,
									"end": 6890,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "127"
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6797,
									"end": 6890,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 6797,
									"end": 6890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6797,
									"end": 6890,
									"name": "tag",
									"source": 5,
									"value": "127"
								},
								{
									"begin": 6797,
									"end": 6890,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6915,
									"end": 6917,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6910,
									"end": 6913,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6906,
									"end": 6918,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6899,
									"end": 6918,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6899,
									"end": 6918,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6558,
									"end": 6924,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6558,
									"end": 6924,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6558,
									"end": 6924,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6558,
									"end": 6924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6930,
									"end": 7349,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 6930,
									"end": 7349,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7096,
									"end": 7100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7134,
									"end": 7136,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7123,
									"end": 7132,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7119,
									"end": 7137,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7111,
									"end": 7137,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7111,
									"end": 7137,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7183,
									"end": 7192,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7177,
									"end": 7181,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7173,
									"end": 7193,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7169,
									"end": 7170,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7158,
									"end": 7167,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7154,
									"end": 7171,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7147,
									"end": 7194,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7211,
									"end": 7342,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "129"
								},
								{
									"begin": 7337,
									"end": 7341,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7211,
									"end": 7342,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 7211,
									"end": 7342,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7211,
									"end": 7342,
									"name": "tag",
									"source": 5,
									"value": "129"
								},
								{
									"begin": 7211,
									"end": 7342,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7203,
									"end": 7342,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7203,
									"end": 7342,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6930,
									"end": 7349,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6930,
									"end": 7349,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6930,
									"end": 7349,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6930,
									"end": 7349,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7355,
									"end": 7535,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 7355,
									"end": 7535,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7403,
									"end": 7480,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7400,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7393,
									"end": 7481,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7500,
									"end": 7504,
									"name": "PUSH",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 7497,
									"end": 7498,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 7490,
									"end": 7505,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7524,
									"end": 7528,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 7521,
									"end": 7522,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7514,
									"end": 7529,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 4930,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab03e5580427c0916df5aa02a59a6cba7baaa8c91c7b0bf9cf7c982104688e0f64736f6c634300081a0033",
									".code": [
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "6805D6AD"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "6805D6AD"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "76319190"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "98118CB4"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "A201CCF6"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "AB2F3AD4"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "C6255626"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "21FAF184"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "3053F0B2"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "357BF15C"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "4D8E3D3B"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "56688700"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "5AA6E675"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 4930,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3484,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3484,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 523,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 523,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 523,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4738,
											"end": 4927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4738,
											"end": 4927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3802,
											"end": 4040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3802,
											"end": 4040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1675,
											"end": 2336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1675,
											"end": 2336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 736,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 736,
											"end": 761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3256,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3256,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3256,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4104,
											"end": 4674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4104,
											"end": 4674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 807,
											"end": 839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 807,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 807,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 807,
											"end": 839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 839,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 807,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 807,
											"end": 839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 839,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2389,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2389,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 633,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 633,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 633,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 768,
											"end": 800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 768,
											"end": 800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 768,
											"end": 800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1194,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1176,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3605,
											"end": 3610,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3604,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3588,
											"end": 3611,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3611,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3588,
											"end": 3611,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3580,
											"end": 3635,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3580,
											"end": 3635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3677,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3664,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3665,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3677,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3677,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3677,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "C9BF4277EB054FE4FA82FF2E3B468A6300F4BC73A13794B02287F6D8282C998C"
										},
										{
											"begin": 3712,
											"end": 3717,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3719,
											"end": 3728,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3693,
											"end": 3729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3729,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 523,
											"end": 576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1194,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1176,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4846,
											"end": 4849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4829,
											"end": 4842,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4849,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4849,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4821,
											"end": 4866,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4821,
											"end": 4866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 4919,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4891,
											"end": 4919,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4919,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4919,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4919,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1194,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1176,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3921,
											"end": 3926,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 3920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3904,
											"end": 3927,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 3927,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3904,
											"end": 3927,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 3927,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3895,
											"end": 3955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3895,
											"end": 3955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 3992,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3993,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4026,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4022,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4023,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4032,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1773,
											"end": 1778,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1756,
											"end": 1779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1748,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1748,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1827,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 1840,
											"end": 1852,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1840,
											"end": 1852,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1831,
											"end": 1852,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1831,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1852,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1831,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1830,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1830,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1830,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1906,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1943,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1931,
											"end": 1943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1906,
											"end": 1943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1906,
											"end": 1943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1987,
											"end": 1997,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2011,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2014,
											"end": 2028,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 1968,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1986,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 1986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1956,
											"end": 1986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2029,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2029,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2029,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2029,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 2029,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 2029,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1956,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2083,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2093,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2083,
											"end": 2093,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2093,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2083,
											"end": 2093,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2095,
											"end": 2098,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2052,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2040,
											"end": 2070,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2040,
											"end": 2070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2099,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2099,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2099,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2099,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2040,
											"end": 2099,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2099,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2040,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2193,
											"end": 2207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2168,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2182,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2188,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2138,
											"end": 2207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2242,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2218,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2304,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "PUSH",
											"source": 4,
											"value": "9D278C56BA6DC86A12EEFE6B43112BD6E06648EB4EC0B950EE2D783D40E2ACB4"
										},
										{
											"begin": 2306,
											"end": 2311,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2279,
											"end": 2328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2279,
											"end": 2328,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 2336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 761,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 736,
											"end": 761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3339,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3378,
											"end": 3382,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3383,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3397,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3397,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3403,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3404,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1194,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1208,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1176,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1176,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4209,
											"end": 4214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4192,
											"end": 4215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4192,
											"end": 4215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4184,
											"end": 4239,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4184,
											"end": 4239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4595,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4250,
											"end": 4595,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4274,
											"end": 4296,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4296,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4270,
											"end": 4271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4270,
											"end": 4296,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4595,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4250,
											"end": 4595,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4344,
											"end": 4349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4322,
											"end": 4349,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4338,
											"end": 4339,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4322,
											"end": 4340,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4322,
											"end": 4340,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4322,
											"end": 4349,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4349,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4318,
											"end": 4584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4318,
											"end": 4584,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4432,
											"end": 4433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4407,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4407,
											"end": 4429,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4429,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4429,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4429,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4407,
											"end": 4433,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4407,
											"end": 4433,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4433,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 4407,
											"end": 4433,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4391,
											"end": 4434,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4391,
											"end": 4434,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4386,
											"end": 4387,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4370,
											"end": 4388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4434,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4496,
											"end": 4517,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4563,
											"end": 4568,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4318,
											"end": 4584,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 4318,
											"end": 4584,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4301,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4301,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4298,
											"end": 4301,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4301,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4301,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4301,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4250,
											"end": 4595,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4595,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4250,
											"end": 4595,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4595,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4630,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4631,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4605,
											"end": 4631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4631,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4104,
											"end": 4674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 807,
											"end": 839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 839,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 807,
											"end": 839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2490,
											"end": 2495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2473,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2496,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2473,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2465,
											"end": 2520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2465,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2557,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2568,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2569,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2583,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2583,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2589,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2590,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2600,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2539,
											"end": 2600,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2531,
											"end": 2625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2531,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2657,
											"end": 2667,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2688,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2638,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2745,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2728,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2734,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2710,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2785,
											"end": 2795,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2765,
											"end": 2770,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2758,
											"end": 2784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2758,
											"end": 2784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2804,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2804,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2804,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2804,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2758,
											"end": 2804,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2804,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2758,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 2847,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "983E86FDA8E7B1E2EAE380201830EAF1CAC55772E8E39583DA349865E8178863"
										},
										{
											"begin": 2849,
											"end": 2854,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2820,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2820,
											"end": 2863,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 633,
											"end": 680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 768,
											"end": 800,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 768,
											"end": 800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2917,
											"end": 3186,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2917,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3012,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3015,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3003,
											"end": 3016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3156,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2998,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3022,
											"end": 3037,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3022,
											"end": 3044,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3022,
											"end": 3044,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3022,
											"end": 3044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3022,
											"end": 3044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3044,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2998,
											"end": 3156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3097,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3097,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3070,
											"end": 3097,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3070,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3097,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3070,
											"end": 3097,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3097,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3066,
											"end": 3145,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3129,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3118,
											"end": 3129,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3118,
											"end": 3129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3118,
											"end": 3129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3118,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3118,
											"end": 3129,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3145,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3066,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2998,
											"end": 3156,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3156,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2998,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3166,
											"end": 3178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2917,
											"end": 3186,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2917,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2917,
											"end": 3186,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2917,
											"end": 3186,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2917,
											"end": 3186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2917,
											"end": 3186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1783,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1791,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 1981,
											"end": 1988,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1936,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 1999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2099,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2099,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2097,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2087,
											"end": 2124,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2012,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2280,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 2280,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2478,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 2623,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 2804,
											"end": 2809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2786,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 2786,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2916,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2939,
											"end": 2957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2967,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 2967,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3125,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3133,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3173,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3162,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3174,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3147,
											"end": 3179,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3182,
											"end": 3261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 3372,
											"end": 3379,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3361,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3348,
											"end": 3370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3327,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3380,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3455,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 3500,
											"end": 3507,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3497,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3498,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3455,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3508,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 3455,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3445,
											"end": 3508,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3445,
											"end": 3508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3518,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3700,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3531,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3626,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3655,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3644,
											"end": 3647,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3637,
											"end": 3656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3693,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3687,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3665,
											"end": 3694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3665,
											"end": 3694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3700,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3870,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3706,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 3842,
											"end": 3843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 3840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3830,
											"end": 3844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 4242,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3876,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 4103,
											"end": 4105,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 4098,
											"end": 4101,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 4039,
											"end": 4106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4106,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 4039,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4115,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 4204,
											"end": 4207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4115,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4115,
											"end": 4208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4115,
											"end": 4208,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 4115,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4235,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4228,
											"end": 4231,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4224,
											"end": 4236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 4242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 4242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 4242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 4242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4248,
											"end": 4667,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 4248,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4454,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4501,
											"end": 4510,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4491,
											"end": 4511,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4485,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4472,
											"end": 4489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4512,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4529,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 4655,
											"end": 4659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4529,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4529,
											"end": 4660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4529,
											"end": 4660,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 4529,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4521,
											"end": 4660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4521,
											"end": 4660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4248,
											"end": 4667,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4248,
											"end": 4667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4248,
											"end": 4667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4248,
											"end": 4667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4842,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 4673,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4834,
											"name": "PUSH",
											"source": 5,
											"value": "546F6B656E206E6F7420737570706F7274656400000000000000000000000000"
										},
										{
											"begin": 4809,
											"end": 4810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4797,
											"end": 4811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4835,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4848,
											"end": 5214,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4848,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 4993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5075,
											"end": 5077,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 5070,
											"end": 5073,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5011,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5011,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5011,
											"end": 5078,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5011,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5004,
											"end": 5078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5004,
											"end": 5078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 5176,
											"end": 5179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5087,
											"end": 5180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5180,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 5087,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5205,
											"end": 5207,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5200,
											"end": 5203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5208,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5189,
											"end": 5208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5189,
											"end": 5208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4848,
											"end": 5214,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4848,
											"end": 5214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4848,
											"end": 5214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4848,
											"end": 5214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5220,
											"end": 5639,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5220,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5413,
											"end": 5422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5473,
											"end": 5482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5463,
											"end": 5483,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5459,
											"end": 5460,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5448,
											"end": 5457,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5444,
											"end": 5461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5437,
											"end": 5484,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 5627,
											"end": 5631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 5501,
											"end": 5632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5632,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 5501,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5632,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5632,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5220,
											"end": 5639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5220,
											"end": 5639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5220,
											"end": 5639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5220,
											"end": 5639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5645,
											"end": 5977,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 5645,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5793,
											"end": 5802,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5789,
											"end": 5807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5781,
											"end": 5807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5781,
											"end": 5807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5817,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 5885,
											"end": 5886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5883,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 5887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5861,
											"end": 5867,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5817,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5817,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5817,
											"end": 5888,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 5817,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 5966,
											"end": 5968,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5955,
											"end": 5964,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5951,
											"end": 5969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 5948,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5898,
											"end": 5970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5970,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 5898,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5645,
											"end": 5977,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5645,
											"end": 5977,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5645,
											"end": 5977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5645,
											"end": 5977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5645,
											"end": 5977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5645,
											"end": 5977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5983,
											"end": 6145,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 5983,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6123,
											"end": 6137,
											"name": "PUSH",
											"source": 5,
											"value": "46656520746F6F20686967680000000000000000000000000000000000000000"
										},
										{
											"begin": 6119,
											"end": 6120,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6117,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6107,
											"end": 6121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6138,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5983,
											"end": 6145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5983,
											"end": 6145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6151,
											"end": 6517,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6151,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 6378,
											"end": 6380,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 6373,
											"end": 6376,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6314,
											"end": 6381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6381,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 6314,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6381,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6390,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 6479,
											"end": 6482,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6390,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 6390,
											"end": 6483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6390,
											"end": 6483,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 6390,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6510,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6503,
											"end": 6506,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6499,
											"end": 6511,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6492,
											"end": 6511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6492,
											"end": 6511,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6151,
											"end": 6517,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6151,
											"end": 6517,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6151,
											"end": 6517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6151,
											"end": 6517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6942,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6523,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6689,
											"end": 6693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6729,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6716,
											"end": 6725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6712,
											"end": 6730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6704,
											"end": 6730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6704,
											"end": 6730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6776,
											"end": 6785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6786,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6762,
											"end": 6763,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6751,
											"end": 6760,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6747,
											"end": 6764,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6740,
											"end": 6787,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6804,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 6930,
											"end": 6934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6804,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6804,
											"end": 6935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6804,
											"end": 6935,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 6804,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6935,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6942,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6942,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6948,
											"end": 7121,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 6948,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "PUSH",
											"source": 5,
											"value": "546F6B656E20616C726561647920737570706F72746564000000000000000000"
										},
										{
											"begin": 7084,
											"end": 7085,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7076,
											"end": 7082,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7072,
											"end": 7086,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7065,
											"end": 7114,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6948,
											"end": 7121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6948,
											"end": 7121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 7493,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7127,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7269,
											"end": 7272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7290,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 7354,
											"end": 7356,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7290,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 7290,
											"end": 7357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7290,
											"end": 7357,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 7290,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7283,
											"end": 7357,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7283,
											"end": 7357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 7455,
											"end": 7458,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 7366,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7459,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 7366,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7484,
											"end": 7486,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7479,
											"end": 7482,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7475,
											"end": 7487,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7468,
											"end": 7487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7468,
											"end": 7487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 7493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 7493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 7493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 7493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7499,
											"end": 7918,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 7499,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7665,
											"end": 7669,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7705,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7692,
											"end": 7701,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7688,
											"end": 7706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7680,
											"end": 7706,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7680,
											"end": 7706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7761,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7746,
											"end": 7750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7762,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7739,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7736,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7723,
											"end": 7740,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7716,
											"end": 7763,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7906,
											"end": 7910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7780,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7911,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7780,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7772,
											"end": 7911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7772,
											"end": 7911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7499,
											"end": 7918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7499,
											"end": 7918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7499,
											"end": 7918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7499,
											"end": 7918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 8104,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 7924,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7972,
											"end": 8049,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 8050,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8073,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8066,
											"end": 8067,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8059,
											"end": 8074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8093,
											"end": 8097,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8083,
											"end": 8098,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8110,
											"end": 8520,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 8110,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8150,
											"end": 8157,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8173,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 8191,
											"end": 8192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 8173,
											"end": 8193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8193,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 8173,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8168,
											"end": 8193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 8225,
											"end": 8226,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 8207,
											"end": 8227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8227,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 8207,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8202,
											"end": 8227,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8202,
											"end": 8227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8259,
											"end": 8260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8255,
											"end": 8264,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 8284,
											"end": 8314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 8302,
											"end": 8313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8284,
											"end": 8314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 8284,
											"end": 8314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8284,
											"end": 8314,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 8284,
											"end": 8314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8273,
											"end": 8314,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8273,
											"end": 8314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8463,
											"end": 8464,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8454,
											"end": 8461,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8465,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8444,
											"end": 8466,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8424,
											"end": 8425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8417,
											"end": 8426,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8397,
											"end": 8480,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 8374,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 8374,
											"end": 8513,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 8493,
											"end": 8511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8374,
											"end": 8513,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 8374,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8158,
											"end": 8520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8110,
											"end": 8520,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8110,
											"end": 8520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8110,
											"end": 8520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8110,
											"end": 8520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8110,
											"end": 8520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8526,
											"end": 8706,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 8526,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8574,
											"end": 8651,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8571,
											"end": 8572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8564,
											"end": 8652,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8671,
											"end": 8675,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 8668,
											"end": 8669,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8661,
											"end": 8676,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8695,
											"end": 8699,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8692,
											"end": 8693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8685,
											"end": 8700,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8712,
											"end": 8897,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 8712,
											"end": 8897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8769,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 8787,
											"end": 8788,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8769,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 8769,
											"end": 8789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8769,
											"end": 8789,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 8769,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8764,
											"end": 8789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8764,
											"end": 8789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 8821,
											"end": 8822,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8823,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 8803,
											"end": 8823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8823,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 8803,
											"end": 8823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8798,
											"end": 8823,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8798,
											"end": 8823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8843,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8832,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 8832,
											"end": 8867,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8847,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 8847,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 8847,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8847,
											"end": 8865,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 8847,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8832,
											"end": 8867,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 8832,
											"end": 8867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8889,
											"end": 8890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8886,
											"end": 8887,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8882,
											"end": 8891,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 8877,
											"end": 8891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8877,
											"end": 8891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8712,
											"end": 8897,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8712,
											"end": 8897,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8712,
											"end": 8897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8712,
											"end": 8897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8712,
											"end": 8897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8903,
											"end": 9097,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 8903,
											"end": 9097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8963,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8981,
											"end": 8982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8963,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 8963,
											"end": 8983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8963,
											"end": 8983,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8963,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8997,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 9015,
											"end": 9016,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8997,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 8997,
											"end": 9017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8997,
											"end": 9017,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8997,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9017,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9017,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9041,
											"end": 9042,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9038,
											"end": 9039,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9034,
											"end": 9043,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9065,
											"end": 9066,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9059,
											"end": 9063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9056,
											"end": 9067,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9090,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 9053,
											"end": 9090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 9070,
											"end": 9088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 9070,
											"end": 9088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 9053,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8903,
											"end": 9097,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8903,
											"end": 9097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8903,
											"end": 9097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8903,
											"end": 9097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8903,
											"end": 9097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9294,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 9103,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9143,
											"end": 9146,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 9180,
											"end": 9181,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9162,
											"end": 9182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 9162,
											"end": 9182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9162,
											"end": 9182,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 9162,
											"end": 9182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9196,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 9214,
											"end": 9215,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9196,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 9196,
											"end": 9216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9196,
											"end": 9216,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 9196,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9191,
											"end": 9216,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9191,
											"end": 9216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9239,
											"end": 9240,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9236,
											"end": 9237,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 9241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9225,
											"end": 9241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9260,
											"end": 9263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9257,
											"end": 9258,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9254,
											"end": 9264,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9251,
											"end": 9287,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9251,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 9251,
											"end": 9287,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9267,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 9267,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 9267,
											"end": 9285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9267,
											"end": 9285,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 9267,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9251,
											"end": 9287,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 9251,
											"end": 9287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9294,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9294,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9300,
											"end": 9480,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 9300,
											"end": 9480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9348,
											"end": 9425,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9345,
											"end": 9346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9338,
											"end": 9426,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9445,
											"end": 9449,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 9442,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9435,
											"end": 9450,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9469,
											"end": 9473,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9466,
											"end": 9467,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9459,
											"end": 9474,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9486,
											"end": 9666,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 9486,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9534,
											"end": 9611,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9531,
											"end": 9532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9524,
											"end": 9612,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9631,
											"end": 9635,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 9628,
											"end": 9629,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9621,
											"end": 9636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9655,
											"end": 9659,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9652,
											"end": 9653,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9645,
											"end": 9660,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9672,
											"end": 9842,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 9672,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9812,
											"end": 9834,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 9808,
											"end": 9809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9800,
											"end": 9806,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9796,
											"end": 9810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9789,
											"end": 9835,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9672,
											"end": 9842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9672,
											"end": 9842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9848,
											"end": 10214,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 9848,
											"end": 10214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9990,
											"end": 9993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10011,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 10075,
											"end": 10077,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 10070,
											"end": 10073,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 10011,
											"end": 10078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10078,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 10011,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10004,
											"end": 10078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10004,
											"end": 10078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10087,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 10176,
											"end": 10179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10087,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 10087,
											"end": 10180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10087,
											"end": 10180,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 10087,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10205,
											"end": 10207,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10200,
											"end": 10203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10196,
											"end": 10208,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10189,
											"end": 10208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10189,
											"end": 10208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9848,
											"end": 10214,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9848,
											"end": 10214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9848,
											"end": 10214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9848,
											"end": 10214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10220,
											"end": 10639,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 10220,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10386,
											"end": 10390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10424,
											"end": 10426,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10413,
											"end": 10422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10401,
											"end": 10427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10401,
											"end": 10427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10473,
											"end": 10482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10467,
											"end": 10471,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10463,
											"end": 10483,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10459,
											"end": 10460,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10448,
											"end": 10457,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10444,
											"end": 10461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10437,
											"end": 10484,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10501,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10501,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 10501,
											"end": 10632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10501,
											"end": 10632,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 10501,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10493,
											"end": 10632,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10493,
											"end": 10632,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10220,
											"end": 10639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10220,
											"end": 10639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10220,
											"end": 10639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10220,
											"end": 10639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10645,
											"end": 11087,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 10645,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10794,
											"end": 10798,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10832,
											"end": 10834,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10821,
											"end": 10830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10817,
											"end": 10835,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 10835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 10835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10845,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 10913,
											"end": 10914,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10902,
											"end": 10911,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10898,
											"end": 10915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10889,
											"end": 10895,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10845,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 10845,
											"end": 10916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10845,
											"end": 10916,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 10845,
											"end": 10916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10926,
											"end": 10998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 10994,
											"end": 10996,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10983,
											"end": 10992,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10970,
											"end": 10976,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10926,
											"end": 10998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 10926,
											"end": 10998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10926,
											"end": 10998,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 10926,
											"end": 10998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11008,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 11076,
											"end": 11078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11065,
											"end": 11074,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11061,
											"end": 11079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11052,
											"end": 11058,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11008,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 11008,
											"end": 11080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11008,
											"end": 11080,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 11008,
											"end": 11080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10645,
											"end": 11087,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 10645,
											"end": 11087,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10645,
											"end": 11087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10645,
											"end": 11087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10645,
											"end": 11087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10645,
											"end": 11087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10645,
											"end": 11087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11183,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 11093,
											"end": 11183,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11127,
											"end": 11134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11170,
											"end": 11175,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11163,
											"end": 11176,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11156,
											"end": 11177,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11145,
											"end": 11177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11145,
											"end": 11177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11183,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11189,
											"end": 11305,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 11189,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11259,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 11274,
											"end": 11279,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11259,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 11259,
											"end": 11280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11259,
											"end": 11280,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 11259,
											"end": 11280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11252,
											"end": 11257,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11249,
											"end": 11281,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11239,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 11239,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11295,
											"end": 11296,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11285,
											"end": 11297,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11239,
											"end": 11299,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 11239,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11189,
											"end": 11305,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11189,
											"end": 11305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11311,
											"end": 11448,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 11311,
											"end": 11448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11365,
											"end": 11370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11396,
											"end": 11402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11390,
											"end": 11403,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11381,
											"end": 11403,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11381,
											"end": 11403,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11412,
											"end": 11442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 11436,
											"end": 11441,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11412,
											"end": 11442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 11412,
											"end": 11442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11412,
											"end": 11442,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 11412,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11311,
											"end": 11448,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11311,
											"end": 11448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11311,
											"end": 11448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11311,
											"end": 11448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11311,
											"end": 11448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11454,
											"end": 11799,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 11454,
											"end": 11799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11521,
											"end": 11527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11570,
											"end": 11572,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11558,
											"end": 11567,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11549,
											"end": 11556,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11545,
											"end": 11568,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11541,
											"end": 11573,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 11538,
											"end": 11657,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11538,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 11538,
											"end": 11657,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11576,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 11576,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 11576,
											"end": 11655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11576,
											"end": 11655,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 11576,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11538,
											"end": 11657,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 11538,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11696,
											"end": 11697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11721,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 11774,
											"end": 11781,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11765,
											"end": 11771,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11754,
											"end": 11763,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11750,
											"end": 11772,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11721,
											"end": 11782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 11721,
											"end": 11782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11721,
											"end": 11782,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 11721,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11711,
											"end": 11782,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11711,
											"end": 11782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11667,
											"end": 11792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11454,
											"end": 11799,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11454,
											"end": 11799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11454,
											"end": 11799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11454,
											"end": 11799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11454,
											"end": 11799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11805,
											"end": 11903,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 11805,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11856,
											"end": 11862,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11890,
											"end": 11895,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11884,
											"end": 11896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 11896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11805,
											"end": 11903,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11805,
											"end": 11903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11805,
											"end": 11903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11805,
											"end": 11903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11909,
											"end": 12056,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 11909,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12010,
											"end": 12021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12047,
											"end": 12050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12032,
											"end": 12050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12032,
											"end": 12050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11909,
											"end": 12056,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11909,
											"end": 12056,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11909,
											"end": 12056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11909,
											"end": 12056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11909,
											"end": 12056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12062,
											"end": 12201,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 12062,
											"end": 12201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12151,
											"end": 12157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12146,
											"end": 12149,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12141,
											"end": 12144,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12135,
											"end": 12158,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 12192,
											"end": 12193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12183,
											"end": 12189,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12178,
											"end": 12181,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12174,
											"end": 12190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12167,
											"end": 12194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12062,
											"end": 12201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12062,
											"end": 12201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12062,
											"end": 12201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12062,
											"end": 12201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12207,
											"end": 12593,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 12207,
											"end": 12593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12311,
											"end": 12314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12339,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 12371,
											"end": 12376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12339,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 12339,
											"end": 12377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12339,
											"end": 12377,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 12339,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12393,
											"end": 12481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 12474,
											"end": 12480,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12469,
											"end": 12472,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12393,
											"end": 12481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 12393,
											"end": 12481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12393,
											"end": 12481,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 12393,
											"end": 12481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12386,
											"end": 12481,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12386,
											"end": 12481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12490,
											"end": 12555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 12548,
											"end": 12554,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12543,
											"end": 12546,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12536,
											"end": 12540,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12529,
											"end": 12534,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 12525,
											"end": 12541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12490,
											"end": 12555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 12490,
											"end": 12555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12490,
											"end": 12555,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 12490,
											"end": 12555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12580,
											"end": 12586,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12575,
											"end": 12578,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12571,
											"end": 12587,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12564,
											"end": 12587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12564,
											"end": 12587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12315,
											"end": 12593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12207,
											"end": 12593,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12207,
											"end": 12593,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12207,
											"end": 12593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12207,
											"end": 12593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12207,
											"end": 12593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12599,
											"end": 12870,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 12599,
											"end": 12870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12729,
											"end": 12732,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12751,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 12840,
											"end": 12843,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12831,
											"end": 12837,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12751,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 12751,
											"end": 12844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12751,
											"end": 12844,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 12751,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12744,
											"end": 12844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12744,
											"end": 12844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12861,
											"end": 12864,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12854,
											"end": 12864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12854,
											"end": 12864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12599,
											"end": 12870,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12599,
											"end": 12870,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12599,
											"end": 12870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12599,
											"end": 12870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12599,
											"end": 12870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"src/OpenDexV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(address,uint256)": "56688700",
							"addSupportedToken(address,uint256)": "4d8e3d3b",
							"getUserBalance(address,address)": "6805d6ad",
							"governance()": "5aa6e675",
							"liquidityFee()": "98118cb4",
							"removeLiquidity(address,uint256)": "a201ccf6",
							"removeSupportedToken(address)": "76319190",
							"setLiquidityFee(uint256)": "357bf15c",
							"supportedTokens(uint256)": "c6255626",
							"tokenWeights(address)": "ab2f3ad4",
							"totalPoolLiquidity(address)": "3053f0b2",
							"updateTokenWeight(address,uint256)": "21faf184"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWeight\",\"type\":\"uint256\"}],\"name\":\"TokenWeightUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"addSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"}],\"name\":\"setLiquidityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalPoolLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newWeight\",\"type\":\"uint256\"}],\"name\":\"updateTokenWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/OpenDexV2.sol\":\"MultiTokenPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"src/OpenDexV2.sol\":{\"keccak256\":\"0x0006177a648b6ff1f4781cf554e2f7106e91efcfeb51cfc9070bcec21dd1a6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6cf6d3bb56869459c2d4c92808ad25bc4cd7196287a4f4277367d3c52e7d9e4\",\"dweb:/ipfs/QmVsefASUkaonZkUHNviBhQmGy3BqMZ59VirKmk32AkdJC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 674,
								"contract": "src/OpenDexV2.sol:MultiTokenPool",
								"label": "liquidityProviders",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(LiquidityProvider)669_storage)"
							},
							{
								"astId": 678,
								"contract": "src/OpenDexV2.sol:MultiTokenPool",
								"label": "totalPoolLiquidity",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 682,
								"contract": "src/OpenDexV2.sol:MultiTokenPool",
								"label": "tokenWeights",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 684,
								"contract": "src/OpenDexV2.sol:MultiTokenPool",
								"label": "governance",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 687,
								"contract": "src/OpenDexV2.sol:MultiTokenPool",
								"label": "supportedTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 690,
								"contract": "src/OpenDexV2.sol:MultiTokenPool",
								"label": "liquidityFee",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(LiquidityProvider)669_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MultiTokenPool.LiquidityProvider)",
								"numberOfBytes": "32",
								"value": "t_struct(LiquidityProvider)669_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(LiquidityProvider)669_storage": {
								"encoding": "inplace",
								"label": "struct MultiTokenPool.LiquidityProvider",
								"members": [
									{
										"astId": 668,
										"contract": "src/OpenDexV2.sol:MultiTokenPool",
										"label": "tokenBalances",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3022:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3045:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3070:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3093:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3119:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3155:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:1"
									},
									"scope": 113,
									"src": "2997:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3501:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3539:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:1"
									},
									"scope": 113,
									"src": "3485:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:1"
									},
									"scope": 113,
									"src": "3740:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "2113:1689:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 78,
							"src": "141:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 116,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 77,
										"src": "149:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 114,
							"src": "179:60:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 118,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 113,
										"src": "187:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 404,
							"sourceUnit": 657,
							"src": "240:51:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 120,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "248:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "Address",
										"nameLocations": [
											"781:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "781:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:2",
									"typeName": {
										"id": 124,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:2",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 130,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "907:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:2"
									},
									"src": "876:46:2"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:2",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 139,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1043:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1060:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1086:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:2"
									},
									"src": "1004:109:2"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1375:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1405:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 154,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1427:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:2",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "1427:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 145,
																			"src": "1444:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "1448:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1385:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:2"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:2",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1325:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 141,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1325:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1339:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:2"
									},
									"scope": 403,
									"src": "1303:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1792:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 180,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "1844:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:2",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "1844:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 182,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "1865:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 183,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1871:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 184,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "1875:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 185,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 178,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 176,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1802:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:2"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:2",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1728:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1728:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1728:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1742:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1756:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1768:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 403,
									"src": "1702:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2167:139:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2177:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 207,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$403",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2231:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2200:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:2",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "2200:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2262:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 214,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2278:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2293:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2249:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:2"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:2",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2112:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 193,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 192,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2112:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2112:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2143:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:2"
									},
									"scope": 403,
									"src": "2081:225:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "2607:370:2",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:2",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:2",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "2641:24:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 242,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 238,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$403",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 236,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2699:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:2",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2668:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "2725:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 244,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2744:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 253,
														"nodeType": "IfStatement",
														"src": "2721:160:2",
														"trueBody": {
															"id": 252,
															"nodeType": "Block",
															"src": "2763:118:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 247,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 227,
																				"src": "2821:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 248,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "2830:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 249,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 229,
																				"src": "2848:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 246,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "2788:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 251,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:2"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 255,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "2923:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 258,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2942:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 254,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2894:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 261,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:2",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2540:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2540:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2554:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2571:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:2"
									},
									"scope": 403,
									"src": "2509:468:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "3373:303:2",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "3383:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 285,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 279,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3426:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:2",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "3426:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 270,
																	"src": "3442:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "3451:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 277,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:2",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:2"
											},
											{
												"condition": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:2",
													"subExpression": {
														"arguments": [
															{
																"id": 287,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "3498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 288,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "3505:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 286,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3474:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "3469:201:2",
												"trueBody": {
													"id": 308,
													"nodeType": "Block",
													"src": "3520:150:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3554:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 295,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "3576:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:2",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "3576:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 297,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 270,
																						"src": "3592:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 298,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 299,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 293,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:2",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 291,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 304,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "3639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 305,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "3646:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 303,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3619:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:2",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3318:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 266,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3318:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3318:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "3349:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:2"
									},
									"scope": 403,
									"src": "3296:380:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "4129:559:2",
										"statements": [
											{
												"assignments": [
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "4478:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"arguments": [
														{
															"id": 327,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 324,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:2",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 477,
														"src": "4504:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 330,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4551:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 336,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4589:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 337,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 334,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:2",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "4547:135:2",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "4610:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 346,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 315,
																				"src": "4664:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$77",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 344,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 343,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4631:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 349,
															"nodeType": "RevertStatement",
															"src": "4624:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4088:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "4088:6:2"
													},
													"referencedDeclaration": 77,
													"src": "4088:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "4102:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:2"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:2"
									},
									"scope": 403,
									"src": "4059:629:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "5278:489:2",
										"statements": [
											{
												"assignments": [
													365,
													367
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5574:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 367,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 401,
														"src": "5588:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 366,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"arguments": [
														{
															"id": 373,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5635:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 370,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "5623:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5657:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 377,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5669:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 383,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 367,
																				"src": "5706:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 384,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 386,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 381,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:2",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5738:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:2",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 400,
												"nodeType": "Return",
												"src": "5650:110:2"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5222:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 355,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "5222:6:2"
													},
													"referencedDeclaration": 77,
													"src": "5222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5236:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5272:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:2"
									},
									"scope": 403,
									"src": "5189:578:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 404,
							"src": "751:5018:2",
							"usedErrors": [
								130,
								139
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 406,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "Address",
							"nameLocation": "203:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:3",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 411,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "349:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:3"
									},
									"src": "316:50:3"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:3",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 416,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "475:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:3"
									},
									"src": "452:39:3"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:3",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 419,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"src": "591:24:3"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1602:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1640:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "IfStatement",
												"src": "1612:109:3",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "1648:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 434,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1669:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 440,
															"nodeType": "RevertStatement",
															"src": "1662:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													444,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1732:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 443,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 445,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1750:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 447,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:3"
											},
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:3",
													"subExpression": {
														"id": 452,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "1793:63:3",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "1807:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "1828:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "1821:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1550:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1577:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:3"
									},
									"scope": 656,
									"src": "1531:331:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2794:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2833:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "2841:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 470,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2811:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 469,
												"id": 475,
												"nodeType": "Return",
												"src": "2804:45:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2743:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "2780:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:3"
									},
									"scope": 656,
									"src": "2705:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "3293:279:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$656",
																		"typeString": "library Address"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:3",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "3331:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3303:108:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3338:73:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 499,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$656",
																					"typeString": "library Address"
																				}
																			],
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 497,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 496,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "3359:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 502,
															"nodeType": "RevertStatement",
															"src": "3352:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													506,
													508
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3421:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 508,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "3435:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3488:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 509,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "3462:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3481:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3537:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3545:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 519,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3554:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 516,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3510:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 521,
												"nodeType": "Return",
												"src": "3503:62:3"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3211:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3227:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "3279:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:3"
									},
									"scope": 656,
									"src": "3180:392:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "3811:154:3",
										"statements": [
											{
												"assignments": [
													534,
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 534,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3822:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 533,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "3836:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 535,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3881:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3863:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3930:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "3938:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 545,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "3947:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3903:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 532,
												"id": 547,
												"nodeType": "Return",
												"src": "3896:62:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3739:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3755:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "3797:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:3"
									},
									"scope": 656,
									"src": "3711:254:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4203:156:3",
										"statements": [
											{
												"assignments": [
													560,
													562
												],
												"declarations": [
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4214:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "4228:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"arguments": [
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4275:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 563,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4255:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4324:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4341:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 568,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4297:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 558,
												"id": 573,
												"nodeType": "Return",
												"src": "4290:62:3"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4152:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4189:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:3"
									},
									"scope": 656,
									"src": "4106:253:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4783:424:3",
										"statements": [
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:3",
													"subExpression": {
														"id": 587,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4798:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4857:344:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 594,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "5045:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 598,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 578,
																				"src": "5071:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:3",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 609,
															"nodeType": "IfStatement",
															"src": "5041:119:3",
															"trueBody": {
																"id": 608,
																"nodeType": "Block",
																"src": "5096:64:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 605,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 578,
																					"src": "5138:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 604,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "5121:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 607,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 610,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5180:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 586,
															"id": 611,
															"nodeType": "Return",
															"src": "5173:17:3"
														}
													]
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4793:408:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "4807:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 590,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4829:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 589,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "4821:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4670:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4694:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4716:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:3"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4769:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:3"
									},
									"scope": 656,
									"src": "4625:582:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5509:122:3",
										"statements": [
											{
												"condition": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:3",
													"subExpression": {
														"id": 625,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5524:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5583:42:3",
													"statements": [
														{
															"expression": {
																"id": 632,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "5604:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 624,
															"id": 633,
															"nodeType": "Return",
															"src": "5597:17:3"
														}
													]
												},
												"id": 635,
												"nodeType": "IfStatement",
												"src": "5519:106:3",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "5533:44:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 628,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "5555:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 627,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5547:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 630,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:3",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5447:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:3"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5495:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:3"
									},
									"scope": 656,
									"src": "5407:224:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5798:461:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 643,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5874:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "6204:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 649,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6225:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "6218:24:3"
														}
													]
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "5870:383:3",
												"trueBody": {
													"id": 648,
													"nodeType": "Block",
													"src": "5897:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:3",
																"nodeType": "YulBlock",
																"src": "6055:133:3",
																"statements": [
																	{
																		"nativeSrc": "6073:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:3"
																			},
																			"nativeSrc": "6096:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:3",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:3",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:3"
																					},
																					"nativeSrc": "6137:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nativeSrc": "6130:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:3"
																		},
																		"nativeSrc": "6130:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 640,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:3",
																	"valueSize": 1
																}
															],
															"id": 647,
															"nodeType": "InlineAssembly",
															"src": "6046:142:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:3",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5760:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:3"
									},
									"scope": 656,
									"src": "5743:516:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 657,
							"src": "195:6066:3",
							"usedErrors": [
								411,
								416,
								419
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:3"
				},
				"id": 3
			},
			"src/OpenDexV2.sol": {
				"ast": {
					"absolutePath": "src/OpenDexV2.sol",
					"exportedSymbols": {
						"Address": [
							656
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"MultiTokenPool": [
							1096
						],
						"SafeERC20": [
							403
						]
					},
					"id": 1097,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 659,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1097,
							"sourceUnit": 78,
							"src": "60:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1097,
							"sourceUnit": 404,
							"src": "118:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MultiTokenPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1096,
							"linearizedBaseContracts": [
								1096
							],
							"name": "MultiTokenPool",
							"nameLocation": "196:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 664,
									"libraryName": {
										"id": 661,
										"name": "SafeERC20",
										"nameLocations": [
											"224:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "224:9:4"
									},
									"nodeType": "UsingForDirective",
									"src": "218:27:4",
									"typeName": {
										"id": 663,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 662,
											"name": "IERC20",
											"nameLocations": [
												"238:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "238:6:4"
										},
										"referencedDeclaration": 77,
										"src": "238:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "MultiTokenPool.LiquidityProvider",
									"id": 669,
									"members": [
										{
											"constant": false,
											"id": 668,
											"mutability": "mutable",
											"name": "tokenBalances",
											"nameLocation": "317:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 669,
											"src": "289:41:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 667,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "289:27:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LiquidityProvider",
									"nameLocation": "260:17:4",
									"nodeType": "StructDefinition",
									"scope": 1096,
									"src": "253:140:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 674,
									"mutability": "mutable",
									"name": "liquidityProviders",
									"nameLocation": "447:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1096,
									"src": "401:64:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityProvider_$669_storage_$",
										"typeString": "mapping(address => struct MultiTokenPool.LiquidityProvider)"
									},
									"typeName": {
										"id": 673,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 670,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "409:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "401:37:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityProvider_$669_storage_$",
											"typeString": "mapping(address => struct MultiTokenPool.LiquidityProvider)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 672,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 671,
												"name": "LiquidityProvider",
												"nameLocations": [
													"420:17:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 669,
												"src": "420:17:4"
											},
											"referencedDeclaration": 669,
											"src": "420:17:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LiquidityProvider_$669_storage_ptr",
												"typeString": "struct MultiTokenPool.LiquidityProvider"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3053f0b2",
									"id": 678,
									"mutability": "mutable",
									"name": "totalPoolLiquidity",
									"nameLocation": "558:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1096,
									"src": "523:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 677,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 675,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "531:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "523:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 676,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "542:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ab2f3ad4",
									"id": 682,
									"mutability": "mutable",
									"name": "tokenWeights",
									"nameLocation": "668:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1096,
									"src": "633:47:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 681,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 679,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "641:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "633:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 680,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "652:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5aa6e675",
									"id": 684,
									"mutability": "mutable",
									"name": "governance",
									"nameLocation": "751:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 1096,
									"src": "736:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 683,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "736:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c6255626",
									"id": 687,
									"mutability": "mutable",
									"name": "supportedTokens",
									"nameLocation": "785:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1096,
									"src": "768:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 685,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "768:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 686,
										"nodeType": "ArrayTypeName",
										"src": "768:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "98118cb4",
									"id": 690,
									"mutability": "mutable",
									"name": "liquidityFee",
									"nameLocation": "822:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1096,
									"src": "807:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 688,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "807:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 689,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "837:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9d278c56ba6dc86a12eefe6b43112bd6e06648eb4ec0b950ee2d783d40e2acb4",
									"id": 698,
									"name": "LiquidityAdded",
									"nameLocation": "908:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "939:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "923:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "957:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "949:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "972:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "964:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:57:4"
									},
									"src": "902:78:4"
								},
								{
									"anonymous": false,
									"eventSelector": "983e86fda8e7b1e2eae380201830eaf1cac55772e8e39583da349865e8178863",
									"id": 706,
									"name": "LiquidityRemoved",
									"nameLocation": "992:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "1025:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1009:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1043:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1035:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1058:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1050:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:57:4"
									},
									"src": "986:80:4"
								},
								{
									"anonymous": false,
									"eventSelector": "c9bf4277eb054fe4fa82ff2e3b468a6300f4bc73a13794b02287f6d8282c998c",
									"id": 712,
									"name": "TokenWeightUpdated",
									"nameLocation": "1078:18:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1105:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1097:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"indexed": false,
												"mutability": "mutable",
												"name": "newWeight",
												"nameLocation": "1120:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1112:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:34:4"
									},
									"src": "1072:59:4"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "1165:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 715,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1184:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1188:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1184:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 717,
																"name": "governance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "1198:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1184:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1176:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "1176:51:4"
											},
											{
												"id": 722,
												"nodeType": "PlaceholderStatement",
												"src": "1238:1:4"
											}
										]
									},
									"id": 724,
									"name": "onlyGovernance",
									"nameLocation": "1148:14:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1162:2:4"
									},
									"src": "1139:108:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "1341:283:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 736,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "1360:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1368:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1360:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 738,
																	"name": "_weights",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "1378:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1387:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1378:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1360:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616e6420776569676874206d69736d61746368",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9",
																"typeString": "literal_string \"Token and weight mismatch\""
															},
															"value": "Token and weight mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4dea32f6fc811bd0222b0f0df6423188b92211a03f005cd0532833896121fd9",
																"typeString": "literal_string \"Token and weight mismatch\""
															}
														],
														"id": 735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1352:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1352:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "1352:71:4"
											},
											{
												"expression": {
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 744,
														"name": "governance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "1434:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 745,
														"name": "_governance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "1447:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1434:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "1434:24:4"
											},
											{
												"expression": {
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 748,
														"name": "supportedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "1469:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 749,
														"name": "_tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "1487:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "1469:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "1469:25:4"
											},
											{
												"body": {
													"id": 773,
													"nodeType": "Block",
													"src": "1552:65:4",
													"statements": [
														{
															"expression": {
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 763,
																		"name": "tokenWeights",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "1567:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 767,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 764,
																			"name": "_tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "1580:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 766,
																		"indexExpression": {
																			"id": 765,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "1588:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1580:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1567:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 768,
																		"name": "_weights",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "1594:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 770,
																	"indexExpression": {
																		"id": 769,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 753,
																		"src": "1603:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1594:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1567:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 772,
															"nodeType": "ExpressionStatement",
															"src": "1567:38:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 756,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "1527:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 757,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1531:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1539:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1531:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1527:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"initializationExpression": {
													"assignments": [
														753
													],
													"declarations": [
														{
															"constant": false,
															"id": 753,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1520:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 774,
															"src": "1512:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 752,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1512:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 755,
													"initialValue": {
														"hexValue": "30",
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1524:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1512:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1547:3:4",
														"subExpression": {
															"id": 760,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "1547:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 762,
													"nodeType": "ExpressionStatement",
													"src": "1547:3:4"
												},
												"nodeType": "ForStatement",
												"src": "1507:110:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "1284:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1267:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 725,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1267:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 726,
													"nodeType": "ArrayTypeName",
													"src": "1267:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "_weights",
												"nameLocation": "1310:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1293:25:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 728,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1293:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 729,
													"nodeType": "ArrayTypeName",
													"src": "1293:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "_governance",
												"nameLocation": "1328:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1320:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:74:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1341:0:4"
									},
									"scope": 1096,
									"src": "1255:369:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "1737:599:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 785,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "1773:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 784,
																"name": "isSupportedToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "1756:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1756:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206e6f7420737570706f72746564",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1781:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
																"typeString": "literal_string \"Token not supported\""
															},
															"value": "Token not supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
																"typeString": "literal_string \"Token not supported\""
															}
														],
														"id": 783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1748:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1748:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "1748:55:4"
											},
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "1824:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 851,
														"src": "1816:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 790,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1816:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 792,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "1831:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 793,
																	"name": "liquidityFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "1840:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1831:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 795,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1830:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1856:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "1830:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1816:45:4"
											},
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "amountAfterFee",
														"nameLocation": "1914:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 851,
														"src": "1906:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 799,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1906:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 804,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 801,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "1931:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 802,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1940:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1931:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1906:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 809,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1987:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1991:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1987:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 813,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2007:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MultiTokenPool_$1096",
																		"typeString": "contract MultiTokenPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MultiTokenPool_$1096",
																		"typeString": "contract MultiTokenPool"
																	}
																],
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1999:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 811,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1999:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1999:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "amountAfterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "2014:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 806,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "1963:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 805,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1956:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1956:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1970:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "1956:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1956:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "1956:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 822,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2071:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2075:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2071:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "governance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "2083:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 825,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "2095:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 819,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "2047:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 818,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2040:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2040:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2054:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "2040:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "2040:59:4"
											},
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 828,
																	"name": "liquidityProviders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "2138:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityProvider_$669_storage_$",
																		"typeString": "mapping(address => struct MultiTokenPool.LiquidityProvider storage ref)"
																	}
																},
																"id": 831,
																"indexExpression": {
																	"expression": {
																		"id": 829,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2157:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2161:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2157:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2138:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityProvider_$669_storage",
																	"typeString": "struct MultiTokenPool.LiquidityProvider storage ref"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2169:13:4",
															"memberName": "tokenBalances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 668,
															"src": "2138:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 834,
														"indexExpression": {
															"id": 833,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "2183:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2138:51:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 835,
														"name": "amountAfterFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "2193:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2138:69:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "2138:69:4"
											},
											{
												"expression": {
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 838,
															"name": "totalPoolLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "2218:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 840,
														"indexExpression": {
															"id": 839,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "2237:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2218:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 841,
														"name": "amountAfterFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "2247:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2218:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "2218:43:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 845,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2294:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2298:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2294:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "2306:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "amountAfterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "2313:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 844,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "2279:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2279:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "EmitStatement",
												"src": "2274:54:4"
											}
										]
									},
									"functionSelector": "56688700",
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "1684:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1705:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1697:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1720:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1712:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1696:31:4"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:0:4"
									},
									"scope": 1096,
									"src": "1675:661:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "2454:417:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 861,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "2490:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 860,
																"name": "isSupportedToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "2473:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2473:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206e6f7420737570706f72746564",
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2498:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
																"typeString": "literal_string \"Token not supported\""
															},
															"value": "Token not supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
																"typeString": "literal_string \"Token not supported\""
															}
														],
														"id": 859,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2465:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2465:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "2465:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 867,
																			"name": "liquidityProviders",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "2539:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityProvider_$669_storage_$",
																				"typeString": "mapping(address => struct MultiTokenPool.LiquidityProvider storage ref)"
																			}
																		},
																		"id": 870,
																		"indexExpression": {
																			"expression": {
																				"id": 868,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2558:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2562:6:4",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2558:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2539:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityProvider_$669_storage",
																			"typeString": "struct MultiTokenPool.LiquidityProvider storage ref"
																		}
																	},
																	"id": 871,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2570:13:4",
																	"memberName": "tokenBalances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 668,
																	"src": "2539:44:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 873,
																"indexExpression": {
																	"id": 872,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "2584:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2539:51:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 874,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "2594:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2539:61:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2602:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2531:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2531:94:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "2531:94:4"
											},
											{
												"expression": {
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 879,
																	"name": "liquidityProviders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "2638:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityProvider_$669_storage_$",
																		"typeString": "mapping(address => struct MultiTokenPool.LiquidityProvider storage ref)"
																	}
																},
																"id": 882,
																"indexExpression": {
																	"expression": {
																		"id": 880,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2657:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2661:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2657:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2638:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityProvider_$669_storage",
																	"typeString": "struct MultiTokenPool.LiquidityProvider storage ref"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2669:13:4",
															"memberName": "tokenBalances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 668,
															"src": "2638:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 885,
														"indexExpression": {
															"id": 884,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "2683:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2638:51:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 886,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "2693:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2638:61:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "2638:61:4"
											},
											{
												"expression": {
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 889,
															"name": "totalPoolLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "2710:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 891,
														"indexExpression": {
															"id": 890,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "2729:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2710:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 892,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "2739:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2710:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "2710:35:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 899,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2785:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2789:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2785:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "2797:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 896,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "2765:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 895,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2758:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2758:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2772:12:4",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "2758:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2758:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "2758:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 905,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2837:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2837:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "2849:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 908,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "2856:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 904,
														"name": "LiquidityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "2820:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2820:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "EmitStatement",
												"src": "2815:48:4"
											}
										]
									},
									"functionSelector": "a201ccf6",
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "2398:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2422:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2414:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2437:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "2429:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2413:31:4"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:4"
									},
									"scope": 1096,
									"src": "2389:482:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "2987:199:4",
										"statements": [
											{
												"body": {
													"id": 939,
													"nodeType": "Block",
													"src": "3051:105:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 930,
																		"name": "supportedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "3070:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 932,
																	"indexExpression": {
																		"id": 931,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "3086:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3070:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 933,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "3092:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3070:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 938,
															"nodeType": "IfStatement",
															"src": "3066:79:4",
															"trueBody": {
																"id": 937,
																"nodeType": "Block",
																"src": "3099:46:4",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3125:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 918,
																		"id": 936,
																		"nodeType": "Return",
																		"src": "3118:11:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "3018:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 924,
															"name": "supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "3022:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3038:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3022:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3018:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 940,
												"initializationExpression": {
													"assignments": [
														920
													],
													"declarations": [
														{
															"constant": false,
															"id": 920,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3011:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 940,
															"src": "3003:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 919,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3003:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 922,
													"initialValue": {
														"hexValue": "30",
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3015:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3003:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3046:3:4",
														"subExpression": {
															"id": 927,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "3046:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 929,
													"nodeType": "ExpressionStatement",
													"src": "3046:3:4"
												},
												"nodeType": "ForStatement",
												"src": "2998:158:4"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3173:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 918,
												"id": 942,
												"nodeType": "Return",
												"src": "3166:12:4"
											}
										]
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSupportedToken",
									"nameLocation": "2926:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2951:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "2943:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2943:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:15:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "2981:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 916,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:4"
									},
									"scope": 1096,
									"src": "2917:269:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "3341:71:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 953,
																"name": "liquidityProviders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "3359:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityProvider_$669_storage_$",
																	"typeString": "mapping(address => struct MultiTokenPool.LiquidityProvider storage ref)"
																}
															},
															"id": 955,
															"indexExpression": {
																"id": 954,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "3378:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3359:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityProvider_$669_storage",
																"typeString": "struct MultiTokenPool.LiquidityProvider storage ref"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3384:13:4",
														"memberName": "tokenBalances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 668,
														"src": "3359:38:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 958,
													"indexExpression": {
														"id": 957,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3398:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3359:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 952,
												"id": 959,
												"nodeType": "Return",
												"src": "3352:52:4"
											}
										]
									},
									"functionSelector": "6805d6ad",
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserBalance",
									"nameLocation": "3265:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3288:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "3280:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3280:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3302:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "3294:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:29:4"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "3332:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3331:9:4"
									},
									"scope": 1096,
									"src": "3256:156:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "3569:168:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 972,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "3605:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 971,
																"name": "isSupportedToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "3588:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3588:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206e6f7420737570706f72746564",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3613:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
																"typeString": "literal_string \"Token not supported\""
															},
															"value": "Token not supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
																"typeString": "literal_string \"Token not supported\""
															}
														],
														"id": 970,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3580:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3580:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "3580:55:4"
											},
											{
												"expression": {
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 977,
															"name": "tokenWeights",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3646:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 979,
														"indexExpression": {
															"id": 978,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3659:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3646:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 980,
														"name": "newWeight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "3668:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3646:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "3646:31:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 984,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3712:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "newWeight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "3719:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 983,
														"name": "TokenWeightUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "3693:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3693:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "EmitStatement",
												"src": "3688:41:4"
											}
										]
									},
									"functionSelector": "21faf184",
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 968,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 967,
												"name": "onlyGovernance",
												"nameLocations": [
													"3554:14:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 724,
												"src": "3554:14:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3554:14:4"
										}
									],
									"name": "updateTokenWeight",
									"nameLocation": "3493:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3519:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3511:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "newWeight",
												"nameLocation": "3534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "3526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3510:34:4"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3569:0:4"
									},
									"scope": 1096,
									"src": "3484:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "3884:156:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3903:24:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "3921:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 999,
																	"name": "isSupportedToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "3904:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3904:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616c726561647920737570706f72746564",
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3929:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944",
																"typeString": "literal_string \"Token already supported\""
															},
															"value": "Token already supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944",
																"typeString": "literal_string \"Token already supported\""
															}
														],
														"id": 998,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3895:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3895:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "3895:60:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1009,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "3987:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1006,
															"name": "supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "3966:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3982:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3966:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3966:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "3966:27:4"
											},
											{
												"expression": {
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1012,
															"name": "tokenWeights",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "4004:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1014,
														"indexExpression": {
															"id": 1013,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "4017:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4004:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1015,
														"name": "weight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "4026:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4004:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "4004:28:4"
											}
										]
									},
									"functionSelector": "4d8e3d3b",
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 996,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 995,
												"name": "onlyGovernance",
												"nameLocations": [
													"3869:14:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 724,
												"src": "3869:14:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3869:14:4"
										}
									],
									"name": "addSupportedToken",
									"nameLocation": "3811:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3837:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "3829:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "3852:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "3844:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3844:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3828:31:4"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3884:0:4"
									},
									"scope": 1096,
									"src": "3802:238:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "4173:501:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1028,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "4209:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1027,
																"name": "isSupportedToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "4192:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206e6f7420737570706f72746564",
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4217:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
																"typeString": "literal_string \"Token not supported\""
															},
															"value": "Token not supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047",
																"typeString": "literal_string \"Token not supported\""
															}
														],
														"id": 1026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4184:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4184:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "4184:55:4"
											},
											{
												"body": {
													"id": 1068,
													"nodeType": "Block",
													"src": "4303:292:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1044,
																		"name": "supportedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "4322:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1046,
																	"indexExpression": {
																		"id": 1045,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "4338:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4322:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1047,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "4344:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4322:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1067,
															"nodeType": "IfStatement",
															"src": "4318:266:4",
															"trueBody": {
																"id": 1066,
																"nodeType": "Block",
																"src": "4351:233:4",
																"statements": [
																	{
																		"expression": {
																			"id": 1058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1049,
																					"name": "supportedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 687,
																					"src": "4370:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1051,
																				"indexExpression": {
																					"id": 1050,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1034,
																					"src": "4386:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4370:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1052,
																					"name": "supportedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 687,
																					"src": "4391:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1057,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1056,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1053,
																							"name": "supportedTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 687,
																							"src": "4407:15:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 1054,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4423:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "4407:22:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1055,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4432:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4407:26:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4391:43:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "4370:64:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1059,
																		"nodeType": "ExpressionStatement",
																		"src": "4370:64:4"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1060,
																					"name": "supportedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 687,
																					"src": "4496:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4512:3:4",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "4496:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 1063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4496:21:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1064,
																		"nodeType": "ExpressionStatement",
																		"src": "4496:21:4"
																	},
																	{
																		"id": 1065,
																		"nodeType": "Break",
																		"src": "4563:5:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1037,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "4270:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1038,
															"name": "supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "4274:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4290:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4274:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4270:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1069,
												"initializationExpression": {
													"assignments": [
														1034
													],
													"declarations": [
														{
															"constant": false,
															"id": 1034,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4263:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1069,
															"src": "4255:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1033,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4255:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1036,
													"initialValue": {
														"hexValue": "30",
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4267:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4255:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4298:3:4",
														"subExpression": {
															"id": 1041,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "4298:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1043,
													"nodeType": "ExpressionStatement",
													"src": "4298:3:4"
												},
												"nodeType": "ForStatement",
												"src": "4250:345:4"
											},
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4605:26:4",
													"subExpression": {
														"baseExpression": {
															"id": 1070,
															"name": "tokenWeights",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "4612:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1072,
														"indexExpression": {
															"id": 1071,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "4625:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4612:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "4605:26:4"
											}
										]
									},
									"functionSelector": "76319190",
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1024,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1023,
												"name": "onlyGovernance",
												"nameLocations": [
													"4158:14:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 724,
												"src": "4158:14:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4158:14:4"
										}
									],
									"name": "removeSupportedToken",
									"nameLocation": "4113:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4142:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "4134:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4134:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4133:15:4"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4173:0:4"
									},
									"scope": 1096,
									"src": "4104:570:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "4810:117:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1084,
																"name": "_liquidityFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "4829:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4846:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "4829:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46656520746f6f2068696768",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4851:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															},
															"value": "Fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															}
														],
														"id": 1083,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4821:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "4821:45:4"
											},
											{
												"expression": {
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1090,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "4891:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1091,
														"name": "_liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "4906:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4891:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "4891:28:4"
											}
										]
									},
									"functionSelector": "357bf15c",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1081,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1080,
												"name": "onlyGovernance",
												"nameLocations": [
													"4795:14:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 724,
												"src": "4795:14:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4795:14:4"
										}
									],
									"name": "setLiquidityFee",
									"nameLocation": "4747:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "_liquidityFee",
												"nameLocation": "4771:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "4763:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4763:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4762:23:4"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4810:0:4"
									},
									"scope": 1096,
									"src": "4738:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1097,
							"src": "187:4743:4",
							"usedErrors": [
								130,
								411,
								416,
								419
							],
							"usedEvents": [
								698,
								706,
								712
							]
						}
					],
					"src": "33:4899:4"
				},
				"id": 4
			}
		}
	}
}